{"ast":null,"code":"import Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nconst moment = extendMoment(Moment);\nconst checkList = [{\n  'checkDay': 'day'\n}, {\n  'checkWeek': 'week'\n}, {\n  'checkMonth': 'month'\n}, {\n  'checkYear': 'year'\n}];\nexport function checkWeek(d) {\n  const sunday = moment().startOf('week');\n  const saturday = moment().endOf('week');\n  const today = moment(d);\n  const range = moment().range(sunday, saturday);\n  if (today.within(range)) return true;\n  return false;\n}\nexport function checkMonth(d) {\n  const fistday = moment().startOf('month');\n  const lastday = moment().endOf('month');\n  const today = moment(d);\n  const range = moment().range(fistday, lastday);\n  if (today.within(range)) return true;\n  return false;\n}","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/utils/calculation.js"],"names":["Moment","extendMoment","moment","checkList","checkWeek","d","sunday","startOf","saturday","endOf","today","range","within","checkMonth","fistday","lastday"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,MAAMC,MAAM,GAAGD,YAAY,CAACD,MAAD,CAA3B;AAEA,MAAMG,SAAS,GAAG,CAChB;AAAE,cAAY;AAAd,CADgB,EAEhB;AAAE,eAAa;AAAf,CAFgB,EAGhB;AAAE,gBAAc;AAAhB,CAHgB,EAIhB;AAAE,eAAa;AAAf,CAJgB,CAAlB;AAOA,OAAO,SAASC,SAAT,CAAmBC,CAAnB,EAAsB;AAC3B,QAAMC,MAAM,GAAGJ,MAAM,GAAGK,OAAT,CAAiB,MAAjB,CAAf;AACA,QAAMC,QAAQ,GAAGN,MAAM,GAAGO,KAAT,CAAe,MAAf,CAAjB;AACA,QAAMC,KAAK,GAAGR,MAAM,CAACG,CAAD,CAApB;AACA,QAAMM,KAAK,GAAGT,MAAM,GAAGS,KAAT,CAAeL,MAAf,EAAuBE,QAAvB,CAAd;AAEA,MAAIE,KAAK,CAACE,MAAN,CAAaD,KAAb,CAAJ,EAAyB,OAAO,IAAP;AACzB,SAAO,KAAP;AACD;AAED,OAAO,SAASE,UAAT,CAAoBR,CAApB,EAAuB;AAC5B,QAAMS,OAAO,GAAGZ,MAAM,GAAGK,OAAT,CAAiB,OAAjB,CAAhB;AACA,QAAMQ,OAAO,GAAGb,MAAM,GAAGO,KAAT,CAAe,OAAf,CAAhB;AACA,QAAMC,KAAK,GAAGR,MAAM,CAACG,CAAD,CAApB;AACA,QAAMM,KAAK,GAAGT,MAAM,GAAGS,KAAT,CAAeG,OAAf,EAAwBC,OAAxB,CAAd;AAEA,MAAIL,KAAK,CAACE,MAAN,CAAaD,KAAb,CAAJ,EAAyB,OAAO,IAAP;AACzB,SAAO,KAAP;AACD","sourcesContent":["import Moment from 'moment';\nimport { extendMoment } from 'moment-range';\n\nconst moment = extendMoment(Moment);\n\nconst checkList = [\n  { 'checkDay': 'day' },\n  { 'checkWeek': 'week' },\n  { 'checkMonth': 'month' },\n  { 'checkYear': 'year' },\n]\n\nexport function checkWeek(d) {\n  const sunday = moment().startOf('week');\n  const saturday = moment().endOf('week');\n  const today = moment(d);\n  const range = moment().range(sunday, saturday);\n\n  if (today.within(range)) return true;\n  return false;\n}\n\nexport function checkMonth(d) {\n  const fistday = moment().startOf('month');\n  const lastday = moment().endOf('month');\n  const today = moment(d);\n  const range = moment().range(fistday, lastday);\n\n  if (today.within(range)) return true;\n  return false;\n}"]},"metadata":{},"sourceType":"module"}