{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { newDateArr, dbDateArr, checkWeek, sortDateDescending } from '../utils/format';\nimport { whiteTheme } from '../utils/colorTheme.js';\nimport Total from './common/Total';\nimport Transaction from './Transaction';\nimport { AppBar, Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  appbar: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.secondary.main\n  }\n}));\n\nconst Report = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all');\n  const timeFilters = ['day', 'week', 'month', 'year'];\n  const transFilters = ['all', 'income', 'expense'];\n  const date = newDateArr(new Date());\n  const amounts = [];\n  let counter = 0;\n  const classes = useStyles();\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(ThemeProvider, {\n    theme: whiteTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.appbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    \"aria-label\": \"disabled tabs example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, timeFilters.map((timeFilter, index) => React.createElement(Tab, {\n    key: timeFilter,\n    label: timeFilter,\n    onClick: () => setValue(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))))), React.createElement(Total, {\n    text: `${timeFilters[value]}ly balance`,\n    amounts: amounts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(ButtonGroup, {\n    fullWidth: true,\n    disableRipple: true // variant=\"text\"\n    ,\n    color: \"primary\",\n    \"aria-label\": \"outlined primary button group\",\n    style: {\n      marginBottom: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, transFilters.map(transFilter => React.createElement(Button, {\n    key: transFilter,\n    style: {\n      borderRadius: 0\n    },\n    disableElevation: true,\n    disableFocusRipple: true,\n    disableRipple: true,\n    variant: \"contained\" // variant={selected === transFilter ? 'contained' : null}\n    ,\n    onClick: () => setSelected(transFilter),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, transFilter)))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, transactions.filter(transaction => {\n    const data = dbDateArr(transaction.date);\n    if (value === 0) return data[2] === date[2];\n    if (value === 1) return checkWeek(transaction.date);\n    if (value === 2) return data[1] === date[1];\n    if (value === 3) return data[0] === date[0];\n    return transaction;\n  }).filter(transaction => {\n    amounts.push(transaction.amount);\n\n    switch (selected) {\n      case 'income':\n        return transaction.amount > 0;\n\n      case 'expense':\n        return transaction.amount < 0;\n\n      default:\n        return transaction;\n    }\n  }).sort((a, b) => sortDateDescending(a, b)).map(transaction => {\n    counter++;\n    return React.createElement(Transaction, {\n      key: transaction._id,\n      transaction: transaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    });\n  }), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"No \", selected !== 'all' && selected, \" transaction of the \", timeFilters[value])) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }) : 'No transaction')));\n};\n\nexport default Report;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx"],"names":["React","Fragment","useState","useEffect","useContext","GlobalContext","newDateArr","dbDateArr","checkWeek","sortDateDescending","whiteTheme","Total","Transaction","AppBar","Tabs","Tab","Button","ButtonGroup","CircularProgress","ThemeProvider","makeStyles","useStyles","theme","appbar","flexGrow","backgroundColor","palette","secondary","main","Report","loading","transactions","getTransactions","value","setValue","selected","setSelected","timeFilters","transFilters","date","Date","amounts","counter","classes","map","timeFilter","index","marginBottom","transFilter","borderRadius","length","filter","transaction","data","push","amount","sort","a","b","_id"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { newDateArr, dbDateArr, checkWeek, sortDateDescending } from '../utils/format';\nimport { whiteTheme } from '../utils/colorTheme.js';\nimport Total from './common/Total';\nimport Transaction from './Transaction';\nimport { AppBar, Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  appbar: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nconst Report = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all');\n\n  const timeFilters = ['day', 'week', 'month', 'year'];\n  const transFilters = ['all', 'income', 'expense'];\n  \n  const date = newDateArr(new Date());\n  const amounts = [];\n  let counter = 0;\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n\n  return (\n    <Fragment>\n      <ThemeProvider theme={whiteTheme}>\n        <div className={classes.appbar}>\n          <AppBar position=\"static\">\n            <Tabs\n              value={value} variant='fullWidth'\n              indicatorColor=\"primary\"\n              textColor='primary'\n              aria-label=\"disabled tabs example\"\n            >\n              {timeFilters.map((timeFilter, index) => \n                <Tab \n                  key={timeFilter} label={timeFilter} \n                  onClick={() => setValue(index)} \n                  disableFocusRipple disableRipple\n                />\n              )}\n            </Tabs>\n          </AppBar>\n        </div>\n\n      <Total text={`${timeFilters[value]}ly balance`} amounts={amounts} />\n\n      <ButtonGroup\n        fullWidth disableRipple\n        // variant=\"text\"\n        color='primary'\n        aria-label='outlined primary button group'\n        style={{ marginBottom: '10px' }}\n      >\n        {transFilters.map(transFilter => (\n          <Button\n            key={transFilter}\n            style={{ borderRadius: 0 }}\n            disableElevation disableFocusRipple disableRipple\n            variant='contained'\n            // variant={selected === transFilter ? 'contained' : null}\n\n            onClick={() => setSelected(transFilter)}\n          >\n            {transFilter}\n          </Button>\n        ))}\n      </ButtonGroup>\n      </ThemeProvider>\n\n      <div className='container'>\n        {transactions.length > 0 ? (\n          <ul className='list'>\n            {transactions\n              .filter(transaction => {\n                const data = dbDateArr(transaction.date);\n                if (value === 0) return data[2] === date[2];\n                if (value === 1) return checkWeek(transaction.date);\n                if (value === 2) return data[1] === date[1];\n                if (value === 3) return data[0] === date[0];\n                return transaction;\n              })\n              .filter(transaction => {\n                amounts.push(transaction.amount);\n                switch (selected) {\n                  case 'income':\n                    return transaction.amount > 0;\n                  case 'expense':\n                    return transaction.amount < 0;\n                  default:\n                    return transaction;\n                }\n              })\n              .sort((a, b) => sortDateDescending(a, b))\n              .map(transaction => {\n                counter++;\n                return (\n                  <Transaction key={transaction._id} transaction={transaction} />\n                );\n              })}\n            {counter === 0 && (\n              <div className='list-status'>\n                No {selected !== 'all' && selected} transaction\n                of the {timeFilters[value]}\n              </div>\n            )}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? <CircularProgress color='primary'/>\n              : 'No transaction'}\n          </div>\n        )}\n      </div>\n\n\n    </Fragment>\n  );\n}\n\nexport default Report;"]},"metadata":{},"sourceType":"module"}