{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport { Tabs, Tab, CircularProgress } from '@material-ui/core';\n\nconst Statistics = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const timeFilters = ['week', 'month', 'year'];\n  const incomeLists = [];\n  const expenseLists = [];\n  const today = moment();\n\n  const groupBy = function (xs, key) {\n    return xs.reduce(function (rv, x) {\n      (rv[x[key]] = rv[x[key]] || []).push(x);\n      return rv;\n    }, {});\n  };\n\n  const sortDate = (time, filter) => {\n    const lists = transactions.filter(transaction => transaction.amount > 0).filter(transaction => moment(transaction.date).isSame(today, time));\n    return groupBy(lists, moment(lists.date).format(filter));\n  };\n\n  console.log(sortDate('year', 'MMMM'));\n\n  const income = (time, filter) => {\n    const temp = {};\n    transactions.filter(transaction => transaction.amount > 0).filter(transaction => moment(transaction.date).isSame(today, time)).map(transaction => {\n      const date = moment(transaction.date).format(filter);\n      return temp.hasOwnProperty(date) ? temp[date] += transaction.amount : temp[date] = transaction.amount;\n    });\n    Object.entries(temp).forEach(([key, value]) => {\n      incomeLists.push({\n        'text': key,\n        'amount': value\n      });\n    });\n  };\n\n  const expense = (time, filter) => {\n    const temp = {};\n    transactions.filter(transaction => transaction.amount < 0).filter(transaction => moment(transaction.date).isSame(today, time)).map(transaction => {\n      const date = moment(transaction.date).format(filter);\n      return temp.hasOwnProperty(date) ? temp[date] += transaction.amount : temp[date] = transaction.amount;\n    });\n    Object.entries(temp).forEach(([key, value]) => {\n      expenseLists.push({\n        'text': key,\n        'amount': value\n      });\n    });\n  };\n\n  if (value === 0) {\n    expense('week', 'e');\n    income('week', 'e');\n  } else if (value === 1) {\n    expense('month', 'w');\n    income('month', 'w');\n  } else if (value === 2) {\n    expense('year', 'MM');\n    income('year', 'MM');\n  }\n\n  ;\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"plus-bg time-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    \"aria-label\": \"time selectors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, timeFilters.map((timeFilter, index) => React.createElement(Tab, {\n    key: timeFilter,\n    label: timeFilter,\n    onClick: () => setValue(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"plus-bg box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container box-incomeExpense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, incomeLists.concat(expenseLists).sort((a, b) => a.text < b.text ? -1 : 1).map((list, index) => {\n    if (value === 0) {\n      list.text = moment().day(list.text).format('dddd');\n    }\n\n    if (value === 1) {\n      list.text = `${moment().day(0).week(list.text).format('D MMM')} - ${moment().day(6).week(list.text).format('D MMM')}`;\n    }\n\n    if (value === 2) {\n      list.text = moment().month(list.text - 1).format('MMMM');\n    }\n\n    return React.createElement(Transaction, {\n      key: index,\n      transaction: list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    });\n  })) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }) : 'No transaction')));\n};\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx"],"names":["React","Fragment","useState","useEffect","useContext","moment","GlobalContext","Transaction","Tabs","Tab","CircularProgress","Statistics","loading","transactions","getTransactions","value","setValue","timeFilters","incomeLists","expenseLists","today","groupBy","xs","key","reduce","rv","x","push","sortDate","time","filter","lists","transaction","amount","date","isSame","format","console","log","income","temp","map","hasOwnProperty","Object","entries","forEach","expense","timeFilter","index","length","concat","sort","a","b","text","list","day","week","month"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,UAA/C,QAAiE,OAAjE;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,gBAApB,QAA4C,mBAA5C;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAA6CV,UAAU,CAACE,aAAD,CAA7D;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMe,WAAW,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAApB;AACA,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,YAAY,GAAG,EAArB;AACA,QAAMC,KAAK,GAAGf,MAAM,EAApB;;AAEA,QAAMgB,OAAO,GAAG,UAASC,EAAT,EAAaC,GAAb,EAAkB;AAChC,WAAOD,EAAE,CAACE,MAAH,CAAU,UAASC,EAAT,EAAaC,CAAb,EAAgB;AAC/B,OAACD,EAAE,CAACC,CAAC,CAACH,GAAD,CAAF,CAAF,GAAaE,EAAE,CAACC,CAAC,CAACH,GAAD,CAAF,CAAF,IAAc,EAA5B,EAAgCI,IAAhC,CAAqCD,CAArC;AACA,aAAOD,EAAP;AACD,KAHM,EAGJ,EAHI,CAAP;AAID,GALD;;AAOA,QAAMG,QAAQ,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACjC,UAAMC,KAAK,GAAGlB,YAAY,CACvBiB,MADW,CACJE,WAAW,IAAIA,WAAW,CAACC,MAAZ,GAAqB,CADhC,EAEXH,MAFW,CAEJE,WAAW,IAAI3B,MAAM,CAAC2B,WAAW,CAACE,IAAb,CAAN,CAAyBC,MAAzB,CAAgCf,KAAhC,EAAuCS,IAAvC,CAFX,CAAd;AAIA,WAAOR,OAAO,CAACU,KAAD,EAAQ1B,MAAM,CAAC0B,KAAK,CAACG,IAAP,CAAN,CAAmBE,MAAnB,CAA0BN,MAA1B,CAAR,CAAd;AACD,GAND;;AAOAO,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAAC,MAAD,EAAS,MAAT,CAApB;;AAEA,QAAMW,MAAM,GAAG,CAACV,IAAD,EAAOC,MAAP,KAAkB;AAC/B,UAAMU,IAAI,GAAG,EAAb;AACA3B,IAAAA,YAAY,CACTiB,MADH,CACUE,WAAW,IAAIA,WAAW,CAACC,MAAZ,GAAqB,CAD9C,EAEGH,MAFH,CAEUE,WAAW,IAAI3B,MAAM,CAAC2B,WAAW,CAACE,IAAb,CAAN,CAAyBC,MAAzB,CAAgCf,KAAhC,EAAuCS,IAAvC,CAFzB,EAGGY,GAHH,CAGOT,WAAW,IAAI;AAClB,YAAME,IAAI,GAAG7B,MAAM,CAAC2B,WAAW,CAACE,IAAb,CAAN,CAAyBE,MAAzB,CAAgCN,MAAhC,CAAb;AACA,aAAOU,IAAI,CAACE,cAAL,CAAoBR,IAApB,IACHM,IAAI,CAACN,IAAD,CAAJ,IAAcF,WAAW,CAACC,MADvB,GAEHO,IAAI,CAACN,IAAD,CAAJ,GAAaF,WAAW,CAACC,MAF7B;AAGD,KARH;AASAU,IAAAA,MAAM,CAACC,OAAP,CAAeJ,IAAf,EAAqBK,OAArB,CAA6B,CAAC,CAACtB,GAAD,EAAMR,KAAN,CAAD,KAAkB;AAC7CG,MAAAA,WAAW,CAACS,IAAZ,CAAiB;AAAE,gBAAQJ,GAAV;AAAe,kBAAUR;AAAzB,OAAjB;AACD,KAFD;AAGD,GAdD;;AAgBA,QAAM+B,OAAO,GAAG,CAACjB,IAAD,EAAOC,MAAP,KAAkB;AAChC,UAAMU,IAAI,GAAG,EAAb;AACA3B,IAAAA,YAAY,CACTiB,MADH,CACUE,WAAW,IAAIA,WAAW,CAACC,MAAZ,GAAqB,CAD9C,EAEGH,MAFH,CAEUE,WAAW,IAAI3B,MAAM,CAAC2B,WAAW,CAACE,IAAb,CAAN,CAAyBC,MAAzB,CAAgCf,KAAhC,EAAuCS,IAAvC,CAFzB,EAGGY,GAHH,CAGOT,WAAW,IAAI;AAClB,YAAME,IAAI,GAAG7B,MAAM,CAAC2B,WAAW,CAACE,IAAb,CAAN,CAAyBE,MAAzB,CAAgCN,MAAhC,CAAb;AACA,aAAOU,IAAI,CAACE,cAAL,CAAoBR,IAApB,IACHM,IAAI,CAACN,IAAD,CAAJ,IAAcF,WAAW,CAACC,MADvB,GAEHO,IAAI,CAACN,IAAD,CAAJ,GAAaF,WAAW,CAACC,MAF7B;AAGD,KARH;AASAU,IAAAA,MAAM,CAACC,OAAP,CAAeJ,IAAf,EAAqBK,OAArB,CAA6B,CAAC,CAACtB,GAAD,EAAMR,KAAN,CAAD,KAAkB;AAC7CI,MAAAA,YAAY,CAACQ,IAAb,CAAkB;AAAE,gBAAQJ,GAAV;AAAe,kBAAUR;AAAzB,OAAlB;AACD,KAFD;AAGD,GAdD;;AAgBA,MAAIA,KAAK,KAAK,CAAd,EAAiB;AACf+B,IAAAA,OAAO,CAAC,MAAD,EAAS,GAAT,CAAP;AAAsBP,IAAAA,MAAM,CAAC,MAAD,EAAS,GAAT,CAAN;AACvB,GAFD,MAEO,IAAIxB,KAAK,KAAK,CAAd,EAAiB;AACtB+B,IAAAA,OAAO,CAAC,OAAD,EAAU,GAAV,CAAP;AAAuBP,IAAAA,MAAM,CAAC,OAAD,EAAU,GAAV,CAAN;AACxB,GAFM,MAEA,IAAIxB,KAAK,KAAK,CAAd,EAAiB;AACtB+B,IAAAA,OAAO,CAAC,MAAD,EAAS,IAAT,CAAP;AAAuBP,IAAAA,MAAM,CAAC,MAAD,EAAS,IAAT,CAAN;AACxB;;AAAA;AAEDpC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,eAAe,GADD,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,KAAb;AAAoB,IAAA,OAAO,EAAC,WAA5B;AAAwC,kBAAW,gBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,WAAW,CAACwB,GAAZ,CAAgB,CAACM,UAAD,EAAaC,KAAb,KACf,oBAAC,GAAD;AACE,IAAA,GAAG,EAAED,UADP;AACmB,IAAA,KAAK,EAAEA,UAD1B;AAEE,IAAA,OAAO,EAAE,MAAM/B,QAAQ,CAACgC,KAAD,CAFzB;AAGE,IAAA,kBAAkB,MAHpB;AAGqB,IAAA,aAAa,MAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF,EAaE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,EAmBE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnC,YAAY,CAACoC,MAAb,GAAsB,CAAtB,GACC;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/B,WAAW,CAACgC,MAAZ,CAAmB/B,YAAnB,EACEgC,IADF,CACO,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAmB,CAAC,CAApB,GAAwB,CADzC,EAEEb,GAFF,CAEM,CAACc,IAAD,EAAOP,KAAP,KAAiB;AACpB,QAAIjC,KAAK,KAAK,CAAd,EAAiB;AACfwC,MAAAA,IAAI,CAACD,IAAL,GAAYjD,MAAM,GAAGmD,GAAT,CAAaD,IAAI,CAACD,IAAlB,EAAwBlB,MAAxB,CAA+B,MAA/B,CAAZ;AACD;;AACD,QAAIrB,KAAK,KAAK,CAAd,EAAiB;AACfwC,MAAAA,IAAI,CAACD,IAAL,GAAa,GAAEjD,MAAM,GAAGmD,GAAT,CAAa,CAAb,EAAgBC,IAAhB,CAAqBF,IAAI,CAACD,IAA1B,EAAgClB,MAAhC,CAAuC,OAAvC,CAAgD,MAAK/B,MAAM,GAAGmD,GAAT,CAAa,CAAb,EAAgBC,IAAhB,CAAqBF,IAAI,CAACD,IAA1B,EAAgClB,MAAhC,CAAuC,OAAvC,CAAgD,EAApH;AACD;;AACD,QAAIrB,KAAK,KAAK,CAAd,EAAiB;AACfwC,MAAAA,IAAI,CAACD,IAAL,GAAYjD,MAAM,GAAGqD,KAAT,CAAeH,IAAI,CAACD,IAAL,GAAY,CAA3B,EAA8BlB,MAA9B,CAAqC,MAArC,CAAZ;AACD;;AAED,WAAO,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEY,KAAlB;AAAyB,MAAA,WAAW,EAAEO,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAdF,CADH,CADD,GA2BC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG3C,OAAO,GACJ,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,GAEJ,gBAHN,CA5BJ,CAnBF,CADF;AAyDD,CA9HD;;AAgIA,eAAeD,UAAf","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport { Tabs, Tab, CircularProgress } from '@material-ui/core';\n\nconst Statistics = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const timeFilters = ['week', 'month', 'year'];\n  const incomeLists = [];\n  const expenseLists = [];\n  const today = moment();\n\n  const groupBy = function(xs, key) {\n    return xs.reduce(function(rv, x) {\n      (rv[x[key]] = rv[x[key]] || []).push(x);\n      return rv;\n    }, {});\n  };\n\n  const sortDate = (time, filter) => {\n    const lists = transactions\n      .filter(transaction => transaction.amount > 0)\n      .filter(transaction => moment(transaction.date).isSame(today, time))\n\n    return groupBy(lists, moment(lists.date).format(filter));\n  }\n  console.log(sortDate('year', 'MMMM'))\n  \n  const income = (time, filter) => {\n    const temp = {};\n    transactions\n      .filter(transaction => transaction.amount > 0)\n      .filter(transaction => moment(transaction.date).isSame(today, time))\n      .map(transaction => {\n        const date = moment(transaction.date).format(filter);\n        return temp.hasOwnProperty(date) \n          ? temp[date] += transaction.amount\n          : temp[date] = transaction.amount;\n      })\n    Object.entries(temp).forEach(([key, value]) => {\n      incomeLists.push({ 'text': key, 'amount': value });\n    });\n  }\n\n  const expense = (time, filter) => {\n    const temp = {};\n    transactions\n      .filter(transaction => transaction.amount < 0)\n      .filter(transaction => moment(transaction.date).isSame(today, time))\n      .map(transaction => {\n        const date = moment(transaction.date).format(filter);\n        return temp.hasOwnProperty(date) \n          ? temp[date] += transaction.amount\n          : temp[date] = transaction.amount;\n      })\n    Object.entries(temp).forEach(([key, value]) => {\n      expenseLists.push({ 'text': key, 'amount': value });\n    });\n  }\n\n  if (value === 0) {\n    expense('week', 'e'); income('week', 'e');\n  } else if (value === 1) {\n    expense('month', 'w'); income('month', 'w');\n  } else if (value === 2) {\n    expense('year', 'MM'); income('year', 'MM');\n  };\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line\n  }, []);\n\n  return ( \n    <Fragment>\n      <div className='plus-bg time-bar'>\n        <Tabs value={value} variant=\"fullWidth\" aria-label=\"time selectors\">\n          {timeFilters.map((timeFilter, index) => \n            <Tab \n              key={timeFilter} label={timeFilter} \n              onClick={() => setValue(index)} \n              disableFocusRipple disableRipple\n            />\n          )}\n        </Tabs>\n      </div>\n\n      <div className='plus-bg box'>\n        <div className='container box-incomeExpense'>\n\n        </div>\n      </div>\n\n      <div className=\"container\">\n        {transactions.length > 0 ? (\n          <ul className='list'>\n            {incomeLists.concat(expenseLists)\n              .sort((a, b) => a.text < b.text ?  -1 : 1)\n              .map((list, index) => {\n                if (value === 0) {\n                  list.text = moment().day(list.text).format('dddd');\n                }\n                if (value === 1) {\n                  list.text = `${moment().day(0).week(list.text).format('D MMM')} - ${moment().day(6).week(list.text).format('D MMM')}`;\n                }\n                if (value === 2) {\n                  list.text = moment().month(list.text - 1).format('MMMM');\n                }\n\n                return <Transaction key={index} transaction={list} />\n              })\n            }\n\n            {/* {expenseLists === 0 && (\n              <div className='list-status'>\n                No transaction<br/>\n                of the {timeFilters[value]}\n              </div>\n            )} */}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? <CircularProgress color='primary'/>\n              : 'No transaction'}\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}