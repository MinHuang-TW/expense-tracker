{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkDay, sortAmountDsc, sortAmountAsc } from '../utils/calculation';\nimport TransactionFilter from './common/TransactionFilter';\nimport Transaction from './Transaction';\nimport { CircularProgress } from '@material-ui/core';\n\nconst TransactionList = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [sortDsc, setSortDsc] = useState(true);\n  let counter = 0;\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(TransactionFilter, {\n    value: 0,\n    sortDsc: sortDsc,\n    handleSortAmount: () => setSortDsc(!sortDsc),\n    text: \"list of today\" // text={`today ${formatDate(new Date())}`}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, transactions.filter(transaction => checkDay(transaction.date)).sort((a, b) => sortDsc ? sortAmountDsc(a, b) : sortAmountAsc(a, b)).map(transaction => {\n    counter++;\n    return React.createElement(Transaction, {\n      key: transaction._id,\n      transaction: transaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"No transaction today\")) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Add your first transaction\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), \"by clicking the green plus button\")));\n};\n\nexport default TransactionList;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx"],"names":["React","useState","useContext","useEffect","GlobalContext","checkDay","sortAmountDsc","sortAmountAsc","TransactionFilter","Transaction","CircularProgress","TransactionList","loading","transactions","getTransactions","sortDsc","setSortDsc","counter","length","filter","transaction","date","sort","a","b","map","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,QAAT,EAAmBC,aAAnB,EAAkCC,aAAlC,QAAuD,sBAAvD;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAA6CZ,UAAU,CAACE,aAAD,CAA7D;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAIgB,OAAO,GAAG,CAAd;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,eAAe,GADD,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CADT;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,gBAAgB,EAAE,MAAMC,UAAU,CAAC,CAACD,OAAF,CAHpC;AAIE,IAAA,IAAI,EAAC,eAJP,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASGF,YAAY,CAACK,MAAb,GAAsB,CAAtB,GACC;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,YAAY,CACVM,MADF,CACSC,WAAW,IAAIf,QAAQ,CAACe,WAAW,CAACC,IAAb,CADhC,EAEEC,IAFF,CAEO,CAACC,CAAD,EAAIC,CAAJ,KAAUT,OAAO,GAAGT,aAAa,CAACiB,CAAD,EAAIC,CAAJ,CAAhB,GAAyBjB,aAAa,CAACgB,CAAD,EAAIC,CAAJ,CAF9D,EAGEC,GAHF,CAGML,WAAW,IAAI;AAClBH,IAAAA,OAAO;AACP,WACE,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEG,WAAW,CAACM,GAA9B;AAAmC,MAAA,WAAW,EAAEN,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GARF,CADH,EAUGH,OAAO,KAAK,CAAZ,IACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAXJ,CADD,GAgBC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,GACJ,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,GAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5B,sCAHN,CAzBJ,CADF;AAsCD,CAhDD;;AAkDA,eAAeD,eAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkDay, sortAmountDsc, sortAmountAsc } from '../utils/calculation';\nimport TransactionFilter from './common/TransactionFilter';\nimport Transaction from './Transaction';\nimport { CircularProgress } from '@material-ui/core';\n\nconst TransactionList = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [sortDsc, setSortDsc] = useState(true);\n  let counter = 0;\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className='container'>\n      <TransactionFilter \n        value={0} \n        sortDsc={sortDsc} \n        handleSortAmount={() => setSortDsc(!sortDsc)}\n        text='list of today'\n        // text={`today ${formatDate(new Date())}`}\n      />\n\n      {transactions.length > 0 ? (\n        <ul className='list'>\n          {transactions\n            .filter(transaction => checkDay(transaction.date))\n            .sort((a, b) => sortDsc ? sortAmountDsc(a, b) : sortAmountAsc(a, b))\n            .map(transaction => {\n              counter++;\n              return (\n                <Transaction key={transaction._id} transaction={transaction} />\n              );\n            })}\n          {counter === 0 && (\n            <div className='list-status'>No transaction today</div>\n          )}\n        </ul>\n      ) : (\n        <div className='list-status'>\n          {loading \n            ? <CircularProgress color='primary'/>\n            : <span>\n                Add your first transaction<br/>\n                by clicking the green plus button\n              </span>\n          }\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TransactionList;\n"]},"metadata":{},"sourceType":"module"}