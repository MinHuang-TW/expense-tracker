{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkWeek, checkMonth, checkYear } from '../utils/calculation';\nimport Transaction from './Transaction';\nimport moment from 'moment';\nimport { Tabs, Tab, CircularProgress } from '@material-ui/core';\n\nconst Statistics = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all'); // const [sortLatest, setSortLatest] = useState(true);\n  // const [sortDsc, setSortDsc] = useState(true);\n\n  const timeFilters = ['week', 'month', 'year']; // const transFilters = ['all', 'income', 'expense'];\n\n  const incomeLists = [];\n  const expenseLists = [];\n  const newList = [];\n  let counter = 0;\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"plus-bg time-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    \"aria-label\": \"time selectors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, timeFilters.map((timeFilter, index) => React.createElement(Tab, {\n    key: timeFilter,\n    label: timeFilter,\n    onClick: () => setValue(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"plus-bg box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container box-incomeExpense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, transactions.filter(transaction => {\n    const date = transaction.date;\n\n    if (value === 0) {\n      return checkWeek(date);\n    }\n\n    if (value === 1) return checkMonth(date);\n    if (value === 2) return checkYear(date);\n    return transaction;\n  }).map(transaction => {\n    counter++;\n    const amount = transaction.amount;\n    const date = transaction.date;\n    const obj = {\n      'text': moment(date).format('dddd'),\n      amount\n    };\n    if (amount > 0) incomeLists.push(obj);\n    if (amount < 0) expenseLists.push(obj);\n    const temp = {};\n    incomeLists.forEach(list => {\n      if (temp.hasOwnProperty(list.text)) {\n        temp[list.text] = temp[list.text] + list.amount;\n      } else {\n        temp[list.text] = list.amount;\n      }\n    });\n\n    for (var key in temp) {\n      newList.push({\n        'text': key,\n        'amount': temp[key]\n      });\n    } // console.log(temp)\n\n  }), console.log(newList), newList.map(e => React.createElement(Transaction, {\n    transaction: e,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"No \", selected !== 'all' && selected, \" transaction\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), \"of this \", timeFilters[value])) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }) : 'No transaction')));\n};\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx"],"names":["React","Fragment","useState","useEffect","useContext","GlobalContext","checkWeek","checkMonth","checkYear","Transaction","moment","Tabs","Tab","CircularProgress","Statistics","loading","transactions","getTransactions","value","setValue","selected","setSelected","timeFilters","incomeLists","expenseLists","newList","counter","map","timeFilter","index","length","filter","transaction","date","amount","obj","format","push","temp","forEach","list","hasOwnProperty","text","key","console","log","e"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkWeek, checkMonth, checkYear } from '../utils/calculation';\nimport Transaction from './Transaction';\nimport moment from 'moment';\nimport { Tabs, Tab, CircularProgress } from '@material-ui/core';\n\nconst Statistics = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all');\n  // const [sortLatest, setSortLatest] = useState(true);\n  // const [sortDsc, setSortDsc] = useState(true);\n\n  const timeFilters = ['week', 'month', 'year'];\n  // const transFilters = ['all', 'income', 'expense'];\n  const incomeLists = [];\n  const expenseLists = [];\n  const newList = [];\n  let counter = 0;\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line\n  }, []);\n\n  return ( \n    <Fragment>\n      <div className='plus-bg time-bar'>\n        <Tabs value={value} variant=\"fullWidth\" aria-label=\"time selectors\">\n          {timeFilters.map((timeFilter, index) => \n            <Tab \n              key={timeFilter} label={timeFilter} \n              onClick={() => setValue(index)} \n              disableFocusRipple disableRipple\n            />\n          )}\n        </Tabs>\n      </div>\n\n      <div className='plus-bg box'>\n        <div className='container box-incomeExpense'>\n\n        </div>\n      </div>\n\n      <div className=\"container\">\n        {transactions.length > 0 ? (\n          <ul className='list'>\n            {transactions\n              .filter(transaction => {\n                const date = transaction.date;\n                if (value === 0) {\n                  return checkWeek(date);\n                }\n                if (value === 1) return checkMonth(date);\n                if (value === 2) return checkYear(date);\n                return transaction;\n              })\n              .map(transaction => {\n                counter++;\n                const amount = transaction.amount;\n                const date = transaction.date;\n                const obj = { \n                  'text': moment(date).format('dddd'),\n                  amount,\n                };\n                if (amount > 0) incomeLists.push(obj);\n                if (amount < 0) expenseLists.push(obj);\n                \n                const temp = {};\n                incomeLists.forEach(list => {\n                  if (temp.hasOwnProperty(list.text)) {\n                    temp[list.text] = temp[list.text] + list.amount;\n                  } else {\n                    temp[list.text] = list.amount;\n                  }\n                })\n                \n                for (var key in temp) {\n                  newList.push({ 'text': key, 'amount': temp[key] });\n                }\n                // console.log(temp)\n              })\n            }\n            {/* {console.log(incomeLists)} */}\n            {console.log(newList)}\n\n            {newList.map(e => <Transaction transaction={e} />)}\n\n            {counter === 0 && (\n              <div className='list-status'>\n                No {selected !== 'all' && selected} transaction<br/>\n                of this {timeFilters[value]}\n              </div>\n            )}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? <CircularProgress color='primary'/>\n              : 'No transaction'}\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}