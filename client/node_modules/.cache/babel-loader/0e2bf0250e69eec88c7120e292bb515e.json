{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { newDateArr, dbDateArr, checkWeek, sortDateDescending, sortDateAscending } from '../utils/format';\nimport { whiteTheme } from '../utils/colorTheme.js';\nimport Total from './common/Total';\nimport Transaction from './Transaction';\nimport { Typography, Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport ArrowDropDownSharpIcon from '@material-ui/icons/ArrowDropDownSharp';\nimport ArrowDropUpSharpIcon from '@material-ui/icons/ArrowDropUpSharp';\n\nconst Report = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all');\n  const [sortDate, setSortDate] = useState('dsc');\n  const [sortDsc, setSortDsc] = useState(true);\n  const timeFilters = ['day', 'week', 'month', 'year'];\n  const transFilters = ['all', 'income', 'expense'];\n  const date = newDateArr(new Date());\n  const amounts = [];\n  let counter = 0;\n\n  const handleSortAmount = () => {\n    setSortDsc(!sortDsc);\n  };\n\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      background: '#65bcbf',\n      color: 'white',\n      borderBottom: '1px solid rgba(255, 255, 255, 0.3)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\" // indicatorColor=\"primary\"\n    // textColor='primary'\n    ,\n    \"aria-label\": \"disabled tabs example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, timeFilters.map((timeFilter, index) => React.createElement(Tab, {\n    key: timeFilter,\n    label: timeFilter,\n    onClick: () => setValue(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })))), React.createElement(Total, {\n    text: `${timeFilters[value]}ly balance`,\n    amounts: amounts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(ThemeProvider, {\n    theme: whiteTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    fullWidth: true,\n    disableRipple: true,\n    color: \"primary\",\n    \"aria-label\": \"outlined primary button group\",\n    style: {\n      background: '#65BCBF',\n      borderRadius: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, transFilters.map(transFilter => React.createElement(Button, {\n    key: transFilter,\n    variant: selected === transFilter ? 'contained' : null,\n    color: selected === transFilter ? 'primary' : 'secondary',\n    onClick: () => setSelected(transFilter),\n    style: {\n      borderRadius: 0\n    },\n    disableElevation: true,\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, transFilter)))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      color: '#65BCBF',\n      textTransform: 'uppercase'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Transaction Date\"), React.createElement(ArrowDropDownSharpIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    onClick: handleSortAmount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Amount\"), sortDsc ? React.createElement(ArrowDropDownSharpIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }) : React.createElement(ArrowDropUpSharp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, transactions.filter(transaction => {\n    const data = dbDateArr(transaction.date);\n    if (value === 0) return data[2] === date[2];\n    if (value === 1) return checkWeek(transaction.date);\n    if (value === 2) return data[1] === date[1];\n    if (value === 3) return data[0] === date[0];\n    return transaction;\n  }).filter(transaction => {\n    amounts.push(transaction.amount);\n\n    switch (selected) {\n      case 'income':\n        return transaction.amount > 0;\n\n      case 'expense':\n        return transaction.amount < 0;\n\n      default:\n        return transaction;\n    }\n  }).sort((a, b) => sortDsc ? sortDateDescending(a, b) : sortDateAscending(a, b)).map(transaction => {\n    counter++;\n    return React.createElement(Transaction, {\n      key: transaction._id,\n      transaction: transaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    });\n  }), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"No \", selected !== 'all' && selected, \" transaction of the \", timeFilters[value])) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }) : 'No transaction')));\n};\n\nexport default Report;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx"],"names":["React","Fragment","useState","useEffect","useContext","GlobalContext","newDateArr","dbDateArr","checkWeek","sortDateDescending","sortDateAscending","whiteTheme","Total","Transaction","Typography","Tabs","Tab","Button","ButtonGroup","CircularProgress","ThemeProvider","ArrowDropDownSharpIcon","ArrowDropUpSharpIcon","Report","loading","transactions","getTransactions","value","setValue","selected","setSelected","sortDate","setSortDate","sortDsc","setSortDsc","timeFilters","transFilters","date","Date","amounts","counter","handleSortAmount","background","color","borderBottom","map","timeFilter","index","borderRadius","transFilter","display","flexDirection","justifyContent","textTransform","length","filter","transaction","data","push","amount","sort","a","b","_id"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { newDateArr, dbDateArr, checkWeek, sortDateDescending, sortDateAscending } from '../utils/format';\nimport { whiteTheme } from '../utils/colorTheme.js';\nimport Total from './common/Total';\nimport Transaction from './Transaction';\nimport { Typography, Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport ArrowDropDownSharpIcon from '@material-ui/icons/ArrowDropDownSharp';\nimport ArrowDropUpSharpIcon from '@material-ui/icons/ArrowDropUpSharp';\n\nconst Report = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all');\n  const [sortDate, setSortDate] = useState('dsc');\n  const [sortDsc, setSortDsc] = useState(true);\n\n  const timeFilters = ['day', 'week', 'month', 'year'];\n  const transFilters = ['all', 'income', 'expense'];\n  \n  const date = newDateArr(new Date());\n  const amounts = [];\n  let counter = 0;\n\n  const handleSortAmount = () => {\n    setSortDsc(!sortDsc);\n  }\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n\n  return (\n    <Fragment>\n      <div style={{ \n        background: '#65bcbf', color: 'white',\n        borderBottom: '1px solid rgba(255, 255, 255, 0.3)' \n      }}>\n        <Tabs\n          value={value} variant='fullWidth'\n          // indicatorColor=\"primary\"\n          // textColor='primary'\n          aria-label=\"disabled tabs example\"\n        >\n          {timeFilters.map((timeFilter, index) => \n            <Tab \n              key={timeFilter} label={timeFilter} \n              onClick={() => setValue(index)} \n              disableFocusRipple disableRipple\n            />\n          )}\n        </Tabs>\n      </div>\n      \n      <Total text={`${timeFilters[value]}ly balance`} amounts={amounts} />\n      \n      <ThemeProvider theme={whiteTheme}>\n        <ButtonGroup\n          fullWidth disableRipple\n          color='primary'\n          aria-label='outlined primary button group'\n          style={{ background: '#65BCBF', borderRadius: 0 }}\n        >\n          {transFilters.map(transFilter => (\n            <Button\n              key={transFilter}\n              variant={selected === transFilter ? 'contained' : null}\n              color={selected === transFilter ? 'primary' : 'secondary'}\n              onClick={() => setSelected(transFilter)}\n              style={{ borderRadius: 0 }}\n              disableElevation disableFocusRipple disableRipple\n            >\n              {transFilter}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </ThemeProvider>\n\n      <div className='container'>\n          <div \n            style={{ \n              display: 'flex', flexDirection: 'row', justifyContent: 'space-between', \n              color: '#65BCBF', textTransform: 'uppercase'\n            }}\n          >\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n              <Typography variant=\"body2\">Transaction Date</Typography>\n              <ArrowDropDownSharpIcon />\n            </div>\n            <div \n              style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }} \n              onClick={handleSortAmount}\n            >\n              <Typography variant=\"body2\">Amount</Typography>\n              {sortDsc ? <ArrowDropDownSharpIcon /> : <ArrowDropUpSharp />}\n            </div>\n          </div>\n        {transactions.length > 0 ? (\n          <ul className='list'>\n            {transactions\n              .filter(transaction => {\n                const data = dbDateArr(transaction.date);\n                if (value === 0) return data[2] === date[2];\n                if (value === 1) return checkWeek(transaction.date);\n                if (value === 2) return data[1] === date[1];\n                if (value === 3) return data[0] === date[0];\n                return transaction;\n              })\n              .filter(transaction => {\n                amounts.push(transaction.amount);\n                switch (selected) {\n                  case 'income':\n                    return transaction.amount > 0;\n                  case 'expense':\n                    return transaction.amount < 0;\n                  default:\n                    return transaction;\n                }\n              })\n              .sort((a, b) => sortDsc ? sortDateDescending(a, b) : sortDateAscending(a, b))\n              .map(transaction => {\n                counter++;\n                return (\n                  <Transaction key={transaction._id} transaction={transaction} />\n                );\n              })}\n            {counter === 0 && (\n              <div className='list-status'>\n                No {selected !== 'all' && selected} transaction\n                of the {timeFilters[value]}\n              </div>\n            )}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? <CircularProgress color='primary'/>\n              : 'No transaction'}\n          </div>\n        )}\n      </div>\n\n\n    </Fragment>\n  );\n}\n\nexport default Report;"]},"metadata":{},"sourceType":"module"}