{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/common/PieChart.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst PieChart = ({\n  data: originalData,\n  width,\n  height,\n  outerRadius,\n  innerRadius\n}) => {\n  const ref = useRef(null); // const cache = useRef(originalData);\n\n  const createPie = d3.pie().value(d => d).sort(null);\n  const createArc = d3.arc().outerRadius(outerRadius).innerRadius(innerRadius);\n  const colors = ['rgba(255, 255, 255, 1)', 'rgba(255, 255, 255, 0.3)']; // const format = d3.format('.2f');\n\n  useEffect(() => {\n    const data = createPie(originalData); // const prevData = createPie(cache.current);\n\n    const group = d3.select(ref.current);\n    const groupWithData = group.selectAll('g.arc').data(data);\n    groupWithData.exit().remove();\n    const groupWithUpdate = groupWithData.enter().append('g').attr('class', 'arc');\n    const path = groupWithUpdate.append('path').merge(groupWithData.select('path.arc')); // const arcTween = (d, i) => {\n    //   const interpolator = d3.interpolate(prevData[i], d);\n    //   return t => createArc(interpolator(t));\n    // };\n\n    path.attr('class', 'arc').attr('d', createArc).attr('fill', (d, i) => colors[i]); // .transition()\n    // .duration(750)\n    // .attrTween('d', arcTween);\n    // eslint-disable-next-line\n  }, [originalData]);\n  return React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    ref: ref,\n    transform: `translate(${outerRadius} ${outerRadius})`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nexport default PieChart;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/common/PieChart.jsx"],"names":["React","useEffect","useRef","d3","PieChart","data","originalData","width","height","outerRadius","innerRadius","ref","createPie","pie","value","d","sort","createArc","arc","colors","group","select","current","groupWithData","selectAll","exit","remove","groupWithUpdate","enter","append","attr","path","merge","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAGC,YAAT;AAAuBC,EAAAA,KAAvB;AAA8BC,EAAAA,MAA9B;AAAsCC,EAAAA,WAAtC;AAAmDC,EAAAA;AAAnD,CAAD,KAAsE;AACrF,QAAMC,GAAG,GAAGT,MAAM,CAAC,IAAD,CAAlB,CADqF,CAErF;;AAEA,QAAMU,SAAS,GAAGT,EAAE,CACjBU,GADe,GAEfC,KAFe,CAETC,CAAC,IAAIA,CAFI,EAGfC,IAHe,CAGV,IAHU,CAAlB;AAKA,QAAMC,SAAS,GAAGd,EAAE,CACjBe,GADe,GAEfT,WAFe,CAEHA,WAFG,EAGfC,WAHe,CAGHA,WAHG,CAAlB;AAKA,QAAMS,MAAM,GAAG,CACb,wBADa,EAEb,0BAFa,CAAf,CAdqF,CAkBrF;;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,IAAI,GAAGO,SAAS,CAACN,YAAD,CAAtB,CADc,CAEd;;AACA,UAAMc,KAAK,GAAGjB,EAAE,CAACkB,MAAH,CAAUV,GAAG,CAACW,OAAd,CAAd;AACA,UAAMC,aAAa,GAAGH,KAAK,CAACI,SAAN,CAAgB,OAAhB,EAAyBnB,IAAzB,CAA8BA,IAA9B,CAAtB;AAEAkB,IAAAA,aAAa,CAACE,IAAd,GAAqBC,MAArB;AAEA,UAAMC,eAAe,GAAGJ,aAAa,CAClCK,KADqB,GAErBC,MAFqB,CAEd,GAFc,EAGrBC,IAHqB,CAGhB,OAHgB,EAGP,KAHO,CAAxB;AAKA,UAAMC,IAAI,GAAGJ,eAAe,CACzBE,MADU,CACH,MADG,EAEVG,KAFU,CAEJT,aAAa,CAACF,MAAd,CAAqB,UAArB,CAFI,CAAb,CAbc,CAiBd;AACA;AACA;AACA;;AAEAU,IAAAA,IAAI,CACDD,IADH,CACQ,OADR,EACiB,KADjB,EAEGA,IAFH,CAEQ,GAFR,EAEab,SAFb,EAGGa,IAHH,CAGQ,MAHR,EAGgB,CAACf,CAAD,EAAIkB,CAAJ,KAAUd,MAAM,CAACc,CAAD,CAHhC,EAtBc,CA0BZ;AACA;AACA;AAEJ;AACC,GA/BQ,EA+BN,CAAC3B,YAAD,CA/BM,CAAT;AAiCA,SACE;AAAK,IAAA,KAAK,EAAEC,KAAZ;AAAmB,IAAA,MAAM,EAAEC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,GAAG,EAAEG,GAAR;AAAa,IAAA,SAAS,EAAG,aAAYF,WAAY,IAAGA,WAAY,GAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA1DD;;AA4DA,eAAeL,QAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst PieChart = ({ data : originalData, width, height, outerRadius, innerRadius }) => {\n  const ref = useRef(null);\n  // const cache = useRef(originalData);\n\n  const createPie = d3\n    .pie()\n    .value(d => d)\n    .sort(null);\n  \n  const createArc = d3\n    .arc()\n    .outerRadius(outerRadius)\n    .innerRadius(innerRadius);\n\n  const colors = [\n    'rgba(255, 255, 255, 1)',\n    'rgba(255, 255, 255, 0.3)'\n  ];\n  // const format = d3.format('.2f');\n\n  useEffect(() => {\n    const data = createPie(originalData);\n    // const prevData = createPie(cache.current);\n    const group = d3.select(ref.current);\n    const groupWithData = group.selectAll('g.arc').data(data);\n\n    groupWithData.exit().remove();\n\n    const groupWithUpdate = groupWithData\n      .enter()\n      .append('g')\n      .attr('class', 'arc');\n\n    const path = groupWithUpdate\n      .append('path')\n      .merge(groupWithData.select('path.arc'));\n\n    // const arcTween = (d, i) => {\n    //   const interpolator = d3.interpolate(prevData[i], d);\n    //   return t => createArc(interpolator(t));\n    // };\n\n    path\n      .attr('class', 'arc')\n      .attr('d', createArc)\n      .attr('fill', (d, i) => colors[i])\n      // .transition()\n      // .duration(750)\n      // .attrTween('d', arcTween);\n\n  // eslint-disable-next-line\n  }, [originalData])\n    \n  return ( \n    <svg width={width} height={height}>\n      <g ref={ref} transform={`translate(${outerRadius} ${outerRadius})`} />\n    </svg>\n  );\n}\n\nexport default PieChart;"]},"metadata":{},"sourceType":"module"}