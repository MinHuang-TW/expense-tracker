{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Login.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport PasswordIcon from '../components/common/PasswordIcon';\nimport { TextField, Typography } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  alert: {\n    width: '100%'\n  },\n  input: {\n    margin: '15px auto',\n    width: '100%'\n  },\n  button: {\n    marginTop: '30px'\n  },\n  link: {\n    display: 'inline',\n    cursor: 'pointer',\n    marginLeft: '10px'\n  }\n}));\n\nconst Login = () => {\n  const {\n    registerUser,\n    loginUser,\n    error\n  } = useContext(GlobalContext);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowpassword] = useState(false);\n  const [disableBtn, setDisableBtn] = useState(true);\n  const [showSignup, setShowSignup] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const classes = useStyles();\n\n  const ModeSwitch = ({\n    mode,\n    children\n  }) => {\n    return React.createElement(\"div\", {\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: '#232C2D',\n        opacity: 0.8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, children), React.createElement(Typography, {\n      color: \"primary\",\n      className: classes.link,\n      onClick: () => setShowSignup(!showSignup),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, mode));\n  };\n\n  const handleRegister = async e => {\n    e.preventDefault();\n    const newUser = {\n      name,\n      email,\n      password\n    };\n    await registerUser(newUser);\n\n    if (error) {\n      setName('');\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    await loginUser({\n      email,\n      password\n    });\n\n    if (error) {\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  return React.createElement(\"form\", {\n    className: \"container login-form\",\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, error && React.createElement(Alert, {\n    severity: \"error\",\n    className: classes.alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, error), React.createElement(TextField, {\n    label: showSignup ? 'Name' : ' ',\n    required: !showSignup ? false : true,\n    disabled: showSignup ? false : true,\n    value: name,\n    onChange: e => setName(e.target.value),\n    className: classes.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Email\",\n    type: \"email\",\n    required: true,\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    className: classes.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Password\",\n    type: showPassword ? 'text' : 'password',\n    required: true,\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    className: classes.input,\n    InputProps: {\n      endAdornment: React.createElement(PasswordIcon, {\n        showPassword: showPassword,\n        setShowpassword: () => setShowpassword(!showPassword),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), showSignup ? React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: e => handleRegister(e),\n    className: `btn plus-bg ${classes.button}` // disabled={disableBtn ? true : false}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Sign up\"), React.createElement(ModeSwitch, {\n    mode: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Already have an account?\")) : React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: e => handleLogin(e),\n    className: `btn plus-bg ${classes.button}` // disabled={disableBtn ? true : false}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Log in\"), React.createElement(ModeSwitch, {\n    mode: \"Signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Do not have an account?\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Login.jsx"],"names":["React","useState","useContext","GlobalContext","PasswordIcon","TextField","Typography","Alert","makeStyles","useStyles","theme","alert","width","input","margin","button","marginTop","link","display","cursor","marginLeft","Login","registerUser","loginUser","error","name","setName","email","setEmail","password","setPassword","showPassword","setShowpassword","disableBtn","setDisableBtn","showSignup","setShowSignup","showAlert","setShowAlert","classes","ModeSwitch","mode","children","color","opacity","handleRegister","e","preventDefault","newUser","handleLogin","target","value","endAdornment"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport PasswordIcon from '../components/common/PasswordIcon';\nimport { TextField, Typography } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  alert: {\n    width: '100%',\n  },\n  input: {\n    margin: '15px auto',\n    width: '100%',\n  },\n  button: {\n    marginTop: '30px'\n  },\n  link: {\n    display: 'inline',\n    cursor: 'pointer',\n    marginLeft: '10px'\n  }\n}));\n\nconst Login = () => {\n  const { registerUser, loginUser, error } = useContext(GlobalContext);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowpassword] = useState(false);\n  const [disableBtn, setDisableBtn] = useState(true);\n  const [showSignup, setShowSignup] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const classes = useStyles();\n\n  const ModeSwitch = ({ mode, children }) => {\n    return (\n      <div className={classes.button}>\n        <span style={{ color: '#232C2D', opacity: 0.8 }}>\n          { children }\n        </span>\n        <Typography\n          color='primary'\n          className={classes.link}\n          onClick={() => setShowSignup(!showSignup)}\n        >\n          { mode }\n        </Typography>\n      </div>\n    )\n  }\n\n  const handleRegister = async e => {\n    e.preventDefault();\n\n    const newUser = {\n      name,\n      email,\n      password\n    };\n    await registerUser(newUser);\n    if (error) {\n      setName('');\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    await loginUser({ email, password });\n    if (error) {\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  return (\n    <form className='container login-form' noValidate autoComplete='off'>\n      {error && (\n        <Alert severity='error' className={classes.alert}>\n          {error}\n        </Alert>\n      )}\n\n      <TextField\n        label={showSignup ? 'Name' : ' '}\n        required={!showSignup? false : true}\n        disabled={showSignup? false : true}\n        value={name}\n        onChange={e => setName(e.target.value)}\n        className={classes.input}\n      />\n\n      <TextField\n        label='Email'\n        type='email'\n        required\n        value={email}\n        onChange={e => setEmail(e.target.value)}\n        className={classes.input}\n      />\n\n      <TextField\n        label='Password'\n        type={showPassword ? 'text' : 'password'}\n        required\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n        className={classes.input}\n        InputProps={{\n          endAdornment: (\n            <PasswordIcon\n              showPassword={showPassword}\n              setShowpassword={() => setShowpassword(!showPassword)}\n            />\n          )\n        }}\n      />\n\n      {showSignup ? (\n        <>\n          <button\n            onClick={e => handleRegister(e)}\n            className={`btn plus-bg ${classes.button}`}\n            // disabled={disableBtn ? true : false}\n          >\n            Sign up\n          </button>\n          <ModeSwitch mode='Login'>Already have an account?</ModeSwitch>\n        </>\n      ) : (\n        <>\n          <button\n            onClick={e => handleLogin(e)}\n            className={`btn plus-bg ${classes.button}`}\n            // disabled={disableBtn ? true : false}\n          >\n            Log in\n          </button>\n          <ModeSwitch mode='Signup'>Do not have an account?</ModeSwitch>\n        </>\n      )}\n    </form>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}