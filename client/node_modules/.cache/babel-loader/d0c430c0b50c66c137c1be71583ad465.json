{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/common/BarChart.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nconst BarChart = ({\n  data: originalData,\n  select,\n  width,\n  height\n}) => {\n  const ref = useRef(null);\n  const weekList = moment.weekdays();\n  const monthList = moment.months();\n  const colors = ['rgba(255, 255, 255, 1)', 'rgba(255, 255, 255, 0.3)'];\n  useEffect(() => {\n    const data = originalData;\n    const group = d3.select(ref.current); // const labels = data.map(d => d.text);\n\n    const labels = select === 0 ? weekList : select === 1 ? data.map(d => d.text) : monthList;\n    const maxAmount = d3.max(data, d => Math.abs(d.amount));\n    const yScale = d3.scaleLinear().domain([0, maxAmount]).range([0, height - 15]);\n    const xScale = d3.scaleBand().domain(labels).range([0, width]);\n    const xAxis = d3.axisBottom(xScale).tickSize(0);\n    group.select('.x-axis').style('transform', `translateY(${+height - 14}px)`).style('color', 'white').call(xAxis).call(g => g.select(\".domain\").remove()).selectAll('.x-axis .tick text').call(t => t.each(function (d) {\n      const self = d3.select(this);\n      const s = self.text().split(' - ');\n      self.text('');\n      self.append(\"tspan\").attr(\"x\", 0).attr(\"dy\", \"1em\").text(select === 1 ? s[0] : s[0].slice(0, 3));\n      select === 1 && self.append(\"tspan\").attr(\"x\", 0).attr(\"dy\", \"1em\").text('- ' + s[1]);\n    }));\n    group.selectAll('.bar').data(data).join('rect').attr('class', 'bar').style('transform', 'scale(1, -1)').attr('x', d => xScale(d.text)).attr('y', -height + 15).attr('width', 6).attr('fill', d => d.amount < 0 ? colors[0] : colors[1]).transition().duration(1000).attr('height', d => yScale(Math.abs(d.amount))); //#region \n    // const groupWithData = group\n    //   .selectAll('.rect')\n    //   .data(data);\n    // console.log(groupWithData)\n    // groupWithData\n    //   .exit()\n    //   .remove();\n    // const groupWithUpdate = groupWithData\n    //   .enter()\n    //   .append('g')\n    //   .attr('class', 'rect')\n    // const rect = groupWithUpdate\n    //   .append('rect')\n    //   .merge(groupWithData.select('rect'));\n    // rect\n    //   .attr('width', 6)\n    //   .attr('height', d => yScale(Math.abs(d.amount)))\n    //   .attr('fill', d => d.amount < 0 ? colors[0] : colors[1])\n    //   .attr('x', d => xScale.bandwidth() / 2 - 3 + xScale(d.text))\n    //   .attr('y', d => height - yScale(Math.abs(d.amount)));\n    //#endregion\n    // eslint-disable-next-line\n  }, [originalData]);\n  return React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    ref: ref,\n    style: {\n      margin: 'auto',\n      overflow: 'visible'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }));\n};\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/common/BarChart.jsx"],"names":["React","useEffect","useRef","d3","moment","BarChart","data","originalData","select","width","height","ref","weekList","weekdays","monthList","months","colors","group","current","labels","map","d","text","maxAmount","max","Math","abs","amount","yScale","scaleLinear","domain","range","xScale","scaleBand","xAxis","axisBottom","tickSize","style","call","g","remove","selectAll","t","each","self","s","split","append","attr","slice","join","transition","duration","margin","overflow"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nconst BarChart = ({ data : originalData, select, width, height }) => {\n  const ref = useRef(null);\n  const weekList = moment.weekdays();\n  const monthList = moment.months();\n  const colors = [ 'rgba(255, 255, 255, 1)', 'rgba(255, 255, 255, 0.3)' ];\n\n  useEffect(() => {\n    const data = originalData;\n    const group = d3.select(ref.current);\n    // const labels = data.map(d => d.text);\n    const labels = select === 0 \n      ? weekList : select === 1 \n      ? data.map(d => d.text) : monthList;\n    const maxAmount = d3.max(data, d => Math.abs(d.amount));\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, maxAmount])\n      .range([0, height - 15]);\n\n    const xScale = d3\n      .scaleBand()\n      .domain(labels)\n      .range([0, width]);\n    \n    const xAxis = d3\n      .axisBottom(xScale)\n      .tickSize(0);\n\n    group\n      .select('.x-axis')\n      .style('transform', `translateY(${+height - 14}px)`)\n      .style('color', 'white')\n      .call(xAxis)\n      .call(g => g.select(\".domain\").remove())\n      .selectAll('.x-axis .tick text')\n      .call(t => t.each(function(d) {\n        const self = d3.select(this);\n        const s = self.text().split(' - ');\n        self.text('');\n        self.append(\"tspan\")\n          .attr(\"x\", 0)\n          .attr(\"dy\",\"1em\")\n          .text(select === 1 ? s[0] : s[0].slice(0, 3));\n        select === 1 && self.append(\"tspan\")\n          .attr(\"x\", 0)\n          .attr(\"dy\",\"1em\")\n          .text('- ' + s[1]);\n      }));\n\n    group\n      .selectAll('.bar')\n      .data(data)\n      .join('rect')\n      .attr('class', 'bar')\n      .style('transform', 'scale(1, -1)')\n      .attr('x', d => xScale(d.text))\n      .attr('y', -height + 15)\n      .attr('width', 6)\n      .attr('fill', d => d.amount < 0 ? colors[0] : colors[1])\n      .transition()\n      .duration(1000)\n      .attr('height', d => yScale(Math.abs(d.amount)));\n\n    //#region \n    // const groupWithData = group\n    //   .selectAll('.rect')\n    //   .data(data);\n    // console.log(groupWithData)\n    // groupWithData\n    //   .exit()\n    //   .remove();\n    \n    // const groupWithUpdate = groupWithData\n    //   .enter()\n    //   .append('g')\n    //   .attr('class', 'rect')\n\n    // const rect = groupWithUpdate\n    //   .append('rect')\n    //   .merge(groupWithData.select('rect'));\n\n    // rect\n    //   .attr('width', 6)\n    //   .attr('height', d => yScale(Math.abs(d.amount)))\n    //   .attr('fill', d => d.amount < 0 ? colors[0] : colors[1])\n    //   .attr('x', d => xScale.bandwidth() / 2 - 3 + xScale(d.text))\n    //   .attr('y', d => height - yScale(Math.abs(d.amount)));\n    //#endregion\n\n  // eslint-disable-next-line\n  }, [originalData])\n\n  return ( \n    <svg\n      width={width} \n      height={height} \n      ref={ref}\n      style={{ margin: 'auto', overflow: 'visible' }}\n    >\n      <g className='x-axis' />\n    </svg>\n  );\n}\n\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}