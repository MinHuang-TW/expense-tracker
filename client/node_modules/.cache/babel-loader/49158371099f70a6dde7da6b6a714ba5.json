{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst TransactionList = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [progress, setProgress] = useState(0);\n  const transFilters = ['all', 'income', 'expense'];\n  let counter = 0;\n  useEffect(() => {\n    const tick = () => {\n      setProgress(oldProgress => oldProgress >= 100 ? 0 : oldProgress + 1);\n    };\n\n    const timer = setInterval(tick, 20);\n    getTransactions();\n    return () => {\n      clearInterval(timer);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    fullWidth: true,\n    color: \"primary\",\n    \"aria-label\": \"outlined primary button group\",\n    style: {\n      marginBottom: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, transFilters.map(transFilter => React.createElement(Button, {\n    key: transFilter,\n    disableElevation: true,\n    variant: selected === transFilter ? 'contained' : null,\n    color: selected === transFilter ? 'primary' : null,\n    onClick: () => setSelected(transFilter),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, transFilter))), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, transactions.filter(transaction => {\n    switch (selected) {\n      case 'income':\n        return transaction.amount > 0;\n\n      case 'expense':\n        return transaction.amount < 0;\n\n      default:\n        return transaction;\n    }\n  }).map(transaction => {\n    counter++;\n    return React.createElement(Transaction, {\n      key: transaction._id,\n      transaction: transaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"No \", selected, \" transaction\"), React.createElement(\"div\", {\n    style: {\n      height: '56px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    variant: \"determinate\",\n    value: progress,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }) : 'No transaction'));\n};\n\nexport default TransactionList;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx"],"names":["React","useState","useContext","useEffect","GlobalContext","Transaction","Button","ButtonGroup","CircularProgress","TransactionList","loading","transactions","getTransactions","selected","setSelected","progress","setProgress","transFilters","counter","tick","oldProgress","timer","setInterval","clearInterval","marginBottom","map","transFilter","length","filter","transaction","amount","_id","height"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst TransactionList = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [progress, setProgress] = useState(0);\n\n  const transFilters = ['all', 'income', 'expense'];\n  let counter = 0;\n\n  useEffect(() => {\n    const tick = () => {\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\n    };\n    const timer = setInterval(tick, 20);\n\n    getTransactions();\n\n    return () => {\n      clearInterval(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <ButtonGroup\n        fullWidth\n        color='primary'\n        aria-label='outlined primary button group'\n        style={{ marginBottom: '10px' }}\n      >\n        {transFilters.map(transFilter => (\n          <Button\n            key={transFilter}\n            disableElevation\n            variant={selected === transFilter ? 'contained' : null}\n            color={selected === transFilter ? 'primary' : null}\n            onClick={() => setSelected(transFilter)}\n          >\n            {transFilter}\n          </Button>\n        ))}\n      </ButtonGroup>\n\n      {transactions.length > 0 ? (\n        <ul className='list'>\n          {transactions\n            .filter(transaction => {\n              switch (selected) {\n                case 'income':\n                  return transaction.amount > 0;\n                case 'expense':\n                  return transaction.amount < 0;\n                default:\n                  return transaction;\n              }\n            })\n            .map(transaction => {\n              counter++;\n              return (\n                <Transaction key={transaction._id} transaction={transaction} />\n              );\n            })}\n          {counter === 0 && (\n            <div className='list-status'>No {selected} transaction</div>\n          )}\n          <div style={{ height: '56px' }} />\n        </ul>\n      ) : (\n        <div className='list-status'>\n          {loading ? (\n            <CircularProgress\n              variant='determinate'\n              value={progress}\n              color='secondary'\n            />\n          ) : (\n            'No transaction'\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TransactionList;\n"]},"metadata":{},"sourceType":"module"}