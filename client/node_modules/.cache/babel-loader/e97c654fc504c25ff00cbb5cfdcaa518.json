{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { newDateArr, dbDateArr, checkWeek, sortDateDsc, sortDateAsc, sortAmountDsc, sortAmountAsc } from '../utils/format';\nimport Total from './common/Total';\nimport IncomeExpenses from './common/IncomeExpenses';\nimport Transaction from './Transaction';\nimport { Typography, Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\nimport { whiteTheme } from '../utils/colorTheme.js';\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport ArrowDropDownSharpIcon from '@material-ui/icons/ArrowDropDownSharp';\nimport ArrowDropUpSharpIcon from '@material-ui/icons/ArrowDropUpSharp';\n\nconst Report = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all');\n  const [sortColumn, setSortColum] = useState('date');\n  const [sortLatest, setSortLatest] = useState(true);\n  const [sortDsc, setSortDsc] = useState(false);\n  const timeFilters = ['day', 'week', 'month', 'year'];\n  const transFilters = ['all', 'income', 'expense'];\n  const date = newDateArr(new Date());\n  const amounts = [];\n  let counter = 0;\n  const balance = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  };\n  const incomeExpense = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    height: '100%'\n  };\n  const timebar = {\n    color: 'white',\n    borderBottom: '1px solid rgba(255, 255, 255, 0.3)'\n  };\n  const sortItem = {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    cursor: 'pointer',\n    textTransform: 'uppercase'\n  };\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: timebar,\n    className: \"plus-bg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    \"aria-label\": \"disabled tabs example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, timeFilters.map((timeFilter, index) => React.createElement(Tab, {\n    key: timeFilter,\n    label: timeFilter,\n    onClick: () => setValue(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"plus-bg\",\n    style: {\n      height: '25vh',\n      position: 'relative'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, selected === 'all' ? React.createElement(\"div\", {\n    style: balance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Total, {\n    text: `${timeFilters[value]}ly balance`,\n    amounts: amounts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    width: \"60%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"test\"), React.createElement(\"div\", {\n    style: incomeExpense,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(IncomeExpenses, {\n    amounts: amounts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })))), React.createElement(ThemeProvider, {\n    theme: whiteTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    fullWidth: true,\n    disableRipple: true,\n    color: \"primary\",\n    style: {\n      background: '#65BCBF',\n      borderRadius: 0\n    },\n    \"aria-label\": \"transaction amount filters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, transFilters.map(transFilter => React.createElement(Button, {\n    key: transFilter,\n    variant: selected === transFilter ? 'contained' : null,\n    color: selected === transFilter ? 'primary' : 'secondary',\n    onClick: () => setSelected(transFilter),\n    style: {\n      borderRadius: 0\n    },\n    disableElevation: true,\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, transFilter)))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-amount plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: sortItem,\n    onClick: () => {\n      setSortLatest(!sortLatest);\n      setSortColum('date');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"sort by Date\"), sortLatest ? React.createElement(ArrowDropDownSharpIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }) : React.createElement(ArrowDropUpSharpIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: sortItem,\n    onClick: () => {\n      setSortDsc(!sortDsc);\n      setSortColum('amount');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Amount\"), sortDsc ? React.createElement(ArrowDropDownSharpIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }) : React.createElement(ArrowDropUpSharpIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }))), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, transactions.filter(transaction => {\n    const data = dbDateArr(transaction.date);\n    if (value === 0) return data[2] === date[2];\n    if (value === 1) return checkWeek(transaction.date);\n    if (value === 2) return data[1] === date[1];\n    if (value === 3) return data[0] === date[0];\n    return transaction;\n  }).filter(transaction => {\n    amounts.push(transaction.amount);\n\n    switch (selected) {\n      case 'income':\n        return transaction.amount > 0;\n\n      case 'expense':\n        return transaction.amount < 0;\n\n      default:\n        return transaction;\n    }\n  }).sort((a, b) => {\n    if (sortColumn === 'date') return sortLatest ? sortDateDsc(a, b) : sortDateAsc(a, b);\n    return sortDsc ? sortAmountDsc(a, b) : sortAmountAsc(a, b);\n  }).map(transaction => {\n    counter++;\n    return React.createElement(Transaction, {\n      key: transaction._id,\n      transaction: transaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    });\n  }), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"No \", selected !== 'all' && selected, \" transaction of the \", timeFilters[value])) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }) : 'No transaction')));\n};\n\nexport default Report;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx"],"names":["React","Fragment","useState","useEffect","useContext","GlobalContext","newDateArr","dbDateArr","checkWeek","sortDateDsc","sortDateAsc","sortAmountDsc","sortAmountAsc","Total","IncomeExpenses","Transaction","Typography","Tabs","Tab","Button","ButtonGroup","CircularProgress","whiteTheme","ThemeProvider","ArrowDropDownSharpIcon","ArrowDropUpSharpIcon","Report","loading","transactions","getTransactions","value","setValue","selected","setSelected","sortColumn","setSortColum","sortLatest","setSortLatest","sortDsc","setSortDsc","timeFilters","transFilters","date","Date","amounts","counter","balance","position","top","left","transform","textAlign","incomeExpense","display","flexDirection","justifyContent","height","timebar","color","borderBottom","sortItem","cursor","textTransform","map","timeFilter","index","alignItems","background","borderRadius","transFilter","length","filter","transaction","data","push","amount","sort","a","b","_id"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { newDateArr, dbDateArr, checkWeek, sortDateDsc, sortDateAsc, sortAmountDsc, sortAmountAsc } from '../utils/format';\nimport Total from './common/Total';\nimport IncomeExpenses from './common/IncomeExpenses';\nimport Transaction from './Transaction';\nimport { Typography, Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\nimport { whiteTheme } from '../utils/colorTheme.js';\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport ArrowDropDownSharpIcon from '@material-ui/icons/ArrowDropDownSharp';\nimport ArrowDropUpSharpIcon from '@material-ui/icons/ArrowDropUpSharp';\n\nconst Report = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all');\n  const [sortColumn, setSortColum] = useState('date');\n  const [sortLatest, setSortLatest] = useState(true);\n  const [sortDsc, setSortDsc] = useState(false);\n\n  const timeFilters = ['day', 'week', 'month', 'year'];\n  const transFilters = ['all', 'income', 'expense'];\n  \n  const date = newDateArr(new Date());\n  const amounts = [];\n  let counter = 0;\n\n  const balance = { \n    position: 'absolute', \n    top: '50%', left: '50%', \n    transform: 'translate(-50%, -50%)', \n    textAlign: 'center',\n  }\n\n  const incomeExpense = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    height: '100%',\n  }\n\n  const timebar = { \n    color: 'white',\n    borderBottom: '1px solid rgba(255, 255, 255, 0.3)',\n  }\n\n  const sortItem = { \n    display: 'flex', \n    flexDirection: 'row', \n    justifyContent: 'center', \n    cursor: 'pointer',\n    textTransform: 'uppercase',\n  }\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n\n  return (\n    <Fragment>\n      <div style={timebar} className='plus-bg'>\n        <Tabs value={value} variant='fullWidth' aria-label=\"disabled tabs example\">\n          {timeFilters.map((timeFilter, index) => \n            <Tab \n              key={timeFilter} label={timeFilter} \n              onClick={() => setValue(index)} \n              disableFocusRipple disableRipple\n            />\n          )}\n        </Tabs>\n      </div>\n      \n      <div className=\"plus-bg\" style={{ height: '25vh', position: 'relative' }}>\n        {selected === 'all' \n          ?<div style={balance}>\n            <Total text={`${timeFilters[value]}ly balance`} amounts={amounts} />\n          </div>\n          :<div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center', height: '100%' }}>\n            <div width='60%'>test</div>\n            <div style={incomeExpense}>\n              <IncomeExpenses amounts={amounts} />\n            </div>\n          </div>\n        }\n      </div>\n      \n      <ThemeProvider theme={whiteTheme}>\n        <ButtonGroup\n          fullWidth disableRipple\n          color='primary'\n          style={{ background: '#65BCBF', borderRadius: 0 }}\n          aria-label='transaction amount filters'\n        >\n          {transFilters.map(transFilter => (\n            <Button\n              key={transFilter}\n              variant={selected === transFilter ? 'contained' : null}\n              color={selected === transFilter ? 'primary' : 'secondary'}\n              onClick={() => setSelected(transFilter)}\n              style={{ borderRadius: 0 }}\n              disableElevation disableFocusRipple disableRipple\n            >\n              {transFilter}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </ThemeProvider>\n\n      <div className='container'>\n          <div className='input-amount plus'>\n            <div  style={sortItem} onClick={() => {setSortLatest(!sortLatest); setSortColum('date')}}>\n              <Typography variant=\"body2\">sort by Date</Typography>\n              {sortLatest ? <ArrowDropDownSharpIcon /> : <ArrowDropUpSharpIcon />}\n            </div>\n            <div style={sortItem} onClick={() => {setSortDsc(!sortDsc); setSortColum('amount')}}>\n              <Typography variant=\"body2\">Amount</Typography>\n              {sortDsc ? <ArrowDropDownSharpIcon /> : <ArrowDropUpSharpIcon />}\n            </div>\n          </div>\n\n        {transactions.length > 0 ? (\n          <ul className='list'>\n            {transactions\n              .filter(transaction => {\n                const data = dbDateArr(transaction.date);\n                if (value === 0) return data[2] === date[2];\n                if (value === 1) return checkWeek(transaction.date);\n                if (value === 2) return data[1] === date[1];\n                if (value === 3) return data[0] === date[0];\n                return transaction;\n              })\n              .filter(transaction => {\n                amounts.push(transaction.amount);\n                switch (selected) {\n                  case 'income':\n                    return transaction.amount > 0;\n                  case 'expense':\n                    return transaction.amount < 0;\n                  default:\n                    return transaction;\n                }\n              })\n              .sort((a, b) => {\n                if (sortColumn === 'date') return sortLatest ? sortDateDsc(a, b) : sortDateAsc(a, b);\n                return sortDsc ? sortAmountDsc(a, b) : sortAmountAsc(a, b);\n              })\n              .map(transaction => {\n                counter++;\n                return (\n                  <Transaction key={transaction._id} transaction={transaction} />\n                );\n              })}\n            {counter === 0 && (\n              <div className='list-status'>\n                No {selected !== 'all' && selected} transaction\n                of the {timeFilters[value]}\n              </div>\n            )}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? <CircularProgress color='primary'/>\n              : 'No transaction'}\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Report;"]},"metadata":{},"sourceType":"module"}