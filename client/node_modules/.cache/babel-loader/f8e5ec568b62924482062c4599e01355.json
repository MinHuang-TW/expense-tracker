{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n/* eslint-disable no-constant-condition */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { setRef, useEventCallback, useControlled } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      limit = config.limit,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      _config$startAfter = config.startAfter,\n      startAfter = _config$startAfter === void 0 ? 0 : _config$startAfter,\n      stringify = config.stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue,\n        getOptionLabel = _ref.getOptionLabel;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    if (startAfter > 0 && input.length <= startAfter) {\n      return [];\n    }\n\n    var filteredOptions = options.filter(function (option) {\n      var candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      options = props.options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value;\n\n  var _React$useState = React.useState(),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idProp || defaultId;\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultId(\"mui-autocomplete-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState2 = React.useState(null),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      focusedTag = _React$useState3[0],\n      setFocusedTag = _React$useState3[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n  var setHighlightedIndex = useEventCallback(function (index) {\n    var mouse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && !mouse) {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var _React$useRef = React.useRef(inputValueProp != null),\n      isInputValueControlled = _React$useRef.current;\n\n  var _React$useState4 = React.useState(''),\n      inputValueState = _React$useState4[0],\n      setInputValue = _React$useState4[1];\n\n  var inputValue = isInputValueControlled ? inputValueProp : inputValueState;\n\n  var _React$useState5 = React.useState(false),\n      focused = _React$useState5[0],\n      setFocused = _React$useState5[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof optionLabel !== 'string') {\n          var erroneousReturn = optionLabel === undefined ? 'undefined' : \"\".concat(_typeof(optionLabel), \" (\").concat(optionLabel, \")\");\n          console.error(\"Material-UI: the `getOptionLabel` method of \".concat(componentName, \" returned \").concat(erroneousReturn, \" instead of a string for \").concat(JSON.stringify(newValue), \".\"));\n        }\n      }\n\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _React$useRef2 = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef2.current;\n\n  var _React$useState6 = React.useState(false),\n      openState = _React$useState6[0],\n      setOpenState = _React$useState6[1];\n\n  var open = isOpenControlled ? openProp : openState;\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue,\n    getOptionLabel: getOptionLabel\n  }) : [];\n  popupOpen = freeSolo && filteredOptions.length === 0 ? false : popupOpen;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      var missingValue = (multiple ? value : [value]).filter(function (value2) {\n        return !options.some(function (option) {\n          return getOptionSelected(option, value2);\n        });\n      });\n\n      if (missingValue.length > 0) {\n        console.warn([\"Material-UI: the value provided to \".concat(componentName, \" is invalid.\"), \"None of the options match with `\".concat(missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0]), \"`.\"), 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      var nextFocusDisabled = disabledItemsFocusable ? false : option && (option.disabled || option.getAttribute('aria-disabled') === 'true');\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var changeHighlightedIndex = useEventCallback(function (diff, direction) {\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex(nextIndex);\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    var valueItem = multiple ? value[0] : value; // The popup is empty\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex('reset', 'next');\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (!filterSelectedOptions && valueItem != null) {\n      var itemIndex = findIndex(filteredOptions, function (optionItem) {\n        return getOptionSelected(optionItem, valueItem);\n      });\n      setHighlightedIndex(itemIndex);\n      return;\n    } // Keep the index in the boundaries\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex(filteredOptions.length - 1);\n    } // Ignore filterOptions => options, getOptionSelected, getOptionLabel)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [value, open, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, inputValue, multiple]);\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    if (onOpen) {\n      onOpen(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(true);\n    }\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (!open) {\n      return;\n    }\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(false);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue, reason, details) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValue(newValue);\n  };\n\n  var selectNewValue = function selectNewValue(event, option) {\n    var reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'select-option';\n    var origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    var reason = reasonProp;\n    var newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        var matches = newValue.filter(function (val) {\n          return getOptionSelected(option, val);\n        });\n\n        if (matches.length > 1) {\n          console.error([\"Material-UI: the `getOptionSelected` method of \".concat(componentName, \" do not handle the arguments correctly.\"), \"The component expects a single value to match a given option but found \".concat(matches.length, \" matches.\")].join('\\n'));\n        }\n      }\n\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(option, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option: option\n    });\n\n    if (!disableCloseOnSelect) {\n      handleClose(event, reason);\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('start', 'next');\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('end', 'previous');\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(-pageSize, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(pageSize, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(1, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(-1, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          // Wait until IME is settled.\n          if (event.which === 229) {\n            break;\n          }\n\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            var option = filteredOptions[highlightedIndexRef.current];\n            var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            if (disabled) {\n              return;\n            } // We don't want to validate the form.\n\n\n            event.preventDefault();\n            selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n\n            var newValue = _toConsumableArray(value);\n\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'remove-option', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    // Ignore the event when using the scrollbar with IE 11\n    if (listboxRef.current !== null && document.activeElement === listboxRef.current.parentElement) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (!freeSolo) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    setHighlightedIndex(index, 'mouse');\n  };\n\n  var isTouch = React.useRef(false);\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = _toConsumableArray(value);\n\n      newValue.splice(index, 1);\n      handleValue(event, newValue, 'remove-option', {\n        option: value[index]\n      });\n    };\n  };\n\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    } // Automatically select the first option as the listbox become visible.\n\n\n    if (highlightedIndexRef.current === -1 && autoHighlight) {\n      changeHighlightedIndex('reset', 'next');\n    } else {\n      // Restore the focus to the correct option.\n      setHighlightedIndex(highlightedIndexRef.current);\n    }\n  });\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '') {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    var result = []; // used to keep track of key and indexes in the result array\n\n    var indexByKey = new Map();\n    var currentResultIndex = 0;\n    filteredOptions.forEach(function (option) {\n      var key = groupBy(option);\n\n      if (indexByKey.get(key) === undefined) {\n        indexByKey.set(key, currentResultIndex);\n        result.push({\n          key: key,\n          options: []\n        });\n        currentResultIndex += 1;\n      }\n\n      result[indexByKey.get(key)].options.push(option);\n    }); // now we can add the `index` property based on the options length\n\n    var indexCounter = 0;\n    result.forEach(function (option) {\n      option.index = indexCounter;\n      indexCounter += option.options.length;\n    });\n    groupedOptions = result;\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref2) {\n      var index = _ref2.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref3) {\n      var index = _ref3.index,\n          option = _ref3.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}\nuseAutocomplete.propTypes = {\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * The component name that is using this hook. Used for warnings.\n   */\n  componentName: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input is filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * A filter function that determins the options that are eligible.\n   *\n   * @param {any} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {boolean}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {any} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the text input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason One of \"input\" (user input) or \"reset\" (programmatic change).\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any\n};","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js"],"names":["_extends","_toConsumableArray","_typeof","_slicedToArray","React","PropTypes","setRef","useEventCallback","useControlled","stripDiacritics","string","normalize","replace","createFilterOptions","config","arguments","length","undefined","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","limit","_config$matchFrom","matchFrom","_config$startAfter","startAfter","stringify","_config$trim","trim","options","_ref","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","findIndex","array","comp","i","defaultFilterOptions","pageSize","useAutocomplete","props","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","_props$clearOnEscape","clearOnEscape","_props$componentName","componentName","_props$debug","debug","_props$defaultValue","defaultValue","multiple","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disabledItemsF","disabledItemsFocusable","_props$disableListWra","disableListWrap","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","freeSolo","getOptionDisabled","_props$getOptionLabel","x","_props$getOptionSelec","getOptionSelected","value","groupBy","idProp","id","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","onChange","onClose","onInputChange","onOpen","openProp","open","_props$openOnFocus","openOnFocus","_props$selectOnFocus","selectOnFocus","valueProp","_React$useState","useState","defaultId","setDefaultId","useEffect","concat","Math","round","random","ignoreFocus","useRef","firstFocus","inputRef","listboxRef","_React$useState2","anchorEl","setAnchorEl","_React$useState3","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setHighlightedIndex","index","mouse","current","removeAttribute","setAttribute","prev","querySelector","listboxNode","parentElement","scrollTop","scrollHeight","clientHeight","element","scrollBottom","elementBottom","offsetTop","offsetHeight","_useControlled","controlled","default","name","_useControlled2","setValue","_React$useRef","isInputValueControlled","_React$useState4","inputValueState","setInputValue","_React$useState5","focused","setFocused","resetInputValue","event","newValue","newInputValue","optionLabel","process","env","NODE_ENV","erroneousReturn","console","error","JSON","_React$useRef2","isOpenControlled","_React$useState6","openState","setOpenState","inputValueIsSelectedValue","popupOpen","some","value2","missingValue","warn","join","focusTag","tagToFocus","focus","validOptionIndex","direction","nextFocus","nextFocusDisabled","disabled","getAttribute","hasAttribute","changeHighlightedIndex","diff","getNextIndex","maxIndex","newIndex","abs","nextIndex","setSelectionRange","valueItem","itemIndex","optionItem","handleOpen","handleClose","reason","handleValue","details","selectNewValue","reasonProp","origin","Array","isArray","matches","val","push","splice","validTagIndex","handleFocusTag","nextTag","handleClear","handleKeyDown","other","key","preventDefault","which","stopPropagation","onKeyDown","handleFocus","handleBlur","document","activeElement","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","isTouch","handleOptionTouchStart","handleOptionClick","blur","handleTagDelete","handleListboxRef","node","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","result","indexByKey","Map","currentResultIndex","forEach","get","set","indexCounter","getRootProps","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","ref","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref2","onDelete","getListboxProps","getOptionProps","_ref3","selected","onMouseOver","onTouchStart","propTypes","bool","classes","object","className","any","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { setRef, useEventCallback, useControlled } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      limit = config.limit,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      _config$startAfter = config.startAfter,\n      startAfter = _config$startAfter === void 0 ? 0 : _config$startAfter,\n      stringify = config.stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue,\n        getOptionLabel = _ref.getOptionLabel;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    if (startAfter > 0 && input.length <= startAfter) {\n      return [];\n    }\n\n    var filteredOptions = options.filter(function (option) {\n      var candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      options = props.options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value;\n\n  var _React$useState = React.useState(),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idProp || defaultId;\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultId(\"mui-autocomplete-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState2 = React.useState(null),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      focusedTag = _React$useState3[0],\n      setFocusedTag = _React$useState3[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n  var setHighlightedIndex = useEventCallback(function (index) {\n    var mouse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && !mouse) {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var _React$useRef = React.useRef(inputValueProp != null),\n      isInputValueControlled = _React$useRef.current;\n\n  var _React$useState4 = React.useState(''),\n      inputValueState = _React$useState4[0],\n      setInputValue = _React$useState4[1];\n\n  var inputValue = isInputValueControlled ? inputValueProp : inputValueState;\n\n  var _React$useState5 = React.useState(false),\n      focused = _React$useState5[0],\n      setFocused = _React$useState5[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof optionLabel !== 'string') {\n          var erroneousReturn = optionLabel === undefined ? 'undefined' : \"\".concat(_typeof(optionLabel), \" (\").concat(optionLabel, \")\");\n          console.error(\"Material-UI: the `getOptionLabel` method of \".concat(componentName, \" returned \").concat(erroneousReturn, \" instead of a string for \").concat(JSON.stringify(newValue), \".\"));\n        }\n      }\n\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _React$useRef2 = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef2.current;\n\n  var _React$useState6 = React.useState(false),\n      openState = _React$useState6[0],\n      setOpenState = _React$useState6[1];\n\n  var open = isOpenControlled ? openProp : openState;\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue,\n    getOptionLabel: getOptionLabel\n  }) : [];\n  popupOpen = freeSolo && filteredOptions.length === 0 ? false : popupOpen;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      var missingValue = (multiple ? value : [value]).filter(function (value2) {\n        return !options.some(function (option) {\n          return getOptionSelected(option, value2);\n        });\n      });\n\n      if (missingValue.length > 0) {\n        console.warn([\"Material-UI: the value provided to \".concat(componentName, \" is invalid.\"), \"None of the options match with `\".concat(missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0]), \"`.\"), 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      var nextFocusDisabled = disabledItemsFocusable ? false : option && (option.disabled || option.getAttribute('aria-disabled') === 'true');\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var changeHighlightedIndex = useEventCallback(function (diff, direction) {\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex(nextIndex);\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    var valueItem = multiple ? value[0] : value; // The popup is empty\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex('reset', 'next');\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (!filterSelectedOptions && valueItem != null) {\n      var itemIndex = findIndex(filteredOptions, function (optionItem) {\n        return getOptionSelected(optionItem, valueItem);\n      });\n      setHighlightedIndex(itemIndex);\n      return;\n    } // Keep the index in the boundaries\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex(filteredOptions.length - 1);\n    } // Ignore filterOptions => options, getOptionSelected, getOptionLabel)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [value, open, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, inputValue, multiple]);\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    if (onOpen) {\n      onOpen(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(true);\n    }\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (!open) {\n      return;\n    }\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(false);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue, reason, details) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValue(newValue);\n  };\n\n  var selectNewValue = function selectNewValue(event, option) {\n    var reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'select-option';\n    var origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    var reason = reasonProp;\n    var newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        var matches = newValue.filter(function (val) {\n          return getOptionSelected(option, val);\n        });\n\n        if (matches.length > 1) {\n          console.error([\"Material-UI: the `getOptionSelected` method of \".concat(componentName, \" do not handle the arguments correctly.\"), \"The component expects a single value to match a given option but found \".concat(matches.length, \" matches.\")].join('\\n'));\n        }\n      }\n\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(option, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option: option\n    });\n\n    if (!disableCloseOnSelect) {\n      handleClose(event, reason);\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('start', 'next');\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('end', 'previous');\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(-pageSize, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(pageSize, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(1, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(-1, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          // Wait until IME is settled.\n          if (event.which === 229) {\n            break;\n          }\n\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            var option = filteredOptions[highlightedIndexRef.current];\n            var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            if (disabled) {\n              return;\n            } // We don't want to validate the form.\n\n\n            event.preventDefault();\n            selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n\n            var newValue = _toConsumableArray(value);\n\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'remove-option', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    // Ignore the event when using the scrollbar with IE 11\n    if (listboxRef.current !== null && document.activeElement === listboxRef.current.parentElement) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (!freeSolo) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    setHighlightedIndex(index, 'mouse');\n  };\n\n  var isTouch = React.useRef(false);\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = _toConsumableArray(value);\n\n      newValue.splice(index, 1);\n      handleValue(event, newValue, 'remove-option', {\n        option: value[index]\n      });\n    };\n  };\n\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    } // Automatically select the first option as the listbox become visible.\n\n\n    if (highlightedIndexRef.current === -1 && autoHighlight) {\n      changeHighlightedIndex('reset', 'next');\n    } else {\n      // Restore the focus to the correct option.\n      setHighlightedIndex(highlightedIndexRef.current);\n    }\n  });\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '') {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    var result = []; // used to keep track of key and indexes in the result array\n\n    var indexByKey = new Map();\n    var currentResultIndex = 0;\n    filteredOptions.forEach(function (option) {\n      var key = groupBy(option);\n\n      if (indexByKey.get(key) === undefined) {\n        indexByKey.set(key, currentResultIndex);\n        result.push({\n          key: key,\n          options: []\n        });\n        currentResultIndex += 1;\n      }\n\n      result[indexByKey.get(key)].options.push(option);\n    }); // now we can add the `index` property based on the options length\n\n    var indexCounter = 0;\n    result.forEach(function (option) {\n      option.index = indexCounter;\n      indexCounter += option.options.length;\n    });\n    groupedOptions = result;\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref2) {\n      var index = _ref2.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref3) {\n      var index = _ref3.index,\n          option = _ref3.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}\nuseAutocomplete.propTypes = {\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * The component name that is using this hook. Used for warnings.\n   */\n  componentName: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input is filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * A filter function that determins the options that are eligible.\n   *\n   * @param {any} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {boolean}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {any} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the text input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason One of \"input\" (user input) or \"reset\" (programmatic change).\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any\n};"]},"metadata":{},"sourceType":"module"}