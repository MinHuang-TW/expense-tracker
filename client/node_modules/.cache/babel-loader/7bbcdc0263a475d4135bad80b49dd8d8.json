{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkDay, sortAmountDsc, sortAmountAsc, sortDateDsc } from '../utils/calculation';\nimport Filter from './common/Filter';\nimport Transaction from './common/Transaction';\nimport { CircularProgress } from '@material-ui/core';\n\nconst TransactionList = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [sortColumn, setSortColum] = useState('date'); // eslint-disable-next-line\n\n  const [sortLatest, setSortLatest] = useState(true);\n  const [sortDsc, setSortDsc] = useState(true);\n  const lists = transactions.filter(transaction => checkDay(transaction.date)).sort((a, b) => {\n    if (sortColumn === 'date') return sortDateDsc(a, b);\n    return sortDsc ? sortAmountDsc(a, b) : sortAmountAsc(a, b);\n  });\n  const transition = useTransition(lists, list => list._id, {\n    from: {\n      transform: 'translate3d(-5%,0,0)',\n      opacity: 0\n    },\n    enter: {\n      transform: 'translate3d(0%,0,0)',\n      opacity: 1\n    },\n    leave: {\n      transform: 'translate3d(550%,0,0)',\n      opacity: 0\n    },\n    trail: 500\n  });\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Filter, {\n    value: 0,\n    sortLatest: sortLatest,\n    sortDsc: sortDsc // handleSortAmount={() => setSortDsc(!sortDsc)}\n    ,\n    handleSortAmount: () => {\n      setSortDsc(!sortDsc);\n      setSortColum('amount');\n    },\n    text: \"today\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, transition.map(({\n    item,\n    props,\n    key\n  }) => {\n    return React.createElement(animated.div, {\n      key: key,\n      style: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Transaction, {\n      transaction: item,\n      menu: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }), lists.length === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"No transaction today\")) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Add your first transaction\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), \"by clicking the green plus button\")));\n};\n\nexport default TransactionList;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx"],"names":["React","useState","useContext","useEffect","useTransition","animated","GlobalContext","checkDay","sortAmountDsc","sortAmountAsc","sortDateDsc","Filter","Transaction","CircularProgress","TransactionList","loading","transactions","getTransactions","sortColumn","setSortColum","sortLatest","setSortLatest","sortDsc","setSortDsc","lists","filter","transaction","date","sort","a","b","transition","list","_id","from","transform","opacity","enter","leave","trail","length","map","item","props","key"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkDay, sortAmountDsc, sortAmountAsc, sortDateDsc } from '../utils/calculation';\nimport Filter from './common/Filter';\nimport Transaction from './common/Transaction';\nimport { CircularProgress } from '@material-ui/core';\n\nconst TransactionList = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [sortColumn, setSortColum] = useState('date');\n  // eslint-disable-next-line\n  const [sortLatest, setSortLatest] = useState(true);\n  const [sortDsc, setSortDsc] = useState(true);\n  const lists = transactions\n    .filter(transaction => checkDay(transaction.date))\n    .sort((a, b) => {\n      if (sortColumn === 'date') return sortDateDsc(a, b);\n      return sortDsc ? sortAmountDsc(a, b) : sortAmountAsc(a, b);\n    })\n\n  const transition = useTransition(lists, list => list._id, {\n    from: { transform: 'translate3d(-5%,0,0)', opacity: 0 },\n    enter: { transform: 'translate3d(0%,0,0)', opacity: 1 },\n    leave: { transform: 'translate3d(550%,0,0)', opacity: 0 },\n    trail: 500,\n  })\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className='container'>\n      <Filter \n        value={0} \n        sortLatest={sortLatest}\n        sortDsc={sortDsc}\n        // handleSortAmount={() => setSortDsc(!sortDsc)}\n        handleSortAmount={() => {\n          setSortDsc(!sortDsc); setSortColum('amount')\n        }}\n        text=\"today\"\n      />\n\n      {transactions.length > 0 ? (\n        <ul className='list'>\n          {transition\n            .map(({ item, props, key }) => {\n              return (\n                <animated.div key={key} style={props}>\n                  <Transaction transaction={item} menu />\n                </animated.div>\n              );\n            })}\n          {lists.length === 0 && (\n            <div className='list-status'>No transaction today</div>\n          )}\n        </ul>\n      ) : (\n        <div className='list-status'>\n          {loading \n            ? <CircularProgress color='primary'/>\n            : <span>\n                Add your first transaction<br/>\n                by clicking the green plus button\n              </span>\n          }\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TransactionList;\n"]},"metadata":{},"sourceType":"module"}