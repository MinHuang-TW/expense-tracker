{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { useTransition, animated, config } from 'react-spring';\nimport moment from 'moment';\nimport { v4 as id } from 'uuid';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './common/Transaction';\nimport BarChart from '../components/common/BarChart';\nimport { Tabs, Tab, CircularProgress } from '@material-ui/core';\nimport transitions from '@material-ui/core/styles/transitions';\n\nconst Statistics = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const today = moment();\n  const timeFilters = ['week', 'month', 'year'];\n  const allKeys = ['income', 'expense'];\n  const combinedLists = [];\n\n  const filterDate = time => {\n    return transactions.filter(transaction => moment(transaction.date).isSame(today, time));\n  };\n\n  const sumAmount = (time, filter, order) => {\n    return Object.values(filterDate(time).reduce((result, {\n      date,\n      amount\n    }) => {\n      const index = date => moment(date).format(order);\n\n      const format = date => moment(date).format(filter);\n\n      !result[format(date)] ? result[format(date)] = {\n        _id: id(),\n        index: +index(date),\n        text: format(date),\n        income: amount > 0 ? amount : 0,\n        expense: amount < 0 ? amount : 0\n      } : amount > 0 ? result[format(date)].income += amount : result[format(date)].expense += amount;\n      return result;\n    }, {}));\n  }; // eslint-disable-next-line\n\n\n  switch (value) {\n    case 0:\n      combinedLists.push(...sumAmount('week', 'dddd', 'e'));\n      break;\n\n    case 1:\n      combinedLists.push(...sumAmount('month', 'w', 'w'));\n      combinedLists.forEach(list => list['text'] = 'Week ' + list['text']);\n      break;\n\n    case 2:\n      combinedLists.push(...sumAmount('year', 'MMMM', 'MM'));\n      break;\n  }\n\n  const transition = useTransition(combinedLists, list => list._id, {\n    from: {\n      height: 86,\n      transform: 'translate3d(-5%,0,0)',\n      opacity: 0\n    },\n    enter: {\n      height: 86,\n      transform: 'translate3d(0%,0,0)',\n      opacity: 1\n    },\n    leave: {\n      height: 0,\n      transform: 'translate3d(-5%,0,0)',\n      opacity: 0\n    },\n    trail: 100,\n    config: config.default\n  });\n  console.log(combinedLists);\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"plus-bg time-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    \"aria-label\": \"time selectors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, timeFilters.map((timeFilter, index) => React.createElement(Tab, {\n    key: timeFilter,\n    label: timeFilter,\n    onClick: () => setValue(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"plus-bg box\",\n    style: {\n      height: '250px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"box-incomeExpense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, combinedLists.length > 0 ? React.createElement(BarChart, {\n    data: combinedLists,\n    keys: allKeys,\n    select: value,\n    height: \"180\",\n    width: window.innerWidth > 320 ? 350 : 288,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }) : React.createElement(\"p\", {\n    className: \"text-white-s vertical-align\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"No transaction\"))), React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      marginTop: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, combinedLists.length > 0 ? // <ul className='list'>\n  //   {combinedLists\n  //     .sort((a, b) => (a.index < b.index ? -1 : 1))\n  //     .map((list, index) => (\n  //       <Transaction key={index} transaction={list} />\n  //     ))}\n  // </ul>\n  React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, transition.map(({\n    item,\n    key,\n    props\n  }) => React.createElement(animated.div, {\n    style: props,\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Transaction, {\n    transaction: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })))) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"No transaction of the \", timeFilters[value]))));\n};\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx"],"names":["React","Fragment","useState","useEffect","useContext","useTransition","animated","config","moment","v4","id","GlobalContext","Transaction","BarChart","Tabs","Tab","CircularProgress","transitions","Statistics","loading","transactions","getTransactions","value","setValue","today","timeFilters","allKeys","combinedLists","filterDate","time","filter","transaction","date","isSame","sumAmount","order","Object","values","reduce","result","amount","index","format","_id","text","income","expense","push","forEach","list","transition","from","height","transform","opacity","enter","leave","trail","default","console","log","map","timeFilter","length","window","innerWidth","marginTop","item","key","props"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { useTransition, animated, config } from 'react-spring';\nimport moment from 'moment';\nimport { v4 as id } from 'uuid';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './common/Transaction';\nimport BarChart from '../components/common/BarChart';\nimport { Tabs, Tab, CircularProgress } from '@material-ui/core';\nimport transitions from '@material-ui/core/styles/transitions';\n\nconst Statistics = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const today = moment();\n  const timeFilters = ['week', 'month', 'year'];\n  const allKeys = ['income', 'expense'];\n  const combinedLists = [];\n\n  const filterDate = (time) => {\n    return transactions.filter((transaction) =>\n      moment(transaction.date).isSame(today, time)\n    );\n  };\n\n  const sumAmount = (time, filter, order) => {\n    return Object.values(\n      filterDate(time).reduce((result, { date, amount }) => {\n        const index = (date) => moment(date).format(order);\n        const format = (date) => moment(date).format(filter);\n\n        !result[format(date)]\n          ? (result[format(date)] = {\n              _id: id(),\n              index: +index(date),\n              text: format(date),\n              income: amount > 0 ? amount : 0,\n              expense: amount < 0 ? amount : 0,\n            })\n          : amount > 0\n            ? (result[format(date)].income += amount)\n            : (result[format(date)].expense += amount);\n        \n        return result;\n      }, {})\n    );\n  };\n\n  // eslint-disable-next-line\n  switch (value) {\n    case 0:\n      combinedLists.push(...sumAmount('week', 'dddd', 'e'));\n      break;\n    case 1:\n      combinedLists.push(...sumAmount('month', 'w', 'w'));\n      combinedLists.forEach(list => (list['text'] = 'Week ' + list['text']));\n      break;\n    case 2:\n      combinedLists.push(...sumAmount('year', 'MMMM', 'MM'));\n      break;\n  }\n\n  const transition = useTransition(\n    combinedLists, \n    list => list._id, {\n      from: { height: 86, transform: 'translate3d(-5%,0,0)', opacity: 0 },\n      enter: { height: 86, transform: 'translate3d(0%,0,0)', opacity: 1 },\n      leave: { height: 0, transform: 'translate3d(-5%,0,0)', opacity: 0 },\n      trail: 100,\n      config: config.default,\n    }\n  );\n  console.log(combinedLists)\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Fragment>\n      <div className='plus-bg time-bar'>\n        <Tabs value={value} variant='fullWidth' aria-label='time selectors'>\n          {timeFilters.map((timeFilter, index) => (\n            <Tab\n              key={timeFilter}\n              label={timeFilter}\n              onClick={() => setValue(index)}\n              disableFocusRipple\n              disableRipple\n            />\n          ))}\n        </Tabs>\n      </div>\n\n      <div className='plus-bg box' style={{ height: '250px' }}>\n        <div className='box-incomeExpense'>\n          {combinedLists.length > 0 \n            ? <BarChart\n                data={combinedLists}\n                keys={allKeys}\n                select={value}\n                height='180'\n                width={window.innerWidth > 320 ? 350 : 288}\n              /> \n            : <p className='text-white-s vertical-align'>\n                No transaction\n              </p>\n          }\n        </div>\n      </div>\n\n      <div className='container' style={{ marginTop: 0 }}>\n        {combinedLists.length > 0 ? (\n          // <ul className='list'>\n          //   {combinedLists\n          //     .sort((a, b) => (a.index < b.index ? -1 : 1))\n          //     .map((list, index) => (\n          //       <Transaction key={index} transaction={list} />\n          //     ))}\n          // </ul>\n          <ul className='list'>\n            {transition.map(({ item, key, props }) => (\n              <animated.div style={props} key={key}>\n                <Transaction transaction={item} />\n              </animated.div>\n            ))}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? (<CircularProgress color='primary' />) \n              : (<p>No transaction of the {timeFilters[value]}</p>)\n            }\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}