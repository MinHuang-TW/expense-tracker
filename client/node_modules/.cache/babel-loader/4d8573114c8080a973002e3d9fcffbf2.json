{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/context/GlobalState.jsx\";\nimport React, { createContext, useReducer } from 'react';\nimport axios from 'axios';\nimport AppReducer from './AppReducer';\nconst initialState = {\n  users: [],\n  transactions: [],\n  token: null,\n  error: null,\n  loading: true\n};\nexport const GlobalContext = createContext(initialState);\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  axios.defaults.headers.common[\"x-auth-token\"] = localStorage.getItem('token');\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/transactions'); // console.log(res)\n\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/transactions/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/transactions', transaction, config);\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        // err.response.data: { success: false, error: '...' }\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function registerUser(user) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/user/register', user, config);\n      dispatch({\n        type: 'REGISTER_USER',\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response\n      });\n    }\n  }\n\n  async function loginUser(user) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/user/login', user, config);\n      dispatch({\n        type: 'LOGIN_USER',\n        // res.data = { success: , token: , user: { id: , name: , email: }}\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response\n      });\n    }\n  }\n\n  async function loadUser(user) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }; // const token = state.token;\n    // console.log(state.token)\n    // if (state.token) {\n    //   config.headers[\"x-auth-token\"] = state.token;\n    // }\n    // console.log(config.headers)\n\n    try {\n      const res = await axios.get('/api/user', user, config);\n      dispatch({\n        type: 'LOAD_USER',\n        payload: res.data.user\n      }); // console.log(res.data)\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response\n      });\n    }\n  }\n\n  return React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      users: state.users,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction,\n      registerUser,\n      loginUser,\n      loadUser\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/context/GlobalState.jsx"],"names":["React","createContext","useReducer","axios","AppReducer","initialState","users","transactions","token","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","defaults","headers","common","localStorage","getItem","getTransactions","res","get","type","payload","data","err","response","deleteTransaction","id","delete","addTransaction","transaction","config","post","registerUser","user","loginUser","loadUser"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport axios from 'axios';\nimport AppReducer from './AppReducer';\n\nconst initialState = {\n  users: [],\n  transactions: [],\n  token: null,\n  error: null,\n  loading: true\n};\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  axios.defaults.headers.common[\"x-auth-token\"] = localStorage.getItem('token');\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/transactions');\n      // console.log(res)\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/transactions/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      })\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    try {\n      const res = await axios.post('/api/transactions', transaction, config);\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        // err.response.data: { success: false, error: '...' }\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function registerUser(user) {\n    const config = {\n      headers: { 'Content-Type': 'application/json' }\n    }\n\n    try {\n      const res = await axios.post('/api/user/register', user, config);\n      dispatch({\n        type: 'REGISTER_USER',\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response\n      });\n    }\n  }\n\n  async function loginUser(user) {\n    const config = {\n      headers: { 'Content-Type': 'application/json' }\n    }\n\n    try {\n      const res = await axios.post('/api/user/login', user, config);\n      dispatch({\n        type: 'LOGIN_USER',\n        // res.data = { success: , token: , user: { id: , name: , email: }}\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response\n      });\n    }\n  }\n\n  async function loadUser(user) {\n    const config = {\n      headers: { 'Content-Type': 'application/json' }\n    };\n    // const token = state.token;\n    // console.log(state.token)\n    // if (state.token) {\n    //   config.headers[\"x-auth-token\"] = state.token;\n    // }\n    // console.log(config.headers)\n\n    try {\n      const res = await axios.get('/api/user', user, config);\n      dispatch({\n        type: 'LOAD_USER',\n        payload: res.data.user\n      });\n      // console.log(res.data)\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response\n      });\n    }\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        users: state.users,\n        error: state.error,\n        loading: state.loading,\n        getTransactions,\n        deleteTransaction,\n        addTransaction,\n        registerUser,\n        loginUser,\n        loadUser,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}