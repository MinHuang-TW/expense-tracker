{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkDate, checkWeek } from '../utils/format';\nimport Transaction from './Transaction';\nimport { Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Report = () => {\n  const [value, setValue] = useState(0);\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [progress, setProgress] = useState(0);\n  const classes = useStyles();\n  const timeFilters = ['daily', 'weekly', 'monthly', 'yearly'];\n  const date = checkDate(new Date());\n\n  const dateArr = data => data.slice(0, 10).split('-');\n\n  const transFilters = ['all', 'income', 'expense'];\n  let counter = 0;\n  useEffect(() => {\n    const tick = () => {\n      setProgress(oldProgress => oldProgress >= 100 ? 0 : oldProgress + 1);\n    };\n\n    const timer = setInterval(tick, 20);\n    getTransactions();\n    return () => {\n      clearInterval(timer);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      background: '#65bcbf',\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\" // indicatorColor=\"primary\"\n    // textColor=\"primary\"\n    ,\n    \"aria-label\": \"disabled tabs example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, timeFilters.map((timeFilter, index) => React.createElement(Tab, {\n    key: timeFilter,\n    label: timeFilter,\n    onClick: () => setValue(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    fullWidth: true,\n    disableRipple: true,\n    color: \"primary\",\n    \"aria-label\": \"outlined primary button group\",\n    style: {\n      marginBottom: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, transFilters.map(transFilter => React.createElement(Button, {\n    key: transFilter,\n    style: {\n      borderRadius: 0\n    },\n    disableElevation: true,\n    disableFocusRipple: true,\n    disableRipple: true,\n    variant: selected === transFilter ? 'contained' : null,\n    color: selected === transFilter ? 'primary' : null,\n    onClick: () => setSelected(transFilter),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, transFilter))), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, transactions.filter(transaction => {\n    const data = dateArr(transaction.date);\n    if (value === 0) return data[2] === date[2];\n    if (value === 1) return data[1] === date[1];\n    if (value === 2) return checkWeek(transaction.date);\n    if (value === 3) return data[0] === date[0];\n    return transaction;\n  }).filter(transaction => {\n    switch (selected) {\n      case 'income':\n        return transaction.amount > 0;\n\n      case 'expense':\n        return transaction.amount < 0;\n\n      default:\n        return transaction;\n    }\n  }).sort((a, b) => {\n    let dateA = new Date(a.date);\n    let dateB = new Date(b.date);\n    if (dateA < dateB) return 1;\n    if (dateA > dateB) return -1;\n    return 0;\n  }).map(transaction => {\n    counter++;\n    return React.createElement(Transaction, {\n      key: transaction._id,\n      transaction: transaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    });\n  }), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"No \", selected, \" transaction\")) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    variant: \"determinate\",\n    value: progress,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }) : 'No transaction')));\n};\n\nexport default Report;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx"],"names":["React","Fragment","useState","useEffect","useContext","GlobalContext","checkDate","checkWeek","Transaction","Tabs","Tab","Button","ButtonGroup","CircularProgress","makeStyles","Report","value","setValue","loading","transactions","getTransactions","selected","setSelected","progress","setProgress","classes","useStyles","timeFilters","date","Date","dateArr","data","slice","split","transFilters","counter","tick","oldProgress","timer","setInterval","clearInterval","background","color","map","timeFilter","index","marginBottom","transFilter","borderRadius","length","filter","transaction","amount","sort","a","b","dateA","dateB","_id"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkDate, checkWeek } from '../utils/format';\nimport Transaction from './Transaction';\nimport { Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Report = () => {\n  const [value, setValue] = useState(0);\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [progress, setProgress] = useState(0);\n\n  const classes = useStyles();\n\n  const timeFilters = ['daily', 'weekly', 'monthly', 'yearly'];\n  const date = checkDate(new Date());\n  const dateArr = data => data.slice(0, 10).split('-');\n\n  const transFilters = ['all', 'income', 'expense'];\n  let counter = 0;\n\n  useEffect(() => {\n    const tick = () => {\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\n    };\n    const timer = setInterval(tick, 20);\n\n    getTransactions();\n\n    return () => {\n      clearInterval(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <div style={{ background: '#65bcbf', color: 'white' }}>\n        <Tabs\n          value={value} variant='fullWidth'\n          // indicatorColor=\"primary\"\n          // textColor=\"primary\"\n          aria-label=\"disabled tabs example\"\n          >\n          {timeFilters.map((timeFilter, index) => \n            <Tab \n              key={timeFilter} label={timeFilter} \n              onClick={() => setValue(index)} \n              disableFocusRipple disableRipple\n            />\n          )}\n        </Tabs>\n      </div>\n\n      <div className='container'>\n        <ButtonGroup\n          fullWidth disableRipple\n          color='primary'\n          aria-label='outlined primary button group'\n          style={{ marginBottom: '10px' }}\n        >\n          {transFilters.map(transFilter => (\n            <Button\n              key={transFilter}\n              style={{ borderRadius: 0 }}\n              disableElevation disableFocusRipple disableRipple\n              variant={selected === transFilter ? 'contained' : null}\n              color={selected === transFilter ? 'primary' : null}\n              onClick={() => setSelected(transFilter)}\n            >\n              {transFilter}\n            </Button>\n          ))}\n        </ButtonGroup>\n\n        {transactions.length > 0 ? (\n          <ul className='list'>\n            {transactions\n              .filter(transaction => {\n                const data = dateArr(transaction.date);\n                if (value === 0) return data[2] === date[2];\n                if (value === 1) return data[1] === date[1];\n                if (value === 2) return checkWeek(transaction.date);\n                if (value === 3) return data[0] === date[0];\n                return transaction;\n              })\n              .filter(transaction => {\n                switch (selected) {\n                  case 'income':\n                    return transaction.amount > 0;\n                  case 'expense':\n                    return transaction.amount < 0;\n                  default:\n                    return transaction;\n                }\n              })\n              .sort((a, b) => {\n                let dateA = new Date(a.date);\n                let dateB = new Date(b.date);\n                \n                if (dateA < dateB) return 1;\n                if (dateA > dateB) return -1;\n                return 0;\n              })\n              .map(transaction => {\n                counter++;\n                return (\n                  <Transaction key={transaction._id} transaction={transaction} />\n                );\n              })}\n            {counter === 0 && (\n              <div className='list-status'>No {selected} transaction</div>\n            )}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? <CircularProgress variant='determinate' value={progress} color='secondary'/>\n              : 'No transaction'}\n          </div>\n        )}\n      </div>\n\n\n    </Fragment>\n  );\n}\n\nexport default Report;"]},"metadata":{},"sourceType":"module"}