{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './common/Transaction';\nimport BarChart from '../components/common/BarChart';\nimport { Tabs, Tab, CircularProgress } from '@material-ui/core';\n\nconst Statistics = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const today = moment();\n  const timeFilters = ['week', 'month', 'year'];\n  const allKeys = ['income', 'expense'];\n  const combinedLists = [];\n\n  const filterDate = time => {\n    return transactions.filter(transaction => moment(transaction.date).isSame(today, time));\n  };\n\n  const sumAmount = (time, filter, order) => {\n    return Object.values(filterDate(time).reduce((result, {\n      date,\n      amount\n    }) => {\n      const index = date => moment(date).format(order);\n\n      const format = date => moment(date).format(filter);\n\n      !result[format(date)] ? result[format(date)] = {\n        index: +index(date),\n        text: format(date),\n        income: amount > 0 ? amount : 0,\n        expense: amount < 0 ? amount : 0\n      } : amount > 0 ? result[format(date)].income += amount : result[format(date)].expense += amount;\n      return result;\n    }, {}));\n  };\n\n  if (value === 0) {\n    combinedLists.push(...sumAmount('week', 'dddd', 'e'));\n  } else if (value === 1) {\n    // const filter = 'D MMM';\n    // const sunday = (weekNum) => moment().day(0).week(weekNum).format(filter);\n    // const saturday = (weekNum) => moment().day(6).week(weekNum).format(filter);\n    // const formatWeek = (weekNum) => `${sunday(weekNum)} - ${saturday(weekNum)}`;\n    combinedLists.push(...sumAmount('month', 'w', 'w'));\n    combinedLists.forEach(list => list['text'] = 'Wk ' + list['text']); // combinedLists.forEach((list) => (list['text'] = formatWeek(list.index)));\n  } else if (value === 2) {\n    combinedLists.push(...sumAmount('year', 'MMMM', 'MM'));\n  }\n\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"plus-bg time-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    \"aria-label\": \"time selectors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, timeFilters.map((timeFilter, index) => React.createElement(Tab, {\n    key: timeFilter,\n    label: timeFilter,\n    onClick: () => setValue(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"plus-bg box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"box-incomeExpense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(BarChart, {\n    data: combinedLists,\n    keys: allKeys,\n    select: value,\n    width: \"320\",\n    height: \"145\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, combinedLists.sort((a, b) => a.index < b.index ? -1 : 1).map((list, index) => React.createElement(Transaction, {\n    key: index,\n    transaction: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), combinedLists.length === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"No transaction of the \", timeFilters[value])) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }) : 'No transaction')));\n};\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx"],"names":["React","Fragment","useState","useEffect","useContext","moment","GlobalContext","Transaction","BarChart","Tabs","Tab","CircularProgress","Statistics","loading","transactions","getTransactions","value","setValue","today","timeFilters","allKeys","combinedLists","filterDate","time","filter","transaction","date","isSame","sumAmount","order","Object","values","reduce","result","amount","index","format","text","income","expense","push","forEach","list","map","timeFilter","length","sort","a","b"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './common/Transaction';\nimport BarChart from '../components/common/BarChart';\nimport { Tabs, Tab, CircularProgress } from '@material-ui/core';\n\nconst Statistics = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const today = moment();\n  const timeFilters = ['week', 'month', 'year'];\n  const allKeys = ['income', 'expense'];\n  const combinedLists = [];\n\n  const filterDate = (time) => {\n    return transactions.filter((transaction) =>\n      moment(transaction.date).isSame(today, time)\n    );\n  };\n\n  const sumAmount = (time, filter, order) => {\n    return Object.values(\n      filterDate(time).reduce((result, { date, amount }) => {\n        const index = (date) => moment(date).format(order);\n        const format = (date) => moment(date).format(filter);\n\n        !result[format(date)]\n          ? (result[format(date)] = {\n              index: +index(date),\n              text: format(date),\n              income: amount > 0 ? amount : 0,\n              expense: amount < 0 ? amount : 0,\n            })\n          : amount > 0\n          ? (result[format(date)].income += amount)\n          : (result[format(date)].expense += amount);\n        return result;\n      }, {})\n    );\n  };\n\n  if (value === 0) {\n    combinedLists.push(...sumAmount('week', 'dddd', 'e'));\n  } else if (value === 1) {\n    // const filter = 'D MMM';\n    // const sunday = (weekNum) => moment().day(0).week(weekNum).format(filter);\n    // const saturday = (weekNum) => moment().day(6).week(weekNum).format(filter);\n    // const formatWeek = (weekNum) => `${sunday(weekNum)} - ${saturday(weekNum)}`;\n\n    combinedLists.push(...sumAmount('month', 'w', 'w'));\n    combinedLists.forEach((list) => (list['text'] = 'Wk ' + list['text']));\n    // combinedLists.forEach((list) => (list['text'] = formatWeek(list.index)));\n  } else if (value === 2) {\n    combinedLists.push(...sumAmount('year', 'MMMM', 'MM'));\n  }\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Fragment>\n      <div className='plus-bg time-bar'>\n        <Tabs value={value} variant='fullWidth' aria-label='time selectors'>\n          {timeFilters.map((timeFilter, index) => (\n            <Tab\n              key={timeFilter}\n              label={timeFilter}\n              onClick={() => setValue(index)}\n              disableFocusRipple\n              disableRipple\n            />\n          ))}\n        </Tabs>\n      </div>\n\n      <div className='plus-bg box'>\n        <div className='box-incomeExpense'>\n          <BarChart\n            data={combinedLists}\n            keys={allKeys}\n            select={value}\n            width='320'\n            height='145'\n          />\n        </div>\n      </div>\n\n      <div className='container'>\n        {transactions.length > 0 ? (\n          <ul className='list'>\n            {combinedLists\n              .sort((a, b) => (a.index < b.index ? -1 : 1))\n              .map((list, index) => (\n                <Transaction key={index} transaction={list} />\n              ))}\n            {combinedLists.length === 0 && (\n              <div className='list-status'>\n                No transaction of the {timeFilters[value]}\n              </div>\n            )}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading ? <CircularProgress color='primary' /> : 'No transaction'}\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}