{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport { Tabs, Tab, CircularProgress } from '@material-ui/core';\n\nconst Statistics = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const today = moment();\n  const timeFilters = ['week', 'month', 'year'];\n  const incomeLists = [],\n        expenseLists = [],\n        combinedLists = [];\n  const lists = [{\n    type: 'income',\n    array: incomeLists\n  }, {\n    type: 'expense',\n    array: expenseLists\n  }];\n\n  const sortDate = (type, time) => {\n    return transactions.filter(transaction => moment(transaction.date).isSame(today, time)).filter(transaction => {\n      if (type === 'expense') return transaction.amount < 0;\n      if (type === 'income') return transaction.amount > 0;\n      if (type === 'all') return transaction.amount;\n      return transaction.amount;\n    });\n  };\n\n  const sumAmount = (type, time, filter, order) => {\n    return Object.values(sortDate(type, time).reduce((result, {\n      date,\n      amount\n    }) => {\n      const index = date => moment(date).format(order);\n\n      const format = date => moment(date).format(filter);\n\n      !result[format(date)] ? result[format(date)] = {\n        index: +index(date),\n        text: format(date),\n        amount\n      } : result[format(date)].amount += amount;\n      return result;\n    }, {}));\n  };\n\n  if (value === 0) {\n    lists.map(list => list['array'].push(...sumAmount(list.type, 'week', 'dddd', 'e')));\n  } else if (value === 1) {\n    const filter = 'D MMMM';\n\n    const sunday = weekNum => moment().day(0).week(weekNum).format(filter);\n\n    const saturday = weekNum => moment().day(6).week(weekNum).format(filter);\n\n    const formatWeek = weekNum => `${sunday(weekNum)} - ${saturday(weekNum)}`;\n\n    lists.map(list => list['array'].push(...sumAmount(list.type, 'month', 'w', 'w')));\n    incomeLists.forEach(list => list['text'] = formatWeek(list.index));\n    expenseLists.forEach(list => list['text'] = formatWeek(list.index));\n  } else if (value === 2) {\n    lists.map(list => list['array'].push(...sumAmount(list.type, 'year', 'MMMM', 'MM')));\n  }\n\n  ; // console.log(combinedLists.push(...incomeLists, ...expenseLists))\n  // const combinedLists = incomeLists.concat(expenseLists);\n\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"plus-bg time-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    \"aria-label\": \"time selectors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, timeFilters.map((timeFilter, index) => React.createElement(Tab, {\n    key: timeFilter,\n    label: timeFilter,\n    onClick: () => setValue(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"plus-bg box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container box-incomeExpense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, combinedLists.sort((a, b) => a.index < b.index ? -1 : 1).map((list, index) => React.createElement(Transaction, {\n    key: index,\n    transaction: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), combinedLists.length === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"No expense transaction\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), \"of the \", timeFilters[value])) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }) : 'No transaction')));\n};\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx"],"names":["React","Fragment","useState","useEffect","useContext","moment","GlobalContext","Transaction","Tabs","Tab","CircularProgress","Statistics","loading","transactions","getTransactions","value","setValue","today","timeFilters","incomeLists","expenseLists","combinedLists","lists","type","array","sortDate","time","filter","transaction","date","isSame","amount","sumAmount","order","Object","values","reduce","result","index","format","text","map","list","push","sunday","weekNum","day","week","saturday","formatWeek","forEach","timeFilter","length","sort","a","b"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport { Tabs, Tab, CircularProgress } from '@material-ui/core';\n\nconst Statistics = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const today = moment();\n  const timeFilters = ['week', 'month', 'year'];\n  const incomeLists = [], expenseLists = [], combinedLists = [];\n  const lists = [\n    { type: 'income', array : incomeLists }, \n    { type: 'expense', array: expenseLists }\n  ];\n\n  const sortDate = (type, time) => {\n    return (transactions\n      .filter(transaction => moment(transaction.date).isSame(today, time))\n      .filter(transaction => {\n        if (type === 'expense') return transaction.amount < 0;\n        if (type === 'income') return transaction.amount > 0;\n        if (type === 'all') return transaction.amount;\n        return transaction.amount;\n      })\n    );\n  }\n\n  const sumAmount = (type, time, filter, order) => {\n    return Object.values(sortDate(type, time)\n      .reduce((result, { date, amount }) => {\n        const index = date => moment(date).format(order);\n        const format = date => moment(date).format(filter);\n\n        !result[format(date)] \n          ? (result[format(date)] = { index: +index(date), text: format(date), amount }) \n          : (result[format(date)].amount += amount)\n\n        return result;\n    }, {})\n  )}\n\n  if (value === 0) {\n    lists.map(list => list['array']\n      .push(...sumAmount(list.type, 'week', 'dddd', 'e' )\n    ))\n  } else if (value === 1) {\n    const filter = 'D MMMM';\n    const sunday = weekNum => moment().day(0).week(weekNum).format(filter);\n    const saturday = weekNum => moment().day(6).week(weekNum).format(filter);\n    const formatWeek = weekNum => `${sunday(weekNum)} - ${saturday(weekNum)}`;\n\n    lists\n      .map(list => list['array']\n        .push(...sumAmount(list.type, 'month', 'w', 'w' )\n      ))    \n    incomeLists.forEach(list => list['text'] = formatWeek(list.index));\n    expenseLists.forEach(list => list['text'] = formatWeek(list.index));\n\n  } else if (value === 2) {\n    lists.map(list => list['array']\n      .push(...sumAmount(list.type, 'year', 'MMMM', 'MM' ))\n    )\n  };\n\n  // console.log(combinedLists.push(...incomeLists, ...expenseLists))\n  // const combinedLists = incomeLists.concat(expenseLists);\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line\n  }, []);\n\n  return ( \n    <Fragment>\n      <div className='plus-bg time-bar'>\n        <Tabs value={value} variant=\"fullWidth\" aria-label=\"time selectors\">\n          {timeFilters.map((timeFilter, index) => \n            <Tab \n              key={timeFilter} label={timeFilter} \n              onClick={() => setValue(index)} \n              disableFocusRipple disableRipple\n            />\n          )}\n        </Tabs>\n      </div>\n\n      <div className='plus-bg box'>\n        <div className='container box-incomeExpense'>\n\n        </div>\n      </div>\n\n      <div className=\"container\">\n        {transactions.length > 0 ? (\n          <ul className='list'>\n            {combinedLists\n              .sort((a, b) => a.index < b.index ?  -1 : 1)\n              .map((list, index) => <Transaction key={index} transaction={list} />)\n            }\n            {combinedLists.length === 0 && (\n              <div className='list-status'>\n                No expense transaction<br/>of the {timeFilters[value]}\n              </div>\n            )}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? <CircularProgress color='primary'/>\n              : 'No transaction'}\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}