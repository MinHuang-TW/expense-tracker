{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Login.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { GlobalContext } from '../context/GlobalState';\nimport PasswordIcon from '../components/common/PasswordIcon';\nimport { TextField, Typography } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  alert: {\n    width: '100%',\n    textTransform: 'Uppercase',\n    textAlign: 'left'\n  },\n  input: {\n    margin: '15px auto',\n    width: '100%'\n  },\n  button: {\n    marginTop: '30px',\n    textTransform: 'Uppercase'\n  },\n  link: {\n    display: 'inline',\n    cursor: 'pointer',\n    marginLeft: '10px',\n    textTransform: 'Uppercase',\n    fontWeight: 600\n  }\n}));\n\nconst Login = () => {\n  const {\n    getToken,\n    registerUser,\n    loginUser,\n    error\n  } = useContext(GlobalContext);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowpassword] = useState(false);\n  const [showSignup, setShowSignup] = useState(false); // const [showAlert, setShowAlert] = useState(false);\n  // const [disableBtn, setDisableBtn] = useState(true);\n\n  const classes = useStyles();\n\n  const SubmitButton = ({\n    children,\n    onClick\n  }) => {\n    return React.createElement(\"button\", {\n      onClick: onClick,\n      className: `btn plus-bg ${classes.button}` // disabled={disableBtn ? true : false}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, children);\n  };\n\n  const ModeSwitch = ({\n    mode,\n    children\n  }) => {\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: '#232C2D',\n        opacity: 0.8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, children), React.createElement(Typography, {\n      color: \"primary\",\n      className: classes.link,\n      onClick: () => setShowSignup(!showSignup),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, mode));\n  };\n\n  const handleRegister = e => {\n    e.preventDefault();\n    const newUser = {\n      name,\n      email,\n      password\n    };\n    registerUser(newUser);\n  };\n\n  const handleLogin = e => {\n    e.preventDefault();\n    loginUser({\n      email,\n      password\n    });\n  };\n\n  if (getToken()) return React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  });\n  return React.createElement(\"form\", {\n    className: \"container login-form\",\n    noValidate: true,\n    autoComplete: \"off\",\n    style: {\n      marginTop: '15vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, error && React.createElement(Alert, {\n    variant: \"outlined\",\n    severity: \"error\",\n    className: classes.alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, error.replace(/\"/g, \"\")), React.createElement(TextField, {\n    label: showSignup ? 'Name' : ' ',\n    required: !showSignup ? false : true,\n    disabled: showSignup ? false : true,\n    value: name,\n    onChange: e => setName(e.target.value),\n    className: classes.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Email\",\n    type: \"email\",\n    required: true,\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    className: classes.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Password\",\n    type: showPassword ? 'text' : 'password',\n    required: true,\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    className: classes.input,\n    InputProps: {\n      endAdornment: React.createElement(PasswordIcon, {\n        showPassword: showPassword,\n        setShowpassword: () => setShowpassword(!showPassword),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), showSignup ? React.createElement(React.Fragment, null, React.createElement(SubmitButton, {\n    onClick: e => handleRegister(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Signup\"), React.createElement(ModeSwitch, {\n    mode: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Already have account?\")) : React.createElement(React.Fragment, null, React.createElement(SubmitButton, {\n    onClick: e => handleLogin(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Login\"), React.createElement(ModeSwitch, {\n    mode: \"Signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"No account?\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Login.jsx"],"names":["React","useState","useContext","Redirect","GlobalContext","PasswordIcon","TextField","Typography","Alert","makeStyles","useStyles","theme","alert","width","textTransform","textAlign","input","margin","button","marginTop","link","display","cursor","marginLeft","fontWeight","Login","getToken","registerUser","loginUser","error","name","setName","email","setEmail","password","setPassword","showPassword","setShowpassword","showSignup","setShowSignup","classes","SubmitButton","children","onClick","ModeSwitch","mode","color","opacity","handleRegister","e","preventDefault","newUser","handleLogin","replace","target","value","endAdornment"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Redirect } from 'react-router-dom' ;\nimport { GlobalContext } from '../context/GlobalState';\nimport PasswordIcon from '../components/common/PasswordIcon';\nimport { TextField, Typography } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  alert: {\n    width: '100%',\n    textTransform: 'Uppercase',\n    textAlign: 'left',\n  },\n  input: {\n    margin: '15px auto',\n    width: '100%',\n  },\n  button: {\n    marginTop: '30px',\n    textTransform: 'Uppercase',\n  },\n  link: {\n    display: 'inline',\n    cursor: 'pointer',\n    marginLeft: '10px',\n    textTransform: 'Uppercase',\n    fontWeight: 600,\n  }\n}));\n\nconst Login = () => {\n  const { getToken, registerUser, loginUser, error } = useContext(GlobalContext);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowpassword] = useState(false);\n  const [showSignup, setShowSignup] = useState(false);\n  // const [showAlert, setShowAlert] = useState(false);\n  // const [disableBtn, setDisableBtn] = useState(true);\n\n  const classes = useStyles();\n\n  const SubmitButton = ({ children, onClick }) => {\n    return (\n      <button\n        onClick={onClick}\n        className={`btn plus-bg ${classes.button}`}\n        // disabled={disableBtn ? true : false}\n      >\n        { children }\n      </button>\n    )\n  }\n\n  const ModeSwitch = ({ mode, children }) => {\n    return (\n      <div style={{ marginTop: '30px' }}>\n        <span style={{ color: '#232C2D', opacity: 0.8 }}>\n          { children }\n        </span>\n        <Typography\n          color='primary'\n          className={classes.link}\n          onClick={() => setShowSignup(!showSignup)}\n        >\n          { mode }\n        </Typography>\n      </div>\n    )\n  }\n\n  const handleRegister = e => {\n    e.preventDefault();\n    const newUser = { name, email, password };\n    registerUser(newUser);\n  };\n\n  const handleLogin = e => {\n    e.preventDefault();\n    loginUser({ email, password });\n  };\n\n  if (getToken()) return <Redirect to='/' />\n\n  return (\n    <form className='container login-form' noValidate autoComplete='off' style={{ marginTop: '15vh' }}>\n\n      {error && (\n        <Alert variant='outlined' severity='error' className={classes.alert}>\n          {error.replace(/\"/g, \"\")}\n        </Alert>\n      )}\n\n      <TextField\n        label={showSignup ? 'Name' : ' '}\n        required={!showSignup? false : true}\n        disabled={showSignup? false : true}\n        value={name}\n        onChange={e => setName(e.target.value)}\n        className={classes.input}\n      />\n\n      <TextField\n        label='Email'\n        type='email'\n        required\n        value={email}\n        onChange={e => setEmail(e.target.value)}\n        className={classes.input}\n      />\n\n      <TextField\n        label='Password'\n        type={showPassword ? 'text' : 'password'}\n        required\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n        className={classes.input}\n        InputProps={{\n          endAdornment: (\n            <PasswordIcon\n              showPassword={showPassword}\n              setShowpassword={() => setShowpassword(!showPassword)}\n            />\n          )\n        }}\n      />\n\n      {showSignup ? (\n        <>\n          <SubmitButton onClick={e => handleRegister(e)}>Signup</SubmitButton>\n          <ModeSwitch mode='Login'>Already have account?</ModeSwitch>\n        </>\n      ) : (\n        <>\n          <SubmitButton onClick={e => handleLogin(e)}>Login</SubmitButton>\n          <ModeSwitch mode='Signup'>No account?</ModeSwitch>\n        </>\n      )}\n    </form>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}