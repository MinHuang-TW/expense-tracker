{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { Button, ButtonGroup, CircularProgress } from '@material-ui/core';\n\nconst Report = () => {\n  const [value, setValue] = useState(3);\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [progress, setProgress] = useState(0);\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth();\n  const week = today.getDay();\n  const day = today.getDate();\n\n  const parseDate = data => {\n    data.slice(0, 10).split('-');\n    data.forEach(data => {\n      data < 10 && data.trim();\n    });\n  };\n\n  const transFilters = ['all', 'income', 'expense'];\n  let counter = 0;\n  useEffect(() => {\n    const tick = () => {\n      setProgress(oldProgress => oldProgress >= 100 ? 0 : oldProgress + 1);\n    };\n\n    const timer = setInterval(tick, 20);\n    getTransactions();\n    return () => {\n      clearInterval(timer);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    \"aria-label\": \"disabled tabs example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    label: \"YEAR\",\n    onClick: () => setValue(0),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    label: \"MONTH\",\n    onClick: () => setValue(1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    label: \"WEEK\",\n    onClick: () => setValue(2),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    label: \"DAY\",\n    onClick: () => setValue(3),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    fullWidth: true,\n    disableRipple: true,\n    color: \"primary\",\n    \"aria-label\": \"outlined primary button group\",\n    style: {\n      marginBottom: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, transFilters.map(transFilter => React.createElement(Button, {\n    key: transFilter,\n    style: {\n      borderRadius: 0\n    },\n    disableElevation: true,\n    disableFocusRipple: true,\n    disableRipple: true,\n    variant: selected === transFilter ? 'contained' : null,\n    color: selected === transFilter ? 'primary' : null,\n    onClick: () => setSelected(transFilter),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, transFilter))), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, transactions.filter(transaction => {\n    const date = parseDate(transaction.date);\n    if (value === 3) return +date[3] === day;\n    if (value === 2) return +date[2] === month;\n    if (value === 1) return +date[1] - 1 === month;\n    if (value === 0) return +date[0] === year;\n    return transaction;\n  }).filter(transaction => {\n    switch (selected) {\n      case 'income':\n        return transaction.amount > 0;\n\n      case 'expense':\n        return transaction.amount < 0;\n\n      default:\n        return transaction;\n    }\n  }).sort((a, b) => {\n    let dateA = new Date(a.date);\n    let dateB = new Date(b.date);\n    if (dateA < dateB) return 1;\n    if (dateA > dateB) return -1;\n    return 0;\n  }).map(transaction => {\n    counter++;\n    return React.createElement(Transaction, {\n      key: transaction._id,\n      transaction: transaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    });\n  }), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"No \", selected, \" transaction\")) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    variant: \"determinate\",\n    value: progress,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }) : 'No transaction')));\n};\n\nexport default Report;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx"],"names":["React","Fragment","useState","useEffect","useContext","GlobalContext","Transaction","Tabs","Tab","Button","ButtonGroup","CircularProgress","Report","value","setValue","loading","transactions","getTransactions","selected","setSelected","progress","setProgress","today","Date","year","getFullYear","month","getMonth","week","getDay","day","getDate","parseDate","data","slice","split","forEach","trim","transFilters","counter","tick","oldProgress","timer","setInterval","clearInterval","marginBottom","map","transFilter","borderRadius","length","filter","transaction","date","amount","sort","a","b","dateA","dateB","_id"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { Button, ButtonGroup, CircularProgress } from '@material-ui/core';\n\nconst Report = () => {\n  const [value, setValue] = useState(3);\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [progress, setProgress] = useState(0);\n\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth();\n  const week = today.getDay();\n  const day = today.getDate();\n\n  const parseDate = data => {\n    data.slice(0, 10).split('-');\n    data.forEach(data => {data < 10 && data.trim();})\n  }\n\n  const transFilters = ['all', 'income', 'expense'];\n  let counter = 0;\n\n  useEffect(() => {\n    const tick = () => {\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\n    };\n    const timer = setInterval(tick, 20);\n\n    getTransactions();\n\n    return () => {\n      clearInterval(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <Tabs\n        value={value} variant='fullWidth'\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        aria-label=\"disabled tabs example\"\n      >\n        <Tab label=\"YEAR\" onClick={() => setValue(0)} />\n        <Tab label=\"MONTH\" onClick={() => setValue(1)} />\n        <Tab label=\"WEEK\" onClick={() => setValue(2)} />\n        <Tab label=\"DAY\" onClick={() => setValue(3)} />\n      </Tabs>\n\n      <div className='container'>\n        <ButtonGroup\n          fullWidth disableRipple\n          color='primary'\n          aria-label='outlined primary button group'\n          style={{ marginBottom: '10px' }}\n        >\n          {transFilters.map(transFilter => (\n            <Button\n              key={transFilter}\n              style={{ borderRadius: 0 }}\n              disableElevation disableFocusRipple disableRipple\n              variant={selected === transFilter ? 'contained' : null}\n              color={selected === transFilter ? 'primary' : null}\n              onClick={() => setSelected(transFilter)}\n            >\n              {transFilter}\n            </Button>\n          ))}\n        </ButtonGroup>\n\n        {transactions.length > 0 ? (\n          <ul className='list'>\n            {transactions\n              .filter(transaction => {\n                const date = parseDate(transaction.date);\n                if (value === 3) return +date[3] === day;\n                if (value === 2) return +date[2] === month;\n                if (value === 1) return +date[1] - 1 === month;\n                if (value === 0) return +date[0] === year;\n                return transaction;\n              })\n              .filter(transaction => {\n                switch (selected) {\n                  case 'income':\n                    return transaction.amount > 0;\n                  case 'expense':\n                    return transaction.amount < 0;\n                  default:\n                    return transaction;\n                }\n              })\n              .sort((a, b) => {\n                let dateA = new Date(a.date);\n                let dateB = new Date(b.date);\n                \n                if (dateA < dateB) return 1;\n                if (dateA > dateB) return -1;\n                return 0;\n              })\n              .map(transaction => {\n                counter++;\n                return (\n                  <Transaction key={transaction._id} transaction={transaction} />\n                );\n              })}\n            {counter === 0 && (\n              <div className='list-status'>No {selected} transaction</div>\n            )}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? <CircularProgress variant='determinate' value={progress} color='secondary'/>\n              : 'No transaction'}\n          </div>\n        )}\n      </div>\n\n\n    </Fragment>\n  );\n}\n\nexport default Report;"]},"metadata":{},"sourceType":"module"}