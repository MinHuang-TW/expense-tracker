{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/context/GlobalState.jsx\";\nimport React, { createContext, useReducer } from 'react';\nimport axios from 'axios';\nimport AppReducer from './AppReducer';\nconst initialState = {\n  users: [],\n  transactions: [],\n  error: null,\n  loading: true\n};\nexport const GlobalContext = createContext(initialState);\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions'); // console.log(res)\n\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/transactions', transaction, config);\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function registerUser(user) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/user/register', config);\n      dispatch({\n        type: 'REGISTER_USER',\n        payload: res.data.newUser\n      }); // localStorage.setItem('token', res.data.token);\n      // console.log(res.data.token);\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function loginUser(user) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/user/login', user, config);\n      dispatch({\n        type: 'LOGIN_USER',\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function loadUser(user) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const token = state.token; // console.log(state.token)\n\n    if (state.token) {\n      config.headers[\"x-auth-token\"] = state.token;\n    }\n\n    console.log(config.headers);\n\n    try {\n      const res = await axios.get('/api/user', config);\n      dispatch({\n        type: 'LOAD_USER',\n        payload: res.data.user\n      }); // console.log(res.data)\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  return React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      users: state.users,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction,\n      registerUser,\n      loginUser,\n      loadUser\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/context/GlobalState.jsx"],"names":["React","createContext","useReducer","axios","AppReducer","initialState","users","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","err","response","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post","registerUser","user","newUser","loginUser","loadUser","token","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,YAAY,EAAE,EAFK;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;AAOA,OAAO,MAAMC,aAAa,GAAGT,aAAa,CAACI,YAAD,CAAnC;AAEP,OAAO,MAAMM,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACE,UAAD,EAAaC,YAAb,CAApC;;AAEA,iBAAeU,eAAf,GAAiC;AAC/B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,sBAAV,CAAlB,CADE,CAEF;;AACAH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFpB,OAAD,CAAR;AAID;AACF;;AAED,iBAAee,iBAAf,CAAiCC,EAAjC,EAAqC;AACnC,QAAI;AACF,YAAMrB,KAAK,CAACsB,MAAN,CAAc,wBAAuBD,EAAG,EAAxC,CAAN;AACAV,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,oBADC;AAEPC,QAAAA,OAAO,EAAEK;AAFF,OAAD,CAAR;AAID,KAND,CAME,OAAOH,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFpB,OAAD,CAAR;AAID;AACF;;AAED,iBAAekB,cAAf,CAA8BC,WAA9B,EAA2C;AACzC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAMA,QAAI;AACF,YAAMb,GAAG,GAAG,MAAMb,KAAK,CAAC2B,IAAN,CAAW,sBAAX,EAAmCH,WAAnC,EAAgDC,MAAhD,CAAlB;AACAd,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,iBADC;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAND,CAME,OAAOC,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFpB,OAAD,CAAR;AAID;AACF;;AAED,iBAAeuB,YAAf,CAA4BC,IAA5B,EAAkC;AAChC,UAAMJ,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAMA,QAAI;AACF,YAAMb,GAAG,GAAG,MAAMb,KAAK,CAAC2B,IAAN,CAAW,oBAAX,EAAiCF,MAAjC,CAAlB;AACAd,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,eADC;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASa;AAFX,OAAD,CAAR,CAFE,CAMF;AACA;AACD,KARD,CAQE,OAAOZ,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFpB,OAAD,CAAR;AAID;AACF;;AAED,iBAAe0B,SAAf,CAAyBF,IAAzB,EAA+B;AAC7B,UAAMJ,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAMA,QAAI;AACF,YAAMb,GAAG,GAAG,MAAMb,KAAK,CAAC2B,IAAN,CAAW,iBAAX,EAA8BE,IAA9B,EAAoCJ,MAApC,CAAlB;AACAd,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,YADC;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,OAAD,CAAR;AAID,KAND,CAME,OAAOC,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFpB,OAAD,CAAR;AAID;AACF;;AAED,iBAAe2B,QAAf,CAAwBH,IAAxB,EAA8B;AAC5B,UAAMJ,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AADI,KAAf;AAGA,UAAMO,KAAK,GAAGvB,KAAK,CAACuB,KAApB,CAJ4B,CAK5B;;AACA,QAAIvB,KAAK,CAACuB,KAAV,EAAiB;AACfR,MAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiChB,KAAK,CAACuB,KAAvC;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACC,OAAnB;;AAEA,QAAI;AACF,YAAMb,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,WAAV,EAAuBW,MAAvB,CAAlB;AACAd,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,WADC;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASY;AAFX,OAAD,CAAR,CAFE,CAMF;AACD,KAPD,CAOE,OAAOX,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFpB,OAAD,CAAR;AAID;AACF;;AAED,SACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,YAAY,EAAEM,KAAK,CAACN,YADf;AAELD,MAAAA,KAAK,EAAEO,KAAK,CAACP,KAFR;AAGLE,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAHR;AAILC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAJV;AAKLM,MAAAA,eALK;AAMLQ,MAAAA,iBANK;AAOLG,MAAAA,cAPK;AAQLK,MAAAA,YARK;AASLG,MAAAA,SATK;AAULC,MAAAA;AAVK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGvB,QAdH,CADF;AAkBD,CA/IM","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport axios from 'axios';\nimport AppReducer from './AppReducer';\n\nconst initialState = {\n  users: [],\n  transactions: [],\n  error: null,\n  loading: true\n};\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n      // console.log(res)\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      })\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    try {\n      const res = await axios.post('/api/v1/transactions', transaction, config);\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function registerUser(user) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    try {\n      const res = await axios.post('/api/user/register', config);\n      dispatch({\n        type: 'REGISTER_USER',\n        payload: res.data.newUser\n      });\n      // localStorage.setItem('token', res.data.token);\n      // console.log(res.data.token);\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function loginUser(user) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    try {\n      const res = await axios.post('/api/user/login', user, config);\n      dispatch({\n        type: 'LOGIN_USER',\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function loadUser(user) {\n    const config = {\n      headers: { 'Content-Type': 'application/json' }\n    };\n    const token = state.token;\n    // console.log(state.token)\n    if (state.token) {\n      config.headers[\"x-auth-token\"] = state.token;\n    }\n    console.log(config.headers)\n\n    try {\n      const res = await axios.get('/api/user', config);\n      dispatch({\n        type: 'LOAD_USER',\n        payload: res.data.user\n      });\n      // console.log(res.data)\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        users: state.users,\n        error: state.error,\n        loading: state.loading,\n        getTransactions,\n        deleteTransaction,\n        addTransaction,\n        registerUser,\n        loginUser,\n        loadUser,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}