{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/common/BarChart.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { stackOrderAscending } from 'd3';\n\nconst BarChart = ({\n  data,\n  keys,\n  select,\n  width,\n  height\n}) => {\n  const ref = useRef(null);\n  const weekList = moment.weekdays();\n  const monthList = moment.months();\n  const colorList = {\n    income: '#fff',\n    expense: '#f8777d',\n    none: 'rgba(255, 255, 255, 0.1)'\n  };\n  useEffect(() => {\n    const group = d3.select(ref.current); // const labels = data.map(d => d.text);\n\n    const labels = select === 0 ? weekList : select === 1 ? data.map(d => d.text) : monthList;\n    data.forEach(data => data['expense'] = Math.abs(data['expense']));\n    const stackGenerator = d3.stack().keys(keys).order(stackOrderAscending);\n    const layers = stackGenerator(data);\n    const extent = [0, d3.max(layers, layer => d3.max(layer, seq => Math.abs(seq[1])))]; // const maxAmount = d3.max(data, (d) => Math.abs(d.amount));\n\n    const yScale = d3.scaleLinear().domain(extent).range([height - 15, 0]);\n    const xScale = d3.scaleBand().domain(labels).range([0, width]);\n    const xAxis = d3.axisBottom(xScale).tickSize(0);\n    group.select('.x-axis').style('transform', `translateY(${+height - 14}px)`).style('color', 'white').call(xAxis).call(g => g.select('.domain').remove()).selectAll('.x-axis .tick text').call(t => t.each(function (d) {\n      const self = d3.select(this);\n      const s = self.text().split(' - ');\n      self.text('');\n      self.append('tspan').attr('x', 0).attr('dy', '1em').text(select === 1 ? s[0] : s[0].slice(0, 3));\n      select === 1 && self.append('tspan').attr('x', 0).attr('dy', '1em').text('- ' + s[1]);\n    }));\n    group.selectAll('.layer').data(layers).join('g').attr('class', 'layer').attr('fill', layer => colorList[layer.key]).selectAll('rect').data(layer => layer).join('rect').attr('x', seq => xScale.bandwidth() / 2 - 3 + xScale(seq.data.text)).attr('y', seq => yScale(seq[1])).attr('width', 6).attr('height', 0).transition().duration(1000).attr('height', seq => yScale(seq[0]) - yScale(seq[1])); // group\n    //   .selectAll('.bar')\n    //   .data(data)\n    //   .join('rect')\n    //   .attr('class', 'bar')\n    //   .style('transform', 'scale(1, -1)')\n    //   .attr('x', (d) => xScale.bandwidth() / 2 - 3 + xScale(d.text))\n    //   .attr('y', -height + 15)\n    //   .attr('width', 6)\n    //   .attr('height', 0)\n    //   .attr('fill', (d) => (d.amount < 0 ? colorList[0] : colorList[1]))\n    //   .transition()\n    //   .duration(1000)\n    //   .attr('height', (d) => yScale(Math.abs(d.amount)));\n    // eslint-disable-next-line\n  }, [data]);\n  return React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    ref: ref,\n    style: {\n      margin: 'auto',\n      overflow: 'visible'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }));\n};\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/common/BarChart.jsx"],"names":["React","useEffect","useRef","d3","moment","stackOrderAscending","BarChart","data","keys","select","width","height","ref","weekList","weekdays","monthList","months","colorList","income","expense","none","group","current","labels","map","d","text","forEach","Math","abs","stackGenerator","stack","order","layers","extent","max","layer","seq","yScale","scaleLinear","domain","range","xScale","scaleBand","xAxis","axisBottom","tickSize","style","call","g","remove","selectAll","t","each","self","s","split","append","attr","slice","join","key","bandwidth","transition","duration","margin","overflow"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { stackOrderAscending } from 'd3';\n\nconst BarChart = ({ data, keys, select, width, height }) => {\n  const ref = useRef(null);\n  const weekList = moment.weekdays();\n  const monthList = moment.months();\n  const colorList = {\n    income: '#fff',\n    expense: '#f8777d',\n    none: 'rgba(255, 255, 255, 0.1)',\n  };\n\n  useEffect(() => {\n    const group = d3.select(ref.current);\n    // const labels = data.map(d => d.text);\n    const labels =\n      select === 0\n        ? weekList\n        : select === 1\n        ? data.map((d) => d.text)\n        : monthList;\n\n    data.forEach((data) => (data['expense'] = Math.abs(data['expense'])));\n    const stackGenerator = d3.stack().keys(keys).order(stackOrderAscending);\n    const layers = stackGenerator(data);\n    const extent = [\n      0,\n      d3.max(layers, (layer) => d3.max(layer, (seq) => Math.abs(seq[1]))),\n    ];\n    // const maxAmount = d3.max(data, (d) => Math.abs(d.amount));\n\n    const yScale = d3\n      .scaleLinear()\n      .domain(extent)\n      .range([height - 15, 0]);\n\n    const xScale = d3.scaleBand().domain(labels).range([0, width]);\n\n    const xAxis = d3.axisBottom(xScale).tickSize(0);\n\n    group\n      .select('.x-axis')\n      .style('transform', `translateY(${+height - 14}px)`)\n      .style('color', 'white')\n      .call(xAxis)\n      .call((g) => g.select('.domain').remove())\n      .selectAll('.x-axis .tick text')\n      .call((t) =>\n        t.each(function (d) {\n          const self = d3.select(this);\n          const s = self.text().split(' - ');\n          self.text('');\n          self\n            .append('tspan')\n            .attr('x', 0)\n            .attr('dy', '1em')\n            .text(select === 1 ? s[0] : s[0].slice(0, 3));\n          select === 1 &&\n            self\n              .append('tspan')\n              .attr('x', 0)\n              .attr('dy', '1em')\n              .text('- ' + s[1]);\n        })\n      );\n\n    group\n      .selectAll('.layer')\n      .data(layers)\n      .join('g')\n      .attr('class', 'layer')\n      .attr('fill', (layer) => colorList[layer.key])\n      .selectAll('rect')\n      .data((layer) => layer)\n      .join('rect')\n      .attr('x', (seq) => xScale.bandwidth() / 2 - 3 + xScale(seq.data.text))\n      .attr('y', (seq) => yScale(seq[1]))\n      .attr('width', 6)\n      .attr('height', 0)\n      .transition()\n      .duration(1000)\n      .attr('height', (seq) => yScale(seq[0]) - yScale(seq[1]));\n\n    // group\n    //   .selectAll('.bar')\n    //   .data(data)\n    //   .join('rect')\n    //   .attr('class', 'bar')\n    //   .style('transform', 'scale(1, -1)')\n    //   .attr('x', (d) => xScale.bandwidth() / 2 - 3 + xScale(d.text))\n    //   .attr('y', -height + 15)\n    //   .attr('width', 6)\n    //   .attr('height', 0)\n    //   .attr('fill', (d) => (d.amount < 0 ? colorList[0] : colorList[1]))\n    //   .transition()\n    //   .duration(1000)\n    //   .attr('height', (d) => yScale(Math.abs(d.amount)));\n\n    // eslint-disable-next-line\n  }, [data]);\n\n  return (\n    <svg\n      width={width}\n      height={height}\n      ref={ref}\n      style={{ margin: 'auto', overflow: 'visible' }}\n    >\n      <g className='x-axis' />\n    </svg>\n  );\n};\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}