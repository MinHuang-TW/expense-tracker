{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx\";\nimport React, { Fragment, useState, useEffect, useContext, useCallback } from 'react';\nimport { useTransition, animated, config } from 'react-spring';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkWeek, checkDay, checkMonth, checkYear, sortDateDsc, sortDateAsc, sortAmountDsc, sortAmountAsc } from '../utils/calculation';\nimport ReportOverview from './ReportOverview';\nimport Transaction from './common/Transaction';\nimport Filter from './common/Filter';\nimport { Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\nimport { whiteTheme } from '../utils/colorTheme.js';\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst Switch = ({\n  types,\n  value,\n  setValue\n}) => {\n  const handleSwitch = useCallback(index => event => {\n    setValue(index);\n  }, [setValue]);\n  return React.createElement(\"div\", {\n    className: \"plus-bg time-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    \"aria-label\": \"switch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, types.map((type, index) => React.createElement(Tab, {\n    key: type,\n    label: type,\n    onClick: handleSwitch(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))));\n};\n\nconst Selector = ({\n  types,\n  selected,\n  setSelected\n}) => {\n  const style = {\n    buttonGroup: {\n      background: '#65BCBF',\n      borderRadius: 0\n    },\n    button: {\n      borderRadius: 0,\n      border: '1px solid rgba(255, 255, 255, 0.3)'\n    }\n  };\n  return React.createElement(ThemeProvider, {\n    theme: whiteTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    color: \"primary\",\n    style: style.buttonGroup,\n    \"aria-label\": \"selectors\",\n    fullWidth: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, types.map(type => React.createElement(Button, {\n    key: type,\n    variant: selected === type ? 'contained' : null,\n    color: selected === type ? 'primary' : 'secondary',\n    onClick: () => setSelected(type),\n    style: style.button,\n    disableElevation: true,\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, type))));\n};\n\nconst Report = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all');\n  const [sortColumn, setSortColum] = useState('date');\n  const [sortLatest, setSortLatest] = useState(true);\n  const [sortDsc, setSortDsc] = useState(true);\n  const timeFilters = ['day', 'week', 'month', 'year'];\n  const transFilters = ['all', 'income', 'expense'];\n  const amounts = []; //#region \n\n  const lists = transactions.filter(transaction => {\n    const date = transaction.date;\n    if (value === 0) return checkDay(date);\n    if (value === 1) return checkWeek(date);\n    if (value === 2) return checkMonth(date);\n    if (value === 3) return checkYear(date);\n    return transaction;\n  }).filter(transaction => {\n    amounts.push(transaction.amount);\n\n    switch (selected) {\n      case 'income':\n        return transaction.amount > 0;\n\n      case 'expense':\n        return transaction.amount < 0;\n\n      default:\n        return transaction;\n    }\n  }).sort((a, b) => {\n    if (sortColumn === 'date') {\n      return sortLatest ? sortDateDsc(a, b) : sortDateAsc(a, b);\n    }\n\n    return sortDsc ? sortAmountDsc(a.amount, b.amount) : sortAmountAsc(a.amount, b.amount);\n  }); //#endregion\n\n  const transition = useTransition(lists, list => list._id, {\n    from: {\n      height: 86,\n      transform: 'translate3d(-5%,0,0)',\n      opacity: 0\n    },\n    enter: {\n      height: 86,\n      transform: 'translate3d(0%,0,0)',\n      opacity: 1\n    },\n    leave: {\n      height: 0,\n      transform: 'translate3d(-50%,0,0)',\n      opacity: 0\n    },\n    // trail: 100,\n    config: config.default\n  });\n  const handleSortDate = useCallback(() => {\n    setSortLatest(!sortLatest);\n    setSortColum('date');\n  }, [sortLatest]);\n  const handleSortAmount = useCallback(() => {\n    setSortDsc(!sortDsc);\n    setSortColum('amount');\n  }, [sortDsc]);\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    types: timeFilters,\n    value: value,\n    setValue: setValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(ReportOverview, {\n    selected: selected,\n    timeFilters: timeFilters,\n    value: value,\n    amounts: amounts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(Selector, {\n    types: transFilters,\n    selected: selected,\n    setSelected: setSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Filter, {\n    value: value,\n    text: \"today\",\n    sortLatest: sortLatest,\n    sortDsc: sortDsc,\n    handleSortDate: handleSortDate,\n    handleSortAmount: handleSortAmount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), lists.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, transition.map(({\n    item,\n    props,\n    key\n  }) => React.createElement(animated.div, {\n    key: key,\n    style: props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Transaction, {\n    transaction: item,\n    date: true,\n    menu: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })))) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"No \", selected !== 'all' && selected, \" transaction\"))));\n};\n\nexport default Report;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx"],"names":["React","Fragment","useState","useEffect","useContext","useCallback","useTransition","animated","config","GlobalContext","checkWeek","checkDay","checkMonth","checkYear","sortDateDsc","sortDateAsc","sortAmountDsc","sortAmountAsc","ReportOverview","Transaction","Filter","Tabs","Tab","Button","ButtonGroup","CircularProgress","whiteTheme","ThemeProvider","Switch","types","value","setValue","handleSwitch","index","event","map","type","Selector","selected","setSelected","style","buttonGroup","background","borderRadius","button","border","Report","loading","transactions","getTransactions","sortColumn","setSortColum","sortLatest","setSortLatest","sortDsc","setSortDsc","timeFilters","transFilters","amounts","lists","filter","transaction","date","push","amount","sort","a","b","transition","list","_id","from","height","transform","opacity","enter","leave","default","handleSortDate","handleSortAmount","length","item","props","key"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext, useCallback } from 'react';\nimport { useTransition, animated, config } from 'react-spring';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkWeek, checkDay, checkMonth, checkYear, sortDateDsc, sortDateAsc, sortAmountDsc, sortAmountAsc } from '../utils/calculation';\nimport ReportOverview from './ReportOverview';\nimport Transaction from './common/Transaction';\nimport Filter from './common/Filter';\nimport { Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\nimport { whiteTheme } from '../utils/colorTheme.js';\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst Switch = ({ types, value, setValue }) => {\n  const handleSwitch = useCallback((index) => (event) => {\n    setValue(index);\n  }, [setValue]);\n\n  return (\n    <div className='plus-bg time-bar'>\n      <Tabs value={value} variant=\"fullWidth\" aria-label=\"switch\">\n        {types.map((type, index) => (\n          <Tab\n            key={type} label={type} \n            onClick={handleSwitch(index)} \n            disableFocusRipple disableRipple\n          />\n        ))}\n      </Tabs>\n    </div>\n  );\n};\n\nconst Selector = ({ types, selected, setSelected }) => {\n  const style = {\n    buttonGroup : { \n      background: '#65BCBF', \n      borderRadius: 0 \n    },\n    button: { \n      borderRadius: 0, \n      border: '1px solid rgba(255, 255, 255, 0.3)'\n    },\n  };\n\n  return (\n    <ThemeProvider theme={whiteTheme}>\n      <ButtonGroup\n        color='primary'\n        style={style.buttonGroup}\n        aria-label='selectors'\n        fullWidth disableRipple\n      >\n        {types.map(type => (\n          <Button\n            key={type}\n            variant={selected === type ? 'contained' : null}\n            color={selected === type ? 'primary' : 'secondary'}\n            onClick={() => setSelected(type)}\n            style={style.button}\n            disableElevation disableFocusRipple disableRipple\n          >\n            {type}\n          </Button>\n        ))}\n      </ButtonGroup>\n    </ThemeProvider>\n  );\n};\n\nconst Report = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all');\n  const [sortColumn, setSortColum] = useState('date');\n  const [sortLatest, setSortLatest] = useState(true);\n  const [sortDsc, setSortDsc] = useState(true);\n\n  const timeFilters = ['day', 'week', 'month', 'year'];\n  const transFilters = ['all', 'income', 'expense'];\n  const amounts = [];\n\n  //#region \n  const lists = transactions\n    .filter(transaction => {\n      const date = transaction.date;\n      if (value === 0) return checkDay(date);\n      if (value === 1) return checkWeek(date);\n      if (value === 2) return checkMonth(date);\n      if (value === 3) return checkYear(date);\n      return transaction;\n    })\n    .filter(transaction => {\n      amounts.push(transaction.amount);\n      switch (selected) {\n        case 'income':\n          return transaction.amount > 0;\n        case 'expense':\n          return transaction.amount < 0;\n        default:\n          return transaction;\n      }\n    })\n    .sort((a, b) => {\n      if (sortColumn === 'date') {\n        return sortLatest \n          ? sortDateDsc(a, b) \n          : sortDateAsc(a, b);\n      }\n      return sortDsc \n        ? sortAmountDsc(a.amount, b.amount) \n        : sortAmountAsc(a.amount, b.amount);\n    });\n    //#endregion\n\n  const transition = useTransition(lists, list => list._id, {\n    from: { height: 86, transform: 'translate3d(-5%,0,0)', opacity: 0 },\n    enter: { height: 86, transform: 'translate3d(0%,0,0)', opacity: 1 },\n    leave: { height: 0, transform: 'translate3d(-50%,0,0)', opacity: 0 },\n    // trail: 100,\n    config: config.default,\n  });\n\n  const handleSortDate = useCallback(() => {\n    setSortLatest(!sortLatest); \n    setSortColum('date');\n  }, [sortLatest]);\n\n  const handleSortAmount = useCallback(() => {\n    setSortDsc(!sortDsc); \n    setSortColum('amount');\n  }, [sortDsc])\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line\n  }, []);\n  \n\n  return (\n    <Fragment>\n      <Switch \n        types={timeFilters} \n        value={value} \n        setValue={setValue} \n      />\n\n      <ReportOverview \n        selected={selected} \n        timeFilters={timeFilters} \n        value={value} \n        amounts={amounts}\n      />\n      \n      <Selector \n        types={transFilters} \n        selected={selected} \n        setSelected={setSelected} \n      />\n\n      <div className='container'>\n\n        <Filter\n          value={value}\n          text=\"today\"\n          sortLatest={sortLatest}\n          sortDsc={sortDsc}\n          handleSortDate={handleSortDate}\n          handleSortAmount={handleSortAmount}\n        />\n\n        {lists.length > 0 ? (\n          <ul className='list'>\n            {transition.map(({ item, props, key }) => (\n              <animated.div key={key} style={props}>\n                <Transaction transaction={item} date menu />\n              </animated.div>\n            ))}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? (<CircularProgress color='primary'/>)\n              : (<p>No {selected !== 'all' && selected} transaction</p>)\n            }\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Report;"]},"metadata":{},"sourceType":"module"}