{"ast":null,"code":"import Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nconst moment = extendMoment(Moment);\nexport function checkDay(d) {\n  const start = moment().startOf('day');\n  const end = moment().endOf('day');\n  const date = moment(d);\n  const range = moment().range(start, end);\n  if (date.within(range)) return true;\n  return false;\n}\nexport function checkWeek(d) {\n  const sunday = moment().startOf('week');\n  const saturday = moment().endOf('week');\n  const date = moment(d);\n  const range = moment().range(sunday, saturday);\n  if (date.within(range)) return true;\n  return false;\n}\nexport function checkMonth(d) {\n  const fistday = moment().startOf('month');\n  const lastday = moment().endOf('month');\n  const date = moment(d);\n  const range = moment().range(fistday, lastday);\n  if (date.within(range)) return true;\n  return false;\n}\nexport function checkYear(d) {\n  const fistday = moment().startOf('year');\n  const lastday = moment().endOf('year');\n  const date = moment(d);\n  const range = moment().range(fistday, lastday);\n  if (date.within(range)) return true;\n  return false;\n}\nexport function sortDateDsc(a, b) {\n  let dateA = new Date(a.date);\n  let dateB = new Date(b.date);\n  if (dateA < dateB) return 1;\n  if (dateA > dateB) return -1;\n  return 0;\n}\nexport function sortDateAsc(a, b) {\n  let dateA = new Date(a.date);\n  let dateB = new Date(b.date);\n  if (dateA < dateB) return -1;\n  if (dateA > dateB) return 1;\n  return 0;\n}\nexport function sortAmountDsc(a, b) {\n  let amountA = a.amount;\n  let amountB = b.amount;\n  if (amountA < amountB) return 1;\n  if (amountA > amountB) return -1;\n  return 0;\n}\nexport function sortAmountAsc(a, b) {\n  let amountA = a.amount;\n  let amountB = b.amount;\n  if (amountA < amountB) return -1;\n  if (amountA > amountB) return 1;\n  return 0;\n}","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/utils/calculation.js"],"names":["Moment","extendMoment","moment","checkDay","d","start","startOf","end","endOf","date","range","within","checkWeek","sunday","saturday","checkMonth","fistday","lastday","checkYear","sortDateDsc","a","b","dateA","Date","dateB","sortDateAsc","sortAmountDsc","amountA","amount","amountB","sortAmountAsc"],"mappings":"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","sourcesContent":["import Moment from 'moment';\nimport { extendMoment } from 'moment-range';\n\nconst moment = extendMoment(Moment);\n\nexport function checkDay(d) {\n  const start = moment().startOf('day');\n  const end = moment().endOf('day');\n  const date = moment(d);\n  const range = moment().range(start, end);\n\n  if (date.within(range)) return true;\n  return false;\n}\n\nexport function checkWeek(d) {\n  const sunday = moment().startOf('week');\n  const saturday = moment().endOf('week');\n  const date = moment(d);\n  const range = moment().range(sunday, saturday);\n\n  if (date.within(range)) return true;\n  return false;\n}\n\nexport function checkMonth(d) {\n  const fistday = moment().startOf('month');\n  const lastday = moment().endOf('month');\n  const date = moment(d);\n  const range = moment().range(fistday, lastday);\n\n  if (date.within(range)) return true;\n  return false;\n}\n\nexport function checkYear(d) {\n  const fistday = moment().startOf('year');\n  const lastday = moment().endOf('year');\n  const date = moment(d);\n  const range = moment().range(fistday, lastday);\n\n  if (date.within(range)) return true;\n  return false;\n}\n\nexport function sortDateDsc(a, b) {\n  let dateA = new Date(a.date);\n  let dateB = new Date(b.date);\n  \n  if (dateA < dateB) return 1;\n  if (dateA > dateB) return -1;\n  return 0;\n}\n\nexport function sortDateAsc(a, b) {\n  let dateA = new Date(a.date);\n  let dateB = new Date(b.date);\n  \n  if (dateA < dateB) return -1;\n  if (dateA > dateB) return 1;\n  return 0;\n}\n\nexport function sortAmountDsc(a, b) {\n  let amountA = a.amount;\n  let amountB = b.amount;\n\n  if (amountA < amountB) return 1;\n  if (amountA > amountB) return -1;\n  return 0;\n}\n\nexport function sortAmountAsc(a, b) {\n  let amountA = a.amount;\n  let amountB = b.amount;\n\n  if (amountA < amountB) return -1;\n  if (amountA > amountB) return 1;\n  return 0;\n}"]},"metadata":{},"sourceType":"module"}