{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/common/BarChart.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst BarChart = ({\n  data: originalData,\n  width,\n  height\n}) => {\n  const ref = useRef(null); // const cache = useRef(originalData);\n\n  const colors = ['#fff', 'rgba(255, 255, 255, 0.3)'];\n  useEffect(() => {\n    const data = originalData; // const prevData = createPie(cache.current);\n\n    const labels = data.map(d => d.text);\n    const maxAmount = d3.max(data, d => Math.abs(d.amount));\n    const group = d3.select(ref.current);\n    const scaleY = d3.scaleLinear().domain([0, maxAmount]).range([0, height]);\n    const scaleX = d3.scaleBand().domain(labels).range([0, width]);\n    const groupWithData = group.selectAll('g.rect').data(data).append('g').attr('class', 'rect');\n    groupWithData.exit().remove();\n    const groupWithUpdate = groupWithData.enter().append('rect') //.attr('class', 'rect')\n    .merge(groupWithData.select('g.rect'));\n    groupWithUpdate.attr('class', 'rect') //.append('rect')\n    .attr('width', 6).attr('height', d => scaleY(Math.abs(d.amount))).attr('fill', d => {\n      console.log(d);\n      return d.amount < 0 ? colors[0] : colors[1];\n    }).attr('x', (d, i) => scaleX(d.text)).attr('y', d => height - scaleY(Math.abs(d.amount))); // eslint-disable-next-line\n  }, [originalData]);\n  return React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  });\n};\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/common/BarChart.jsx"],"names":["React","useEffect","useRef","d3","BarChart","data","originalData","width","height","ref","colors","labels","map","d","text","maxAmount","max","Math","abs","amount","group","select","current","scaleY","scaleLinear","domain","range","scaleX","scaleBand","groupWithData","selectAll","append","attr","exit","remove","groupWithUpdate","enter","merge","console","log","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAGC,YAAT;AAAuBC,EAAAA,KAAvB;AAA8BC,EAAAA;AAA9B,CAAD,KAA4C;AAC3D,QAAMC,GAAG,GAAGP,MAAM,CAAC,IAAD,CAAlB,CAD2D,CAE3D;;AAEA,QAAMQ,MAAM,GAAG,CACb,MADa,EAEb,0BAFa,CAAf;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,IAAI,GAAGC,YAAb,CADc,CAEd;;AACA,UAAMK,MAAM,GAAGN,IAAI,CAACO,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,IAAhB,CAAf;AACA,UAAMC,SAAS,GAAGZ,EAAE,CAACa,GAAH,CAAOX,IAAP,EAAaQ,CAAC,IAAII,IAAI,CAACC,GAAL,CAASL,CAAC,CAACM,MAAX,CAAlB,CAAlB;AACA,UAAMC,KAAK,GAAGjB,EAAE,CAACkB,MAAH,CAAUZ,GAAG,CAACa,OAAd,CAAd;AAEA,UAAMC,MAAM,GAAGpB,EAAE,CACdqB,WADY,GAEZC,MAFY,CAEL,CAAC,CAAD,EAAIV,SAAJ,CAFK,EAGZW,KAHY,CAGN,CAAC,CAAD,EAAIlB,MAAJ,CAHM,CAAf;AAKA,UAAMmB,MAAM,GAAGxB,EAAE,CACdyB,SADY,GAEZH,MAFY,CAELd,MAFK,EAGZe,KAHY,CAGN,CAAC,CAAD,EAAInB,KAAJ,CAHM,CAAf;AAKA,UAAMsB,aAAa,GAAGT,KAAK,CACxBU,SADmB,CACT,QADS,EAEnBzB,IAFmB,CAEdA,IAFc,EAGnB0B,MAHmB,CAGZ,GAHY,EAInBC,IAJmB,CAId,OAJc,EAIL,MAJK,CAAtB;AAMAH,IAAAA,aAAa,CACVI,IADH,GAEGC,MAFH;AAIA,UAAMC,eAAe,GAAGN,aAAa,CAClCO,KADqB,GAErBL,MAFqB,CAEd,MAFc,EAGtB;AAHsB,KAIrBM,KAJqB,CAIfR,aAAa,CAACR,MAAd,CAAqB,QAArB,CAJe,CAAxB;AAMAc,IAAAA,eAAe,CACZH,IADH,CACQ,OADR,EACiB,MADjB,EAEE;AAFF,KAGGA,IAHH,CAGQ,OAHR,EAGiB,CAHjB,EAIGA,IAJH,CAIQ,QAJR,EAIkBnB,CAAC,IAAIU,MAAM,CAACN,IAAI,CAACC,GAAL,CAASL,CAAC,CAACM,MAAX,CAAD,CAJ7B,EAKGa,IALH,CAKQ,MALR,EAKgBnB,CAAC,IAAI;AACjByB,MAAAA,OAAO,CAACC,GAAR,CAAY1B,CAAZ;AACA,aAAOA,CAAC,CAACM,MAAF,GAAW,CAAX,GAAeT,MAAM,CAAC,CAAD,CAArB,GAA2BA,MAAM,CAAC,CAAD,CAAxC;AACD,KARH,EASGsB,IATH,CASQ,GATR,EASa,CAACnB,CAAD,EAAI2B,CAAJ,KAAUb,MAAM,CAACd,CAAC,CAACC,IAAH,CAT7B,EAUGkB,IAVH,CAUQ,GAVR,EAUanB,CAAC,IAAIL,MAAM,GAAGe,MAAM,CAACN,IAAI,CAACC,GAAL,CAASL,CAAC,CAACM,MAAX,CAAD,CAVjC,EAjCc,CA6ChB;AACC,GA9CQ,EA8CN,CAACb,YAAD,CA9CM,CAAT;AAgDA,SACE;AAAK,IAAA,KAAK,EAAEC,KAAZ;AAAmB,IAAA,MAAM,EAAEC,MAA3B;AAAmC,IAAA,GAAG,EAAEC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CA5DD;;AA8DA,eAAeL,QAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst BarChart = ({ data : originalData, width, height }) => {\n  const ref = useRef(null);\n  // const cache = useRef(originalData);\n\n  const colors = [\n    '#fff',\n    'rgba(255, 255, 255, 0.3)'\n  ];\n\n  useEffect(() => {\n    const data = originalData;\n    // const prevData = createPie(cache.current);\n    const labels = data.map(d => d.text);\n    const maxAmount = d3.max(data, d => Math.abs(d.amount));\n    const group = d3.select(ref.current);\n\n    const scaleY = d3\n      .scaleLinear()\n      .domain([0, maxAmount])\n      .range([0, height])\n\n    const scaleX = d3\n      .scaleBand()\n      .domain(labels)\n      .range([0, width])\n\n    const groupWithData = group\n      .selectAll('g.rect')\n      .data(data)\n      .append('g')\n      .attr('class', 'rect');\n\n    groupWithData\n      .exit()\n      .remove();\n\n    const groupWithUpdate = groupWithData\n      .enter()\n      .append('rect')\n      //.attr('class', 'rect')\n      .merge(groupWithData.select('g.rect'));\n\n    groupWithUpdate\n      .attr('class', 'rect')\n      //.append('rect')\n      .attr('width', 6)\n      .attr('height', d => scaleY(Math.abs(d.amount)))\n      .attr('fill', d => {\n        console.log(d)\n        return d.amount < 0 ? colors[0] : colors[1]\n      })\n      .attr('x', (d, i) => scaleX(d.text))\n      .attr('y', d => height - scaleY(Math.abs(d.amount)));\n\n  // eslint-disable-next-line\n  }, [originalData])\n\n  return ( \n    <svg width={width} height={height} ref={ref} />\n  );\n}\n\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}