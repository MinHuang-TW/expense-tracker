{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkWeek, checkMonth, checkYear } from '../utils/calculation'; // import Transaction from './Transaction';\n\nimport { Tabs, Tab, CircularProgress } from '@material-ui/core';\n\nconst Statistics = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [value, setValue] = useState(0); // const [selected, setSelected] = useState('all');\n  // const [sortLatest, setSortLatest] = useState(true);\n  // const [sortDsc, setSortDsc] = useState(true);\n\n  const timeFilters = ['week', 'month', 'year']; // const transFilters = ['all', 'income', 'expense'];\n\n  const incomeLists = [];\n  const expenseLists = [];\n  const newList = [];\n  const today = moment();\n  let counter = 0;\n\n  const income = (time, filter) => {\n    const temp = {};\n    transactions.filter(transaction => transaction.amount > 0).filter(transaction => moment(transaction.date).isSame(today, time)).map(transaction => {\n      const date = moment(transaction.date).format(filter);\n\n      if (temp.hasOwnProperty(date)) {\n        temp[date] = temp[date] + transaction.amount;\n      } else {\n        temp[date] = transaction.amount;\n      }\n    });\n\n    for (let key in temp) {\n      incomeLists.push({\n        'text': key,\n        'amount': temp[key]\n      });\n    }\n  };\n\n  const expense = (time, filter) => {\n    const temp = {};\n    transactions.filter(transaction => transaction.amount < 0).filter(transaction => moment(transaction.date).isSame(today, time)).map(transaction => {\n      const date = moment(transaction.date).format(filter);\n\n      if (temp.hasOwnProperty(date)) {\n        temp[date] = temp[date] + transaction.amount;\n      } else {\n        temp[date] = transaction.amount;\n      }\n    });\n\n    for (let key in temp) {\n      expenseLists.push({\n        'text': key,\n        'amount': temp[key]\n      });\n    }\n  };\n\n  income('year', 'MMMM');\n  console.log(incomeLists);\n  console.log(expenseLists);\n  console.log(transactions); // const income = amount\n  //   .filter(item => item > 0)\n  //   .reduce((acc, item) => (acc += item), 0)\n  //   .toFixed(2);\n  // if (temp.hasOwnProperty(transaction.text)) {\n  //   temp[transaction.text] = temp[transaction.text] + transaction.amount;\n  // } else {\n  //   temp[transaction.text] = transaction.amount;\n  // }\n  // for (var key in temp) {\n  //   newList.push({ 'text': key, 'amount': temp[key] });\n  // }\n  // console.log(newList);\n\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"plus-bg time-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    \"aria-label\": \"time selectors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, timeFilters.map((timeFilter, index) => React.createElement(Tab, {\n    key: timeFilter,\n    label: timeFilter,\n    onClick: () => setValue(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"plus-bg box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container box-incomeExpense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, transactions.filter(transaction => {\n    const date = transaction.date;\n\n    if (value === 0) {\n      return checkWeek(date);\n    }\n\n    if (value === 1) return checkMonth(date);\n    if (value === 2) return checkYear(date);\n    return transaction;\n  }).map(transaction => {\n    counter++;\n    const amount = transaction.amount;\n    const date = transaction.date;\n    const obj = {\n      'text': moment(date).format('dddd'),\n      amount\n    };\n    if (amount > 0) incomeLists.push(obj);\n    if (amount < 0) expenseLists.push(obj); // console.log(temp)\n  }), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"of this \", timeFilters[value])) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }) : 'No transaction')));\n};\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx"],"names":["React","Fragment","useState","useEffect","useContext","moment","GlobalContext","checkWeek","checkMonth","checkYear","Tabs","Tab","CircularProgress","Statistics","loading","transactions","getTransactions","value","setValue","timeFilters","incomeLists","expenseLists","newList","today","counter","income","time","filter","temp","transaction","amount","date","isSame","map","format","hasOwnProperty","key","push","expense","console","log","timeFilter","index","length","obj"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkWeek, checkMonth, checkYear } from '../utils/calculation';\n// import Transaction from './Transaction';\nimport { Tabs, Tab, CircularProgress } from '@material-ui/core';\n\nconst Statistics = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  // const [selected, setSelected] = useState('all');\n  // const [sortLatest, setSortLatest] = useState(true);\n  // const [sortDsc, setSortDsc] = useState(true);\n\n  const timeFilters = ['week', 'month', 'year'];\n  // const transFilters = ['all', 'income', 'expense'];\n  const incomeLists = [];\n  const expenseLists = [];\n  const newList = [];\n  const today = moment();\n  let counter = 0;\n\n  \n\n  const income = (time, filter) => {\n    const temp = {};\n    transactions\n      .filter(transaction => transaction.amount > 0)\n      .filter(transaction => moment(transaction.date).isSame(today, time))\n      .map(transaction => {\n        const date = moment(transaction.date).format(filter);\n        if (temp.hasOwnProperty(date)) {\n          temp[date] = temp[date] + transaction.amount;\n        } else {\n          temp[date] = transaction.amount;\n        }\n      })\n    \n    for (let key in temp) {\n      incomeLists.push({ 'text': key, 'amount': temp[key] });\n    }\n  }\n\n  const expense = (time, filter) => {\n    const temp = {};\n    transactions\n      .filter(transaction => transaction.amount < 0)\n      .filter(transaction => moment(transaction.date).isSame(today, time))\n      .map(transaction => {\n        const date = moment(transaction.date).format(filter);\n        if (temp.hasOwnProperty(date)) {\n          temp[date] = temp[date] + transaction.amount;\n        } else {\n          temp[date] = transaction.amount;\n        }\n      })\n    \n    for (let key in temp) {\n      expenseLists.push({ 'text': key, 'amount': temp[key] });\n    }\n  }\n\n\n\n  income('year', 'MMMM');\n  console.log(incomeLists)\n  console.log(expenseLists)\n  console.log(transactions)\n\n  // const income = amount\n  //   .filter(item => item > 0)\n  //   .reduce((acc, item) => (acc += item), 0)\n  //   .toFixed(2);\n\n  // if (temp.hasOwnProperty(transaction.text)) {\n  //   temp[transaction.text] = temp[transaction.text] + transaction.amount;\n  // } else {\n  //   temp[transaction.text] = transaction.amount;\n  // }\n\n  // for (var key in temp) {\n  //   newList.push({ 'text': key, 'amount': temp[key] });\n  // }\n\n  // console.log(newList);\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line\n  }, []);\n\n  return ( \n    <Fragment>\n      <div className='plus-bg time-bar'>\n        <Tabs value={value} variant=\"fullWidth\" aria-label=\"time selectors\">\n          {timeFilters.map((timeFilter, index) => \n            <Tab \n              key={timeFilter} label={timeFilter} \n              onClick={() => setValue(index)} \n              disableFocusRipple disableRipple\n            />\n          )}\n        </Tabs>\n      </div>\n\n      <div className='plus-bg box'>\n        <div className='container box-incomeExpense'>\n\n        </div>\n      </div>\n\n      <div className=\"container\">\n        {transactions.length > 0 ? (\n          <ul className='list'>\n            {transactions\n              .filter(transaction => {\n                const date = transaction.date;\n                if (value === 0) {\n                  return checkWeek(date);\n                }\n                if (value === 1) return checkMonth(date);\n                if (value === 2) return checkYear(date);\n                return transaction;\n              })\n              .map(transaction => {\n                counter++;\n                const amount = transaction.amount;\n                const date = transaction.date;\n                const obj = { \n                  'text': moment(date).format('dddd'),\n                  amount,\n                };\n                if (amount > 0) incomeLists.push(obj);\n                if (amount < 0) expenseLists.push(obj);\n                // console.log(temp)\n              })\n            }\n            {/* {console.log(incomeLists)} */}\n            {/* {console.log(newList)} */}\n\n            {/* {newList.map(e => <Transaction transaction={e} />)} */}\n\n            {counter === 0 && (\n              <div className='list-status'>\n                {/* No {selected !== 'all' && selected} transaction<br/> */}\n                of this {timeFilters[value]}\n              </div>\n            )}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? <CircularProgress color='primary'/>\n              : 'No transaction'}\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}