{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkDay, sortAmountDsc, sortAmountAsc } from '../utils/calculation';\nimport Filter from './common/Filter';\nimport Transaction from './common/Transaction';\nimport { CircularProgress } from '@material-ui/core';\n\nconst TransactionList = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [sortDsc, setSortDsc] = useState(true);\n  let counter = 0;\n  const transitions = useTransition(transactions, item => item._id, {\n    from: {\n      transform: 'translate3d(-100%,0,0)'\n    },\n    enter: {\n      transform: 'translate3d(0,0,0)'\n    },\n    leave: {\n      transform: 'translate3d(100%,,0)'\n    }\n  });\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Filter, {\n    value: 0,\n    sortDsc: sortDsc,\n    handleSortAmount: () => setSortDsc(!sortDsc),\n    text: \"today\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, transactions.filter(transaction => checkDay(transaction.date)).sort((a, b) => sortDsc ? sortAmountDsc(a, b) : sortAmountAsc(a, b)).map(transaction => {\n    counter++;\n    return transitions.map(({\n      item,\n      props,\n      key\n    }) => React.createElement(animated.div, {\n      key: key,\n      style: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Transaction, {\n      transaction: transaction,\n      menu: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  }), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"No transaction today\")) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Add your first transaction\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), \"by clicking the green plus button\")));\n};\n\nexport default TransactionList;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx"],"names":["React","useState","useContext","useEffect","useTransition","animated","GlobalContext","checkDay","sortAmountDsc","sortAmountAsc","Filter","Transaction","CircularProgress","TransactionList","loading","transactions","getTransactions","sortDsc","setSortDsc","counter","transitions","item","_id","from","transform","enter","leave","length","filter","transaction","date","sort","a","b","map","props","key"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkDay, sortAmountDsc, sortAmountAsc } from '../utils/calculation';\nimport Filter from './common/Filter';\nimport Transaction from './common/Transaction';\nimport { CircularProgress } from '@material-ui/core';\n\nconst TransactionList = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [sortDsc, setSortDsc] = useState(true);\n  let counter = 0;\n\n  const transitions = useTransition(transactions, item => item._id, {\n    from: { transform: 'translate3d(-100%,0,0)' },\n    enter: { transform: 'translate3d(0,0,0)' },\n    leave: { transform: 'translate3d(100%,,0)' },\n  })\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className='container'>\n      <Filter \n        value={0} \n        sortDsc={sortDsc} \n        handleSortAmount={() => setSortDsc(!sortDsc)}\n        text=\"today\"\n      />\n\n      {transactions.length > 0 ? (\n        <ul className='list'>\n          {transactions\n            .filter(transaction => checkDay(transaction.date))\n            .sort((a, b) => sortDsc ? sortAmountDsc(a, b) : sortAmountAsc(a, b))\n            .map(transaction => {\n              counter++;\n              return transitions.map(({ item, props, key }) =>\n                <animated.div key={key} style={props}>\n                  <Transaction transaction={transaction} menu />\n                </animated.div>\n              );\n            })}\n          {counter === 0 && (\n            <div className='list-status'>No transaction today</div>\n          )}\n        </ul>\n      ) : (\n        <div className='list-status'>\n          {loading \n            ? <CircularProgress color='primary'/>\n            : <span>\n                Add your first transaction<br/>\n                by clicking the green plus button\n              </span>\n          }\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TransactionList;\n"]},"metadata":{},"sourceType":"module"}