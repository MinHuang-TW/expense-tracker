{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst TransactionList = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [progress, setProgress] = useState(0);\n  const transactionsIncome = transactions.filter(e => e.amount > 0);\n  const transactionsExpense = transactions.filter(e => e.amount < 0);\n  const transFilters = [{\n    name: 'all',\n    list: transactions\n  }, {\n    name: 'income',\n    list: transactionsIncome\n  }, {\n    name: 'expense',\n    list: transactionsExpense\n  }];\n  useEffect(() => {\n    function tick() {\n      setProgress(oldProgress => oldProgress >= 100 ? 0 : oldProgress + 1);\n    }\n\n    const timer = setInterval(tick, 20);\n    getTransactions();\n    return () => {\n      clearInterval(timer);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    fullWidth: true,\n    color: \"primary\",\n    \"aria-label\": \"outlined primary button group\",\n    style: {\n      marginBottom: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, transFilters.map(transFilter => React.createElement(Button, {\n    key: transFilter.name,\n    disableElevation: true,\n    variant: selected === transFilter.name ? 'contained' : null,\n    color: selected === transFilter.name ? 'primary' : null,\n    onClick: () => setSelected(transFilter.name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, transFilter.name))), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, selected === 'all' ? transactions.map(transaction => React.createElement(Transaction, {\n    key: transaction._id,\n    transaction: transaction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })) : selected === 'income' && transactionsIncome.length > 0 ? transactionsIncome.map(transaction => React.createElement(Transaction, {\n    key: transaction._id,\n    transaction: transaction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })) : selected === 'expense' && transactionsExpense.length > 0 ? transactionsExpense.map(transaction => React.createElement(Transaction, {\n    key: transaction._id,\n    transaction: transaction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"No \", selected, \" transaction\"), React.createElement(\"div\", {\n    style: {\n      height: '56px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    variant: \"determinate\",\n    value: progress,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }) : 'No transaction'));\n};\n\nexport default TransactionList;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx"],"names":["React","useState","useContext","useEffect","GlobalContext","Transaction","Button","ButtonGroup","CircularProgress","TransactionList","loading","transactions","getTransactions","selected","setSelected","progress","setProgress","transactionsIncome","filter","e","amount","transactionsExpense","transFilters","name","list","tick","oldProgress","timer","setInterval","clearInterval","marginBottom","map","transFilter","length","transaction","_id","height"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst TransactionList = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [progress, setProgress] = useState(0);\n\n  const transactionsIncome = transactions.filter(e => e.amount > 0);\n  const transactionsExpense = transactions.filter(e => e.amount < 0);\n  const transFilters = [\n    {name: 'all', list: transactions}, \n    {name: 'income', list: transactionsIncome}, \n    {name: 'expense', list: transactionsExpense},\n  ];\n\n\n  useEffect(() => {\n    function tick() {\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\n    }\n    const timer = setInterval(tick, 20);\n\n    getTransactions();\n    \n    return () => {\n      clearInterval(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <ButtonGroup \n        fullWidth color=\"primary\" \n        aria-label=\"outlined primary button group\"\n        style={{ marginBottom: '10px' }}\n      >\n        {transFilters.map(transFilter =>\n          <Button \n            key={transFilter.name}\n            disableElevation\n            variant={selected === transFilter.name ? 'contained' : null} \n            color={selected === transFilter.name ? 'primary' : null}  \n            onClick={() => setSelected(transFilter.name)}\n          >\n            {transFilter.name}\n          </Button>\n        )}\n      </ButtonGroup>\n\n      {transactions.length > 0\n        ? <ul className='list'>\n            {selected === 'all' \n              ? transactions.map(transaction => (\n                <Transaction key={transaction._id} transaction={transaction} />\n              ))\n              : selected === 'income' && transactionsIncome.length > 0 \n                ? transactionsIncome\n                  .map(transaction => <Transaction key={transaction._id} transaction={transaction} />)\n              : selected === 'expense' && transactionsExpense.length > 0 \n                ? transactionsExpense\n                  .map(transaction => <Transaction key={transaction._id} transaction={transaction} />)\n              : <div className=\"list-status\">No {selected} transaction</div>\n            }\n            <div style={{ height: '56px' }} /> \n          </ul>\n        : (<div className='list-status'>\n            {loading ? <CircularProgress variant=\"determinate\" value={progress} color='secondary' /> : 'No transaction' }\n          </div>)\n      }\n    </div>\n  );\n};\n\nexport default TransactionList;\n"]},"metadata":{},"sourceType":"module"}