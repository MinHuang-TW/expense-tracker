{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Navigation.jsx\";\nimport React, { useState, useContext, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { GlobalContext } from '../context/GlobalState';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { defaultMaterialTheme } from '../utils/colorTheme';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, AppBar, Drawer, Hidden, IconButton, Toolbar, Typography, MenuItem } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeSharpIcon from '@material-ui/icons/HomeSharp';\nimport MeetingRoomSharpIcon from '@material-ui/icons/MeetingRoomSharp';\nimport { DayIcon, NightIcon } from '../images/daytimeIcon';\n\nconst Navigation = props => {\n  const {\n    getToken,\n    getCurrentUser\n  } = useContext(GlobalContext);\n  const {\n    container,\n    children\n  } = props;\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const token = getToken();\n  const drawerWidth = 240;\n  const currentHours = new Date().getHours();\n\n  const greeting = hour => {\n    if (hour < 4) return 'night';\n    if (hour < 13) return 'morning';\n    if (hour < 18) return 'afternoon';\n    if (hour < 23) return 'evening';\n    return 'day';\n  };\n\n  const dayTime = greeting => {\n    if (greeting === 'morning' || greeting === 'afternoon') {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  console.log(dayTime(greeting(currentHours)));\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex'\n    },\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0\n      }\n    },\n    appBar: {\n      boxShadow: 'none',\n      [theme.breakpoints.up('sm')]: {\n        width: token && `calc(100% - ${drawerWidth}px)`,\n        marginLeft: token && drawerWidth\n      }\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        display: 'none'\n      }\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth,\n      background: dayTime(currentHours) ? '#EAEBED' : '#232c2d' // background: '#F3F5F4',\n\n    },\n    content: {\n      flexGrow: 1\n    },\n    textColor: {\n      opacity: 0.8,\n      color: dayTime(currentHours) ? '#232c2d' : 'white',\n      textDecoration: 'none'\n    },\n    menuIcon: {\n      marginRight: '15px',\n      opacity: 0.5\n    }\n  }));\n  const classes = useStyles();\n  const drawerList = [{\n    name: 'Home',\n    path: '/user',\n    icon: React.createElement(HomeSharpIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })\n  }, {\n    name: 'Logout',\n    path: '/logout',\n    icon: React.createElement(MeetingRoomSharpIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })\n  }];\n  const drawer = React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      margin: '50px 16px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    className: classes.textColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Good \", greeting(currentHours), \",\"), React.createElement(Typography, {\n    color: \"primary\",\n    variant: \"h4\",\n    style: {\n      textTransform: 'capitalize',\n      minHeight: '82px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, token && getCurrentUser().name), React.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, dayTime(currentHours) ? React.createElement(DayIcon, {\n    width: \"40%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }) : React.createElement(NightIcon, {\n    width: \"40%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))), drawerList.map(list => React.createElement(NavLink, {\n    key: list.name,\n    to: list.path,\n    className: classes.textColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.menuIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, list.icon), list.name))));\n  return React.createElement(ThemeProvider, {\n    theme: defaultMaterialTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, token && React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    edge: \"start\",\n    onClick: () => setMobileOpen(!mobileOpen),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    style: {\n      opacity: 0.8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Expense Tracker\"))), token && React.createElement(\"nav\", {\n    className: classes.drawer,\n    \"aria-label\": \"mailbox folders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    smUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    container: container,\n    variant: \"temporary\",\n    open: mobileOpen,\n    onClose: () => setMobileOpen(!mobileOpen),\n    classes: {\n      paper: classes.drawerPaper\n    },\n    ModalProps: {\n      keepMounted: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, drawer)), React.createElement(Hidden, {\n    xsDown: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    variant: \"permanent\",\n    open: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, drawer))), React.createElement(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, children)));\n};\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Navigation.jsx"],"names":["React","useState","useContext","Fragment","NavLink","GlobalContext","ThemeProvider","defaultMaterialTheme","makeStyles","CssBaseline","AppBar","Drawer","Hidden","IconButton","Toolbar","Typography","MenuItem","MenuIcon","HomeSharpIcon","MeetingRoomSharpIcon","DayIcon","NightIcon","Navigation","props","getToken","getCurrentUser","container","children","mobileOpen","setMobileOpen","token","drawerWidth","currentHours","Date","getHours","greeting","hour","dayTime","console","log","useStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","boxShadow","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","background","content","flexGrow","textColor","opacity","color","textDecoration","menuIcon","classes","drawerList","name","path","icon","margin","textTransform","minHeight","textAlign","map","list","paper","keepMounted"],"mappings":"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","sourcesContent":["import React, { useState, useContext, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { GlobalContext } from '../context/GlobalState';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { defaultMaterialTheme } from '../utils/colorTheme';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, AppBar, Drawer, Hidden, IconButton, Toolbar, Typography, MenuItem } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeSharpIcon from '@material-ui/icons/HomeSharp';\nimport MeetingRoomSharpIcon from '@material-ui/icons/MeetingRoomSharp';\nimport { DayIcon, NightIcon } from '../images/daytimeIcon';\n\nconst Navigation = props => {\n  const { getToken, getCurrentUser } = useContext(GlobalContext);\n  const { container, children } = props;\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const token = getToken();\n  const drawerWidth = 240;\n\n  const currentHours = new Date().getHours();\n  const greeting = hour => {\n    if (hour < 4) return 'night';\n    if (hour < 13) return 'morning';\n    if (hour < 18) return 'afternoon';\n    if (hour < 23) return 'evening';\n    return 'day';\n  };\n\n  const dayTime = greeting => {\n    if (greeting === 'morning' || greeting === 'afternoon') {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  console.log(dayTime(greeting(currentHours)))\n  \n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    appBar: {\n      boxShadow: 'none',\n      [theme.breakpoints.up('sm')]: {\n        width: token && `calc(100% - ${drawerWidth}px)`,\n        marginLeft: token && drawerWidth,\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        display: 'none',\n      },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth,\n      background: dayTime(currentHours) ? '#EAEBED' : '#232c2d',\n      // background: '#F3F5F4',\n    },\n    content: {\n      flexGrow: 1,\n    },\n    textColor: {\n      opacity: 0.8,\n      color: dayTime(currentHours) ? '#232c2d' : 'white',\n      textDecoration: 'none',\n    },\n    menuIcon: {\n      marginRight: '15px',\n      opacity: 0.5,\n    }\n  }));\n\n  const classes = useStyles();\n\n  const drawerList = [\n    { name: 'Home', path: '/user', icon: <HomeSharpIcon /> },\n    { name: 'Logout', path: '/logout', icon: <MeetingRoomSharpIcon /> },\n  ]\n\n  const drawer = (\n    <Fragment>\n      <div style={{ margin: '50px 16px' }}>\n        <Typography variant='h6' gutterBottom className={classes.textColor}>\n          Good {greeting(currentHours)},\n        </Typography>\n\n        <Typography color='primary' variant='h4' style={{ textTransform: 'capitalize', minHeight: '82px'}}>\n          {token && getCurrentUser().name}\n        </Typography>\n\n        <div style={{ textAlign: 'right' }}>\n          {dayTime(currentHours) ? <DayIcon width='40%' /> : <NightIcon width='40%' />}\n        </div>\n      </div>\n\n      {drawerList.map(list => \n        (<NavLink key={list.name} to={list.path} className={classes.textColor}>\n          <MenuItem>\n            <div className={classes.menuIcon}>{list.icon}</div>\n            {list.name}\n          </MenuItem>\n        </NavLink>)\n      )}\n\n    </Fragment>\n  );\n\n  return (\n    <ThemeProvider theme={defaultMaterialTheme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            {token && <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={() => setMobileOpen(!mobileOpen)}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>}\n\n            <Typography variant=\"h6\" noWrap style={{ opacity: 0.8 }}>\n              Expense Tracker\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        {token && <nav className={classes.drawer} aria-label=\"mailbox folders\">\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={container}\n              variant=\"temporary\"\n              open={mobileOpen}\n              onClose={() => setMobileOpen(!mobileOpen)}\n              classes={{ paper: classes.drawerPaper }}\n              ModalProps={{ keepMounted: true }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          \n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{ paper: classes.drawerPaper }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>}\n    \n        <main className={classes.content}>\n          {children}\n        </main>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}