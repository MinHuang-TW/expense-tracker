{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { checkWeek, checkDay, checkMonth, checkYear, sortDateDsc, sortDateAsc, sortAmountDsc, sortAmountAsc } from '../utils/calculation';\nimport { Tabs, Tab } from '@material-ui/core';\n\nconst Statistics = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const timeFilters = ['week', 'month', 'year'];\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"plus-bg time-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    \"aria-label\": \"time selectors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, timeFilters.map((timeFilter, index) => React.createElement(Tab, {\n    key: timeFilter,\n    label: timeFilter,\n    onClick: () => setValue(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"plus-bg box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container box-incomeExpense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, transactions.filter(transaction => {\n    const date = transaction.date;\n    if (value === 0) return checkDay(date);\n    if (value === 1) return checkWeek(date);\n    if (value === 2) return checkMonth(date);\n    if (value === 3) return checkYear(date);\n    return transaction;\n  }).filter(transaction => {\n    amounts.push(transaction.amount);\n\n    switch (selected) {\n      case 'income':\n        return transaction.amount > 0;\n\n      case 'expense':\n        return transaction.amount < 0;\n\n      default:\n        return transaction;\n    }\n  }).sort((a, b) => {\n    if (sortColumn === 'date') {\n      return sortLatest ? sortDateDsc(a, b) : sortDateAsc(a, b);\n    }\n\n    return sortDsc ? sortAmountDsc(a, b) : sortAmountAsc(a, b);\n  }).map(transaction => {\n    counter++;\n    return React.createElement(Transaction, {\n      key: transaction._id,\n      transaction: transaction,\n      date: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n  }), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"No \", selected !== 'all' && selected, \" transaction\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), \"of this \", timeFilters[value])) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }) : 'No transaction'));\n};\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx"],"names":["React","Fragment","useState","useEffect","useContext","checkWeek","checkDay","checkMonth","checkYear","sortDateDsc","sortDateAsc","sortAmountDsc","sortAmountAsc","Tabs","Tab","Statistics","loading","transactions","getTransactions","GlobalContext","value","setValue","timeFilters","map","timeFilter","index","length","filter","transaction","date","amounts","push","amount","selected","sort","a","b","sortColumn","sortLatest","sortDsc","counter","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,UAA/C,QAAiE,OAAjE;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0CC,SAA1C,EAAqDC,WAArD,EAAkEC,WAAlE,EAA+EC,aAA/E,EAA8FC,aAA9F,QAAmH,sBAAnH;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,mBAA1B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAA6Cd,UAAU,CAACe,aAAD,CAA7D;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMoB,WAAW,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAApB;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,eAAe,GADD,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,KAAb;AAAoB,IAAA,OAAO,EAAC,WAA5B;AAAwC,kBAAW,gBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,WAAW,CAACC,GAAZ,CAAgB,CAACC,UAAD,EAAaC,KAAb,KACf,oBAAC,GAAD;AACE,IAAA,GAAG,EAAED,UADP;AACmB,IAAA,KAAK,EAAEA,UAD1B;AAEE,IAAA,OAAO,EAAE,MAAMH,QAAQ,CAACI,KAAD,CAFzB;AAGE,IAAA,kBAAkB,MAHpB;AAGqB,IAAA,aAAa,MAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF,EAaE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,EAmBGR,YAAY,CAACS,MAAb,GAAsB,CAAtB,GACC;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,YAAY,CACVU,MADF,CACSC,WAAW,IAAI;AACrB,UAAMC,IAAI,GAAGD,WAAW,CAACC,IAAzB;AACA,QAAIT,KAAK,KAAK,CAAd,EAAiB,OAAOd,QAAQ,CAACuB,IAAD,CAAf;AACjB,QAAIT,KAAK,KAAK,CAAd,EAAiB,OAAOf,SAAS,CAACwB,IAAD,CAAhB;AACjB,QAAIT,KAAK,KAAK,CAAd,EAAiB,OAAOb,UAAU,CAACsB,IAAD,CAAjB;AACjB,QAAIT,KAAK,KAAK,CAAd,EAAiB,OAAOZ,SAAS,CAACqB,IAAD,CAAhB;AACjB,WAAOD,WAAP;AACD,GARF,EASED,MATF,CASSC,WAAW,IAAI;AACrBE,IAAAA,OAAO,CAACC,IAAR,CAAaH,WAAW,CAACI,MAAzB;;AACA,YAAQC,QAAR;AACE,WAAK,QAAL;AACE,eAAOL,WAAW,CAACI,MAAZ,GAAqB,CAA5B;;AACF,WAAK,SAAL;AACE,eAAOJ,WAAW,CAACI,MAAZ,GAAqB,CAA5B;;AACF;AACE,eAAOJ,WAAP;AANJ;AAQD,GAnBF,EAoBEM,IApBF,CAoBO,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,QAAIC,UAAU,KAAK,MAAnB,EAA2B;AACzB,aAAOC,UAAU,GAAG7B,WAAW,CAAC0B,CAAD,EAAIC,CAAJ,CAAd,GAAuB1B,WAAW,CAACyB,CAAD,EAAIC,CAAJ,CAAnD;AACD;;AACD,WAAOG,OAAO,GAAG5B,aAAa,CAACwB,CAAD,EAAIC,CAAJ,CAAhB,GAAyBxB,aAAa,CAACuB,CAAD,EAAIC,CAAJ,CAApD;AACD,GAzBF,EA0BEb,GA1BF,CA0BMK,WAAW,IAAI;AAClBY,IAAAA,OAAO;AACP,WACE,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEZ,WAAW,CAACa,GAA9B;AAAmC,MAAA,WAAW,EAAEb,WAAhD;AAA6D,MAAA,IAAI,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GA/BF,CADH,EAiCGY,OAAO,KAAK,CAAZ,IACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACMP,QAAQ,KAAK,KAAb,IAAsBA,QAD5B,kBACiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjD,cAEWX,WAAW,CAACF,KAAD,CAFtB,CAlCJ,CADD,GA0CC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,OAAO,GACJ,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,GAEJ,gBAHN,CA7DJ,CADF;AAsED,CAhFD;;AAkFA,eAAeD,UAAf","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { checkWeek, checkDay, checkMonth, checkYear, sortDateDsc, sortDateAsc, sortAmountDsc, sortAmountAsc } from '../utils/calculation';\nimport { Tabs, Tab } from '@material-ui/core';\n\nconst Statistics = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const timeFilters = ['week', 'month', 'year'];\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return ( \n    <Fragment>\n      <div className='plus-bg time-bar'>\n        <Tabs value={value} variant=\"fullWidth\" aria-label=\"time selectors\">\n          {timeFilters.map((timeFilter, index) => \n            <Tab \n              key={timeFilter} label={timeFilter} \n              onClick={() => setValue(index)} \n              disableFocusRipple disableRipple\n            />\n          )}\n        </Tabs>\n      </div>\n\n      <div className='plus-bg box'>\n        <div className='container box-incomeExpense'>\n\n        </div>\n      </div>\n\n      {transactions.length > 0 ? (\n        <ul className='list'>\n          {transactions\n            .filter(transaction => {\n              const date = transaction.date;\n              if (value === 0) return checkDay(date);\n              if (value === 1) return checkWeek(date);\n              if (value === 2) return checkMonth(date);\n              if (value === 3) return checkYear(date);\n              return transaction;\n            })\n            .filter(transaction => {\n              amounts.push(transaction.amount);\n              switch (selected) {\n                case 'income':\n                  return transaction.amount > 0;\n                case 'expense':\n                  return transaction.amount < 0;\n                default:\n                  return transaction;\n              }\n            })\n            .sort((a, b) => {\n              if (sortColumn === 'date') {\n                return sortLatest ? sortDateDsc(a, b) : sortDateAsc(a, b);\n              }\n              return sortDsc ? sortAmountDsc(a, b) : sortAmountAsc(a, b);\n            })\n            .map(transaction => {\n              counter++;\n              return (\n                <Transaction key={transaction._id} transaction={transaction} date />\n              );\n            })}\n          {counter === 0 && (\n            <div className='list-status'>\n              No {selected !== 'all' && selected} transaction<br/>\n              of this {timeFilters[value]}\n            </div>\n          )}\n        </ul>\n      ) : (\n        <div className='list-status'>\n          {loading \n            ? <CircularProgress color='primary'/>\n            : 'No transaction'}\n        </div>\n      )}\n    </Fragment>\n  );\n}\n\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}