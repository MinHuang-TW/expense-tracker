{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/common/ProtectedRoute.jsx\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { GlobalContext } from '../context/GlobalState';\n\nconst ProtectedRoute = ({\n  path,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  const {\n    token\n  } = useContext(GlobalContext);\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (!token) return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      });\n      return Component ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      })) : render(props);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nexport default ProtectedRoute;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/common/ProtectedRoute.jsx"],"names":["React","useContext","Route","Redirect","GlobalContext","ProtectedRoute","path","component","Component","render","rest","token","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAS,EAAEC,SAAnB;AAA8BC,EAAAA,MAA9B;AAAsC,KAAGC;AAAzC,CAAD,KAAqD;AAC1E,QAAM;AAAEC,IAAAA;AAAF,MAAYV,UAAU,CAACG,aAAD,CAA5B;AAEA,SACE,oBAAC,KAAD,oBACMM,IADN;AAEE,IAAA,MAAM,EAAEE,KAAK,IAAI;AACf,UAAI,CAACD,KAAL,EAAY,OAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACZ,aAAOH,SAAS,GAAG,oBAAC,SAAD,oBAAeI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH,GAA8BH,MAAM,CAACG,KAAD,CAApD;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AASD,CAZD;;AAcA,eAAeP,cAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { GlobalContext } from '../context/GlobalState';\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  const { token } = useContext(GlobalContext);\n\n  return ( \n    <Route\n      {...rest}\n      render={props => {\n        if (!token) return <Redirect to='/login' />;\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n}\n\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}