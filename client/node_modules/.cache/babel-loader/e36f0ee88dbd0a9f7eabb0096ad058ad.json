{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport { Tabs, Tab, CircularProgress } from '@material-ui/core';\n\nconst Statistics = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const timeFilters = ['week', 'month', 'year'];\n  const incomeLists = [];\n  const expenseLists = [];\n  const today = moment();\n\n  const sortDate = (time, filter) => {\n    return transactions.filter(transaction => moment(transaction.date).isSame(today, time)).filter(transaction => transaction.amount < 0).reduce((acc, item) => {\n      const format = date => moment(date).format(filter);\n\n      if (format(acc.date) === format(item.date)) return {\n        'text': formate(acc.date),\n        'amount': acc + item.amount\n      };\n      return {\n        'text': formate(item.date),\n        'amount': item.amount\n      };\n    }, {});\n  };\n\n  console.log(sortDate('year', 'MMMM'));\n\n  const income = (time, filter) => {\n    const temp = {};\n    transactions.filter(transaction => transaction.amount > 0).filter(transaction => moment(transaction.date).isSame(today, time)).map(transaction => {\n      const date = moment(transaction.date).format(filter);\n      return temp.hasOwnProperty(date) ? temp[date] += transaction.amount : temp[date] = transaction.amount;\n    });\n    Object.entries(temp).forEach(([key, value]) => {\n      incomeLists.push({\n        'text': key,\n        'amount': value\n      });\n    });\n  };\n\n  const expense = (time, filter) => {\n    const temp = {};\n    transactions.filter(transaction => transaction.amount < 0).filter(transaction => moment(transaction.date).isSame(today, time)).map(transaction => {\n      const date = moment(transaction.date).format(filter);\n      return temp.hasOwnProperty(date) ? temp[date] += transaction.amount : temp[date] = transaction.amount;\n    });\n    Object.entries(temp).forEach(([key, value]) => {\n      expenseLists.push({\n        'text': key,\n        'amount': value\n      });\n    });\n  };\n\n  if (value === 0) {\n    expense('week', 'e');\n    income('week', 'e');\n  } else if (value === 1) {\n    expense('month', 'w');\n    income('month', 'w');\n  } else if (value === 2) {\n    expense('year', 'MM');\n    income('year', 'MM');\n  }\n\n  ;\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"plus-bg time-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    \"aria-label\": \"time selectors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, timeFilters.map((timeFilter, index) => React.createElement(Tab, {\n    key: timeFilter,\n    label: timeFilter,\n    onClick: () => setValue(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"plus-bg box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container box-incomeExpense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, incomeLists.concat(expenseLists).sort((a, b) => a.text < b.text ? -1 : 1).map((list, index) => {\n    if (value === 0) {\n      list.text = moment().day(list.text).format('dddd');\n    }\n\n    if (value === 1) {\n      list.text = `${moment().day(0).week(list.text).format('D MMM')} - ${moment().day(6).week(list.text).format('D MMM')}`;\n    }\n\n    if (value === 2) {\n      list.text = moment().month(list.text - 1).format('MMMM');\n    }\n\n    return React.createElement(Transaction, {\n      key: index,\n      transaction: list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    });\n  })) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }) : 'No transaction')));\n};\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Statistics.jsx"],"names":["React","Fragment","useState","useEffect","useContext","moment","GlobalContext","Transaction","Tabs","Tab","CircularProgress","Statistics","loading","transactions","getTransactions","value","setValue","timeFilters","incomeLists","expenseLists","today","sortDate","time","filter","transaction","date","isSame","amount","reduce","acc","item","format","formate","console","log","income","temp","map","hasOwnProperty","Object","entries","forEach","key","push","expense","timeFilter","index","length","concat","sort","a","b","text","list","day","week","month"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport { Tabs, Tab, CircularProgress } from '@material-ui/core';\n\nconst Statistics = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const timeFilters = ['week', 'month', 'year'];\n  const incomeLists = [];\n  const expenseLists = [];\n  const today = moment();\n\n  const sortDate = (time, filter) => {\n    return transactions\n      .filter(transaction => moment(transaction.date).isSame(today, time))\n      .filter(transaction => transaction.amount < 0)\n      .reduce((acc, item) => {\n        const format = date => moment(date).format(filter);\n        if (format(acc.date) === format(item.date)) return { 'text': formate(acc.date), 'amount': acc + item.amount };\n        return { 'text': formate(item.date), 'amount': item.amount };\n      }, {})\n  }\n  console.log(sortDate('year', 'MMMM'))\n\n  const income = (time, filter) => {\n    const temp = {};\n    transactions\n      .filter(transaction => transaction.amount > 0)\n      .filter(transaction => moment(transaction.date).isSame(today, time))\n      .map(transaction => {\n        const date = moment(transaction.date).format(filter);\n        return temp.hasOwnProperty(date) \n          ? temp[date] += transaction.amount\n          : temp[date] = transaction.amount;\n      })\n    Object.entries(temp).forEach(([key, value]) => {\n      incomeLists.push({ 'text': key, 'amount': value });\n    });\n  }\n\n  const expense = (time, filter) => {\n    const temp = {};\n    transactions\n      .filter(transaction => transaction.amount < 0)\n      .filter(transaction => moment(transaction.date).isSame(today, time))\n      .map(transaction => {\n        const date = moment(transaction.date).format(filter);\n        return temp.hasOwnProperty(date) \n          ? temp[date] += transaction.amount\n          : temp[date] = transaction.amount;\n      })\n    Object.entries(temp).forEach(([key, value]) => {\n      expenseLists.push({ 'text': key, 'amount': value });\n    });\n  }\n\n  if (value === 0) {\n    expense('week', 'e'); income('week', 'e');\n  } else if (value === 1) {\n    expense('month', 'w'); income('month', 'w');\n  } else if (value === 2) {\n    expense('year', 'MM'); income('year', 'MM');\n  };\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line\n  }, []);\n\n  return ( \n    <Fragment>\n      <div className='plus-bg time-bar'>\n        <Tabs value={value} variant=\"fullWidth\" aria-label=\"time selectors\">\n          {timeFilters.map((timeFilter, index) => \n            <Tab \n              key={timeFilter} label={timeFilter} \n              onClick={() => setValue(index)} \n              disableFocusRipple disableRipple\n            />\n          )}\n        </Tabs>\n      </div>\n\n      <div className='plus-bg box'>\n        <div className='container box-incomeExpense'>\n\n        </div>\n      </div>\n\n      <div className=\"container\">\n        {transactions.length > 0 ? (\n          <ul className='list'>\n            {incomeLists.concat(expenseLists)\n              .sort((a, b) => a.text < b.text ?  -1 : 1)\n              .map((list, index) => {\n                if (value === 0) {\n                  list.text = moment().day(list.text).format('dddd');\n                }\n                if (value === 1) {\n                  list.text = `${moment().day(0).week(list.text).format('D MMM')} - ${moment().day(6).week(list.text).format('D MMM')}`;\n                }\n                if (value === 2) {\n                  list.text = moment().month(list.text - 1).format('MMMM');\n                }\n\n                return <Transaction key={index} transaction={list} />\n              })\n            }\n\n            {/* {expenseLists === 0 && (\n              <div className='list-status'>\n                No transaction<br/>\n                of the {timeFilters[value]}\n              </div>\n            )} */}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? <CircularProgress color='primary'/>\n              : 'No transaction'}\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}