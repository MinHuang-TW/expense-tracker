{"ast":null,"code":"import Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nconst moment = extendMoment(Moment);\nexport function getGreeting(d) {\n  const hour = moment(d).hour();\n  if (hour < 4) return 'night';\n  if (hour < 13) return 'morning';\n  if (hour < 18) return 'afternoon';\n  if (hour < 24) return 'evening';\n  return 'day';\n}\nexport function checkDayTime(d) {\n  const hour = moment(d).hour();\n  if (hour > 3 && hour < 18) return true;\n  return false;\n}\nexport function checkDay(d) {\n  const start = moment().startOf('day');\n  const end = moment().endOf('day');\n  const date = moment(d);\n  const range = moment().range(start, end);\n  if (date.within(range)) return true;\n  return false;\n}\nexport function checkWeek(d) {\n  const sunday = moment().startOf('week');\n  const saturday = moment().endOf('week');\n  const date = moment(d);\n  const range = moment().range(sunday, saturday);\n  if (date.within(range)) return true;\n  return false;\n}\nexport function getWeekDate(weekNum) {\n  const sunday = weekNum => moment().day(0).week(weekNum).format('D');\n\n  const saturday = weekNum => moment().day(6).week(weekNum).format('D MMM');\n\n  return `${sunday(weekNum)} - ${saturday(weekNum)}`;\n}\nexport function checkMonth(d) {\n  const fistday = moment().startOf('month');\n  const lastday = moment().endOf('month');\n  const date = moment(d);\n  const range = moment().range(fistday, lastday);\n  if (date.within(range)) return true;\n  return false;\n}\nexport function checkYear(d) {\n  const fistday = moment().startOf('year');\n  const lastday = moment().endOf('year');\n  const date = moment(d);\n  const range = moment().range(fistday, lastday);\n  if (date.within(range)) return true;\n  return false;\n}\nexport function sortDateDsc(a, b) {\n  let dateA = new Date(a.date);\n  let dateB = new Date(b.date);\n  if (dateA < dateB) return 1;\n  if (dateA > dateB) return -1;\n  return 0;\n}\nexport function sortDateAsc(a, b) {\n  let dateA = new Date(a.date);\n  let dateB = new Date(b.date);\n  if (dateA < dateB) return -1;\n  if (dateA > dateB) return 1;\n  return 0;\n}\nexport function sortAmountDsc(a, b) {\n  if (a < b) return 1;\n  if (a > b) return -1;\n  return 0;\n}\nexport function sortAmountAsc(a, b) {\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n}","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/utils/calculation.js"],"names":["Moment","extendMoment","moment","getGreeting","d","hour","checkDayTime","checkDay","start","startOf","end","endOf","date","range","within","checkWeek","sunday","saturday","getWeekDate","weekNum","day","week","format","checkMonth","fistday","lastday","checkYear","sortDateDsc","a","b","dateA","Date","dateB","sortDateAsc","sortAmountDsc","sortAmountAsc"],"mappings":"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","sourcesContent":["import Moment from 'moment';\nimport { extendMoment } from 'moment-range';\n\nconst moment = extendMoment(Moment);\n\nexport function getGreeting(d) {\n  const hour = moment(d).hour();\n  if (hour < 4) return 'night';\n  if (hour < 13) return 'morning';\n  if (hour < 18) return 'afternoon';\n  if (hour < 24) return 'evening';\n  return 'day';\n}\n\nexport function checkDayTime(d) {\n  const hour = moment(d).hour();\n  if (hour > 3 && hour < 18) return true;\n  return false;\n}\n\nexport function checkDay(d) {\n  const start = moment().startOf('day');\n  const end = moment().endOf('day');\n  const date = moment(d);\n  const range = moment().range(start, end);\n\n  if (date.within(range)) return true;\n  return false;\n}\n\nexport function checkWeek(d) {\n  const sunday = moment().startOf('week');\n  const saturday = moment().endOf('week');\n  const date = moment(d);\n  const range = moment().range(sunday, saturday);\n\n  if (date.within(range)) return true;\n  return false;\n}\n\nexport function getWeekDate(weekNum) {\n  const sunday = (weekNum) => moment().day(0).week(weekNum).format('D');\n  const saturday = (weekNum) => moment().day(6).week(weekNum).format('D MMM');\n  return `${sunday(weekNum)} - ${saturday(weekNum)}`;\n}\n\nexport function checkMonth(d) {\n  const fistday = moment().startOf('month');\n  const lastday = moment().endOf('month');\n  const date = moment(d);\n  const range = moment().range(fistday, lastday);\n\n  if (date.within(range)) return true;\n  return false;\n}\n\nexport function checkYear(d) {\n  const fistday = moment().startOf('year');\n  const lastday = moment().endOf('year');\n  const date = moment(d);\n  const range = moment().range(fistday, lastday);\n\n  if (date.within(range)) return true;\n  return false;\n}\n\nexport function sortDateDsc(a, b) {\n  let dateA = new Date(a.date);\n  let dateB = new Date(b.date);\n  \n  if (dateA < dateB) return 1;\n  if (dateA > dateB) return -1;\n  return 0;\n}\n\nexport function sortDateAsc(a, b) {\n  let dateA = new Date(a.date);\n  let dateB = new Date(b.date);\n  \n  if (dateA < dateB) return -1;\n  if (dateA > dateB) return 1;\n  return 0;\n}\n\nexport function sortAmountDsc(a, b) {\n  if (a < b) return 1;\n  if (a > b) return -1;\n  return 0;\n}\n\nexport function sortAmountAsc(a, b) {\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n}"]},"metadata":{},"sourceType":"module"}