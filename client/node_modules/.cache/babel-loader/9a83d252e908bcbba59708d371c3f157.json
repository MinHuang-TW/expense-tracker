{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport 'moment';\nimport { extendMoment } from 'moment-range';\nimport { GlobalContext } from '../context/GlobalState';\nimport { newDateArr, dbDateArr, checkWeek, sortDateDsc, sortDateAsc, sortAmountDsc, sortAmountAsc } from '../utils/format';\nimport { checkWeekRange } from '../utils/calculation';\nimport ReportOverview from './ReportOverview';\nimport Transaction from './Transaction';\nimport TransactionFilter from './common/TransactionFilter';\nimport { Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\nimport { whiteTheme } from '../utils/colorTheme.js';\nimport { ThemeProvider } from \"@material-ui/styles\";\nconst moment = extendMoment(Moment);\n\nconst Report = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all');\n  const [sortColumn, setSortColum] = useState('date');\n  const [sortLatest, setSortLatest] = useState(true);\n  const [sortDsc, setSortDsc] = useState(true);\n  const timeFilters = ['day', 'week', 'month', 'year'];\n  const transFilters = ['all', 'income', 'expense'];\n  const date = newDateArr(new Date());\n  const amounts = [];\n  let counter = 0;\n  const timebar = {\n    color: 'white',\n    borderBottom: '1px solid rgba(255, 255, 255, 0.3)'\n  };\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: timebar,\n    className: \"plus-bg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    \"aria-label\": \"time selectors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, timeFilters.map((timeFilter, index) => React.createElement(Tab, {\n    key: timeFilter,\n    label: timeFilter,\n    onClick: () => setValue(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })))), React.createElement(ReportOverview, {\n    selected: selected,\n    timeFilters: timeFilters,\n    value: value,\n    amounts: amounts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(ThemeProvider, {\n    theme: whiteTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    fullWidth: true,\n    disableRipple: true,\n    color: \"primary\",\n    style: {\n      background: '#65BCBF',\n      borderRadius: 0\n    },\n    \"aria-label\": \"transaction amount filters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, transFilters.map(transFilter => React.createElement(Button, {\n    key: transFilter,\n    variant: selected === transFilter ? 'contained' : null,\n    color: selected === transFilter ? 'primary' : 'secondary',\n    onClick: () => setSelected(transFilter),\n    style: {\n      borderRadius: 0,\n      border: '1px solid rgba(255, 255, 255, 0.3)'\n    },\n    disableElevation: true,\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, transFilter)))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(TransactionFilter, {\n    value: value,\n    text: \"list of today\",\n    sortLatest: sortLatest,\n    sortDsc: sortDsc,\n    handleSortDate: () => {\n      setSortLatest(!sortLatest);\n      setSortColum('date');\n    },\n    handleSortAmount: () => {\n      setSortDsc(!sortDsc);\n      setSortColum('amount');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, transactions.filter(transaction => {\n    const data = dbDateArr(transaction.date);\n\n    if (value === 0) {\n      return data[2] === date[2] && data[1] === date[1] && data[0] === date[0];\n    }\n\n    if (value === 1) {\n      console.log(moment().toArray().slice(0, 3));\n      return checkWeekRange(transaction.date);\n    }\n\n    if (value === 2) {\n      return data[1] === date[1] && data[0] === date[0];\n    }\n\n    if (value === 3) {\n      return data[0] === date[0];\n    }\n\n    return transaction;\n  }).filter(transaction => {\n    amounts.push(transaction.amount);\n\n    switch (selected) {\n      case 'income':\n        return transaction.amount > 0;\n\n      case 'expense':\n        return transaction.amount < 0;\n\n      default:\n        return transaction;\n    }\n  }).sort((a, b) => {\n    if (sortColumn === 'date') {\n      return sortLatest ? sortDateDsc(a, b) : sortDateAsc(a, b);\n    }\n\n    return sortDsc ? sortAmountDsc(a, b) : sortAmountAsc(a, b);\n  }).map(transaction => {\n    counter++;\n    return React.createElement(Transaction, {\n      key: transaction._id,\n      transaction: transaction,\n      date: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    });\n  }), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"No \", selected !== 'all' && selected, \" transaction\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), \"of this \", timeFilters[value])) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }) : 'No transaction')));\n};\n\nexport default Report;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx"],"names":["React","Fragment","useState","useEffect","useContext","extendMoment","GlobalContext","newDateArr","dbDateArr","checkWeek","sortDateDsc","sortDateAsc","sortAmountDsc","sortAmountAsc","checkWeekRange","ReportOverview","Transaction","TransactionFilter","Tabs","Tab","Button","ButtonGroup","CircularProgress","whiteTheme","ThemeProvider","moment","Moment","Report","loading","transactions","getTransactions","value","setValue","selected","setSelected","sortColumn","setSortColum","sortLatest","setSortLatest","sortDsc","setSortDsc","timeFilters","transFilters","date","Date","amounts","counter","timebar","color","borderBottom","map","timeFilter","index","background","borderRadius","transFilter","border","length","filter","transaction","data","console","log","toArray","slice","push","amount","sort","a","b","_id"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport 'moment';\nimport { extendMoment } from 'moment-range';\nimport { GlobalContext } from '../context/GlobalState';\nimport { newDateArr, dbDateArr, checkWeek, sortDateDsc, sortDateAsc, sortAmountDsc, sortAmountAsc } from '../utils/format';\nimport { checkWeekRange } from '../utils/calculation';\nimport ReportOverview from './ReportOverview';\nimport Transaction from './Transaction';\nimport TransactionFilter from './common/TransactionFilter';\nimport { Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\nimport { whiteTheme } from '../utils/colorTheme.js';\nimport { ThemeProvider } from \"@material-ui/styles\";\nconst moment = extendMoment(Moment);\nconst Report = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all');\n  const [sortColumn, setSortColum] = useState('date');\n  const [sortLatest, setSortLatest] = useState(true);\n  const [sortDsc, setSortDsc] = useState(true);\n\n  const timeFilters = ['day', 'week', 'month', 'year'];\n  const transFilters = ['all', 'income', 'expense'];\n  \n  const date = newDateArr(new Date());\n  const amounts = [];\n  let counter = 0;\n\n  const timebar = { \n    color: 'white',\n    borderBottom: '1px solid rgba(255, 255, 255, 0.3)',\n  }\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n\n  return (\n    <Fragment>\n      <div style={timebar} className='plus-bg'>\n        <Tabs value={value} variant=\"fullWidth\" aria-label=\"time selectors\">\n          {timeFilters.map((timeFilter, index) => \n            <Tab \n              key={timeFilter} label={timeFilter} \n              onClick={() => setValue(index)} \n              disableFocusRipple disableRipple\n            />\n          )}\n        </Tabs>\n      </div>\n\n      <ReportOverview \n        selected={selected} \n        timeFilters={timeFilters} \n        value={value} \n        amounts={amounts}\n      />\n      \n      <ThemeProvider theme={whiteTheme}>\n        <ButtonGroup\n          fullWidth disableRipple\n          color='primary'\n          style={{ background: '#65BCBF', borderRadius: 0 }}\n          aria-label='transaction amount filters'\n        >\n          {transFilters.map(transFilter => (\n            <Button\n              key={transFilter}\n              variant={selected === transFilter ? 'contained' : null}\n              color={selected === transFilter ? 'primary' : 'secondary'}\n              onClick={() => setSelected(transFilter)}\n              style={{ borderRadius: 0, border: '1px solid rgba(255, 255, 255, 0.3)' }}\n              disableElevation disableFocusRipple disableRipple\n            >\n              {transFilter}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </ThemeProvider>\n\n      <div className='container'>\n\n        <TransactionFilter\n          value={value}\n          text=\"list of today\"\n          sortLatest={sortLatest}\n          sortDsc={sortDsc}\n          handleSortDate={() => {\n            setSortLatest(!sortLatest); setSortColum('date')\n          }}\n          handleSortAmount={() => {\n            setSortDsc(!sortDsc); setSortColum('amount')\n          }}\n        />\n\n        {transactions.length > 0 ? (\n          <ul className='list'>\n            {transactions\n              .filter(transaction => {\n                const data = dbDateArr(transaction.date);\n\n                if (value === 0) {\n                  return data[2] === date[2] \n                    && data[1] === date[1] \n                    && data[0] === date[0];\n                }\n                if (value === 1) {\n                  console.log(moment().toArray().slice(0, 3))\n                  return checkWeekRange(transaction.date);\n                }\n                if (value === 2) {\n                  return data[1] === date[1] \n                    && data[0] === date[0];\n                }\n                if (value === 3) {\n                  return data[0] === date[0];\n                }\n                return transaction;\n              })\n              .filter(transaction => {\n                amounts.push(transaction.amount);\n                switch (selected) {\n                  case 'income':\n                    return transaction.amount > 0;\n                  case 'expense':\n                    return transaction.amount < 0;\n                  default:\n                    return transaction;\n                }\n              })\n              .sort((a, b) => {\n                if (sortColumn === 'date') {\n                  return sortLatest ? sortDateDsc(a, b) : sortDateAsc(a, b);\n                }\n                return sortDsc ? sortAmountDsc(a, b) : sortAmountAsc(a, b);\n              })\n              .map(transaction => {\n                counter++;\n                return (\n                  <Transaction \n                    key={transaction._id} \n                    transaction={transaction}\n                    date\n                  />\n                );\n              })}\n            {counter === 0 && (\n              <div className='list-status'>\n                No {selected !== 'all' && selected} transaction<br/>\n                of this {timeFilters[value]}\n              </div>\n            )}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? <CircularProgress color='primary'/>\n              : 'No transaction'}\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Report;"]},"metadata":{},"sourceType":"module"}