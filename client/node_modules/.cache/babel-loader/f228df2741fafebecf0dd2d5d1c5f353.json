{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/AddTransaction.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  root: {\n    '& > *': {\n      width: '80vw'\n    }\n  }\n}));\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n});\n\nconst AddTransaction = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(null);\n  const {\n    addTransaction\n  } = useContext(GlobalContext);\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount\n    };\n    addTransaction(newTransaction);\n    setOpen(false);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Add New Transaction\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: handleClose,\n    \"aria-label\": \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Add New Transaction\"))), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    style: {\n      textAlign: 'center',\n      marginTop: '30px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Description\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Amount\",\n    value: amount,\n    onChange: e => setAmount(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    style: {\n      backgroundColor: '#00bcd4',\n      color: '#fff',\n      border: 0,\n      // display: block;\n      fontSize: '16px',\n      padding: '15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Confirm\")))));\n};\n\nexport default AddTransaction;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/AddTransaction.jsx"],"names":["React","useState","useContext","GlobalContext","makeStyles","Button","Dialog","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","TextField","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","root","width","Transition","forwardRef","props","ref","AddTransaction","text","setText","amount","setAmount","addTransaction","classes","open","setOpen","handleClickOpen","handleClose","onSubmit","e","preventDefault","newTransaction","id","Math","floor","random","textAlign","marginTop","target","value","backgroundColor","color","border","fontSize","padding"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  root: {\n    '& > *': {\n      width: '80vw',\n    },\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst AddTransaction = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(null);\n  const { addTransaction } = useContext(GlobalContext);\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount\n    };\n    addTransaction(newTransaction);\n\n    setOpen(false);\n  };\n\n  return (\n    <>\n      {/* <p>Add New Transaction</p> */}\n      {/* <form onSubmit={onSubmit}>\n        <div className='form-control'>\n          <label htmlFor='text'>Transaction</label>\n          <input\n            type='text'\n            value={text}\n            onChange={e => setText(e.target.value)}\n            placeholder='Enter...'\n          />\n        </div>\n        <div className='form-control'>\n          <label htmlFor='amount'>\n            Amount\n            <br />\n            (positive - income, negative - expense)\n          </label>\n          <input\n            type='number'\n            value={amount}\n            onChange={e => setAmount(e.target.value)}\n            placeholder='Enter amount...'\n          />\n        </div>\n        <button className='btn'>Add transaction</button>\n      </form> */}\n      <button className='btn' onClick={handleClickOpen}>\n        Add New Transaction\n      </button>\n      \n      <div>\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                Add New Transaction\n              </Typography>\n              {/* <Button autoFocus color=\"inherit\" onClick={onSubmit}>\n                save\n              </Button> */}\n            </Toolbar>\n          </AppBar>\n\n          <form \n            onSubmit={onSubmit}\n            className={classes.root} \n            noValidate autoComplete=\"off\"\n            style={{ textAlign: 'center', marginTop: '30px' }}\n          >\n            <TextField \n              id=\"standard-basic\" \n              label=\"Description\" \n              value={text} \n              onChange={e => setText(e.target.value)}\n            />\n            <TextField \n              id=\"standard-basic\" \n              label=\"Amount\" \n              value={amount} \n              onChange={e => setAmount(e.target.value)} \n            />\n            {/* <div className='form-control'>\n              <label htmlFor='text'>Transaction</label>\n              <input\n                type='text'\n                value={text}\n                onChange={e => setText(e.target.value)}\n                placeholder='Enter...'\n              />\n            </div>\n            <div className='form-control'>\n              <label htmlFor='amount'>\n                Amount\n                <br />\n                (positive - income, negative - expense)\n              </label>\n              <input\n                type='number'\n                value={amount}\n                onChange={e => setAmount(e.target.value)}\n                placeholder='Enter amount...'\n              />\n            </div> */}\n            <button style={{\n              backgroundColor: '#00bcd4',\n              color: '#fff',\n              border: 0,\n              // display: block;\n              fontSize: '16px',\n              padding: '15px'\n            }}>\n              Confirm\n            </button>\n          </form>\n\n        </Dialog>\n      </div>\n    </>\n  );\n};\n\nexport default AddTransaction;\n"]},"metadata":{},"sourceType":"module"}