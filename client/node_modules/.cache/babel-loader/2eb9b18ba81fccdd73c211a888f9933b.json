{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { sortDateDescending } from '../utils/format';\nimport Transaction from './Transaction';\nimport { Button, ButtonGroup, CircularProgress } from '@material-ui/core';\n\nconst TransactionList = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [progress, setProgress] = useState(0);\n  const transFilters = ['all', 'income', 'expense'];\n  let counter = 0;\n  useEffect(() => {\n    const tick = () => {\n      setProgress(oldProgress => oldProgress >= 100 ? 0 : oldProgress + 1);\n    };\n\n    const timer = setInterval(tick, 20);\n    getTransactions();\n    if (loading) clearInterval(timer);\n    return () => {\n      clearInterval(timer);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    fullWidth: true,\n    disableRipple: true,\n    color: \"primary\",\n    \"aria-label\": \"outlined primary button group\",\n    style: {\n      marginBottom: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, transFilters.map(transFilter => React.createElement(Button, {\n    key: transFilter,\n    style: {\n      borderRadius: 0\n    },\n    disableElevation: true,\n    disableFocusRipple: true,\n    disableRipple: true,\n    variant: selected === transFilter ? 'contained' : null,\n    color: selected === transFilter ? 'primary' : null,\n    onClick: () => setSelected(transFilter),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, transFilter))), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, transactions.filter(transaction => {\n    switch (selected) {\n      case 'income':\n        return transaction.amount > 0;\n\n      case 'expense':\n        return transaction.amount < 0;\n\n      default:\n        return transaction;\n    }\n  }).sort((a, b) => sortDateDescending(a, b)).map(transaction => {\n    counter++;\n    return React.createElement(Transaction, {\n      key: transaction._id,\n      transaction: transaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n  }), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"No \", selected, \" transaction\")) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    variant: \"determinate\",\n    value: progress,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }) : 'No transaction'));\n};\n\nexport default TransactionList;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx"],"names":["React","useState","useContext","useEffect","GlobalContext","sortDateDescending","Transaction","Button","ButtonGroup","CircularProgress","TransactionList","loading","transactions","getTransactions","selected","setSelected","progress","setProgress","transFilters","counter","tick","oldProgress","timer","setInterval","clearInterval","marginBottom","map","transFilter","borderRadius","length","filter","transaction","amount","sort","a","b","_id"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { sortDateDescending } from '../utils/format';\nimport Transaction from './Transaction';\nimport { Button, ButtonGroup, CircularProgress } from '@material-ui/core';\n\nconst TransactionList = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [progress, setProgress] = useState(0);\n\n  const transFilters = ['all', 'income', 'expense'];\n  let counter = 0;\n\n  useEffect(() => {\n    const tick = () => {\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\n    };\n    const timer = setInterval(tick, 20);\n\n    getTransactions();\n\n    if (loading) clearInterval(timer);\n\n    return () => {\n      clearInterval(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className='container'>\n      <ButtonGroup\n        fullWidth disableRipple\n        color='primary'\n        aria-label='outlined primary button group'\n        style={{ marginBottom: '10px' }}\n      >\n        {transFilters.map(transFilter => (\n          <Button\n            key={transFilter}\n            style={{ borderRadius: 0 }}\n            disableElevation disableFocusRipple disableRipple\n            variant={selected === transFilter ? 'contained' : null}\n            color={selected === transFilter ? 'primary' : null}\n            onClick={() => setSelected(transFilter)}\n          >\n            {transFilter}\n          </Button>\n        ))}\n      </ButtonGroup>\n\n      {transactions.length > 0 ? (\n        <ul className='list'>\n          {transactions\n            .filter(transaction => {\n              switch (selected) {\n                case 'income':\n                  return transaction.amount > 0;\n                case 'expense':\n                  return transaction.amount < 0;\n                default:\n                  return transaction;\n              }\n            })\n            .sort((a, b) => sortDateDescending(a, b))\n            .map(transaction => {\n              counter++;\n              return (\n                <Transaction key={transaction._id} transaction={transaction} />\n              );\n            })}\n          {counter === 0 && (\n            <div className='list-status'>No {selected} transaction</div>\n          )}\n        </ul>\n      ) : (\n        <div className='list-status'>\n          {loading \n            ? <CircularProgress variant='determinate' value={progress} color='secondary'/>\n            : 'No transaction'}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TransactionList;\n"]},"metadata":{},"sourceType":"module"}