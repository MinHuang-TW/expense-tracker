{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { sortDateDsc } from '../utils/format';\nimport TransactionFilter from './common/TransactionFilter';\nimport Transaction from './Transaction';\nimport { Button, ButtonGroup, CircularProgress, Typography } from '@material-ui/core';\n\nconst TransactionList = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [sortDsc, setSortDsc] = useState(true);\n  const transFilters = ['all', 'income', 'expense'];\n  let counter = 0;\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(TransactionFilter, {\n    value: 0,\n    sortDsc: sortDsc,\n    handleSortAmount: () => {\n      setSortDsc(!sortDsc);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, transactions // .filter(transaction => {\n  //   switch (selected) {\n  //     case 'income':\n  //       return transaction.amount > 0;\n  //     case 'expense':\n  //       return transaction.amount < 0;\n  //     default:\n  //       return transaction;\n  //   }\n  // })\n  .sort((a, b) => sortDateDsc(a, b)).map(transaction => {\n    counter++;\n    return React.createElement(Transaction, {\n      key: transaction._id,\n      transaction: transaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"No \", selected, \" transaction\")) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }) : 'No transaction'));\n};\n\nexport default TransactionList;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx"],"names":["React","useState","useContext","useEffect","GlobalContext","sortDateDsc","TransactionFilter","Transaction","Button","ButtonGroup","CircularProgress","Typography","TransactionList","loading","transactions","getTransactions","selected","setSelected","sortDsc","setSortDsc","transFilters","counter","length","sort","a","b","map","transaction","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,gBAA9B,EAAgDC,UAAhD,QAAkE,mBAAlE;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAA6Cb,UAAU,CAACE,aAAD,CAA7D;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMmB,YAAY,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,SAAlB,CAArB;AACA,MAAIC,OAAO,GAAG,CAAd;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,eAAe,GADD,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CADT;AAEE,IAAA,OAAO,EAAEG,OAFX;AAGE,IAAA,gBAAgB,EAAE,MAAM;AACtBC,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EA4BGJ,YAAY,CAACQ,MAAb,GAAsB,CAAtB,GACC;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,YAAY,CACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVW,GAWVS,IAXF,CAWO,CAACC,CAAD,EAAIC,CAAJ,KAAUpB,WAAW,CAACmB,CAAD,EAAIC,CAAJ,CAX5B,EAYEC,GAZF,CAYMC,WAAW,IAAI;AAClBN,IAAAA,OAAO;AACP,WACE,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEM,WAAW,CAACC,GAA9B;AAAmC,MAAA,WAAW,EAAED,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAjBF,CADH,EAmBGN,OAAO,KAAK,CAAZ,IACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiCL,QAAjC,iBApBJ,CADD,GAyBC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,GACJ,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,GAEJ,gBAHN,CArDJ,CADF;AA8DD,CA3ED;;AA6EA,eAAeD,eAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { sortDateDsc } from '../utils/format';\nimport TransactionFilter from './common/TransactionFilter';\nimport Transaction from './Transaction';\nimport { Button, ButtonGroup, CircularProgress, Typography } from '@material-ui/core';\n\nconst TransactionList = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [sortDsc, setSortDsc] = useState(true);\n\n  const transFilters = ['all', 'income', 'expense'];\n  let counter = 0;\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className='container'>\n      <TransactionFilter \n        value={0} \n        sortDsc={sortDsc} \n        handleSortAmount={() => {\n          setSortDsc(!sortDsc)\n        }} \n      />\n      {/* <ButtonGroup\n        fullWidth disableRipple\n        color='primary'\n        aria-label='outlined primary button group'\n        style={{ marginBottom: '10px' }}\n      >\n        {transFilters.map(transFilter => (\n          <Button\n            key={transFilter}\n            style={{ borderRadius: 0 }}\n            disableElevation disableFocusRipple disableRipple\n            variant={selected === transFilter ? 'contained' : null}\n            color={selected === transFilter ? 'primary' : null}\n            onClick={() => setSelected(transFilter)}\n          >\n            {transFilter}\n          </Button>\n        ))}\n      </ButtonGroup> */}\n\n      {transactions.length > 0 ? (\n        <ul className='list'>\n          {transactions\n            // .filter(transaction => {\n            //   switch (selected) {\n            //     case 'income':\n            //       return transaction.amount > 0;\n            //     case 'expense':\n            //       return transaction.amount < 0;\n            //     default:\n            //       return transaction;\n            //   }\n            // })\n            .sort((a, b) => sortDateDsc(a, b))\n            .map(transaction => {\n              counter++;\n              return (\n                <Transaction key={transaction._id} transaction={transaction} />\n              );\n            })}\n          {counter === 0 && (\n            <div className='list-status'>No {selected} transaction</div>\n          )}\n        </ul>\n      ) : (\n        <div className='list-status'>\n          {loading \n            ? <CircularProgress color='primary'/>\n            : 'No transaction'}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TransactionList;\n"]},"metadata":{},"sourceType":"module"}