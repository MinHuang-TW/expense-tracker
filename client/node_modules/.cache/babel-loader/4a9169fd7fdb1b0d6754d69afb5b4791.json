{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkDate, checkWeek, sortDateDescending } from '../utils/format';\nimport Total from './common/Total';\nimport Transaction from './Transaction';\nimport { Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\n\nconst Report = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all');\n  const timeFilters = ['day', 'week', 'month', 'year'];\n  const date = checkDate(new Date());\n\n  const dateArr = data => data.slice(0, 10).split('-');\n\n  const transFilters = ['all', 'income', 'expense'];\n  const amounts = [];\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      background: '#65bcbf',\n      color: 'white',\n      borderBottom: '1px solid  rgba(255, 255, 255, 0.3)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    indicatorColor: \"secondary\",\n    \"aria-label\": \"disabled tabs example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, timeFilters.map((timeFilter, index) => React.createElement(Tab, {\n    key: timeFilter,\n    label: timeFilter,\n    onClick: () => setValue(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })))), React.createElement(Total, {\n    text: `${timeFilters[value]}ly balance`,\n    amounts: amounts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    fullWidth: true,\n    disableRipple: true,\n    color: \"primary\",\n    \"aria-label\": \"outlined primary button group\",\n    style: {\n      marginBottom: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, transFilters.map(transFilter => React.createElement(Button, {\n    key: transFilter,\n    style: {\n      borderRadius: 0\n    },\n    disableElevation: true,\n    disableFocusRipple: true,\n    disableRipple: true,\n    variant: selected === transFilter ? 'contained' : null,\n    color: selected === transFilter ? 'primary' : null,\n    onClick: () => setSelected(transFilter),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, transFilter))), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, transactions.filter(transaction => {\n    const data = dateArr(transaction.date);\n    if (value === 0) return data[2] === date[2];\n    if (value === 1) return checkWeek(transaction.date);\n    if (value === 2) return data[1] === date[1];\n    if (value === 3) return data[0] === date[0];\n    return transaction;\n  }).filter(transaction => {\n    amounts.push(transaction.amount);\n\n    switch (selected) {\n      case 'income':\n        return transaction.amount > 0;\n\n      case 'expense':\n        return transaction.amount < 0;\n\n      default:\n        return transaction;\n    }\n  }).sort((a, b) => sortDateDescending(a, b)).map(transaction => {\n    return React.createElement(Transaction, {\n      key: transaction._id,\n      transaction: transaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    });\n  }), amounts.length === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"No \", selected !== 'all' && selected, \" transaction of the \", timeFilters[value])) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }) : 'No transaction')));\n};\n\nexport default Report;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx"],"names":["React","Fragment","useState","useEffect","useContext","GlobalContext","checkDate","checkWeek","sortDateDescending","Total","Transaction","Tabs","Tab","Button","ButtonGroup","CircularProgress","Report","loading","transactions","getTransactions","value","setValue","selected","setSelected","timeFilters","date","Date","dateArr","data","slice","split","transFilters","amounts","background","color","borderBottom","map","timeFilter","index","marginBottom","transFilter","borderRadius","length","filter","transaction","push","amount","sort","a","b","_id"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkDate, checkWeek, sortDateDescending } from '../utils/format';\nimport Total from './common/Total';\nimport Transaction from './Transaction';\nimport { Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\n\nconst Report = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all');\n\n  const timeFilters = ['day', 'week', 'month', 'year'];\n  const date = checkDate(new Date());\n  const dateArr = data => data.slice(0, 10).split('-');\n\n  const transFilters = ['all', 'income', 'expense'];\n  const amounts = [];\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n\n  return (\n    <Fragment>\n      <div style={{ \n        background: '#65bcbf', color: 'white',\n        borderBottom: '1px solid  rgba(255, 255, 255, 0.3)' \n      }}>\n        <Tabs\n          value={value} variant='fullWidth'\n          indicatorColor=\"secondary\"\n          aria-label=\"disabled tabs example\"\n        >\n          {timeFilters.map((timeFilter, index) => \n            <Tab \n              key={timeFilter} label={timeFilter} \n              onClick={() => setValue(index)} \n              disableFocusRipple disableRipple\n            />\n          )}\n        </Tabs>\n      </div>\n\n      <Total text={`${timeFilters[value]}ly balance`} amounts={amounts} />\n\n      <div className='container'>\n        <ButtonGroup\n          fullWidth disableRipple\n          color='primary'\n          aria-label='outlined primary button group'\n          style={{ marginBottom: '10px' }}\n        >\n          {transFilters.map(transFilter => (\n            <Button\n              key={transFilter}\n              style={{ borderRadius: 0 }}\n              disableElevation disableFocusRipple disableRipple\n              variant={selected === transFilter ? 'contained' : null}\n              color={selected === transFilter ? 'primary' : null}\n              onClick={() => setSelected(transFilter)}\n            >\n              {transFilter}\n            </Button>\n          ))}\n        </ButtonGroup>\n\n        {transactions.length > 0 ? (\n          <ul className='list'>\n            {transactions\n              .filter(transaction => {\n                const data = dateArr(transaction.date);\n                if (value === 0) return data[2] === date[2];\n                if (value === 1) return checkWeek(transaction.date);\n                if (value === 2) return data[1] === date[1];\n                if (value === 3) return data[0] === date[0];\n                return transaction;\n              })\n              .filter(transaction => {\n                amounts.push(transaction.amount);\n                switch (selected) {\n                  case 'income':\n                    return transaction.amount > 0;\n                  case 'expense':\n                    return transaction.amount < 0;\n                  default:\n                    return transaction;\n                }\n              })\n              .sort((a, b) => sortDateDescending(a, b))\n              .map(transaction => {\n                return (\n                  <Transaction key={transaction._id} transaction={transaction} />\n                );\n              })}\n            {amounts.length === 0 && (\n              <div className='list-status'>\n                No {selected !== 'all' && selected} transaction\n                of the {timeFilters[value]}\n              </div>\n            )}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? <CircularProgress color='primary'/>\n              : 'No transaction'}\n          </div>\n        )}\n      </div>\n\n\n    </Fragment>\n  );\n}\n\nexport default Report;"]},"metadata":{},"sourceType":"module"}