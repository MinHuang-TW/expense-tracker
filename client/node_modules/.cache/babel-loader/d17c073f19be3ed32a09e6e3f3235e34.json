{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/common/BarChart.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport moment from 'moment';\nimport * as d3 from 'd3';\n\nconst BarChart = ({\n  data,\n  keys,\n  select,\n  width,\n  height\n}) => {\n  const ref = useRef(null);\n  const colorList = {\n    income: '#fff',\n    expense: '#f8777d'\n  };\n  const dayList = moment.weekdays();\n  const monthList = moment.months();\n  const weekList = [];\n  const monthRange = moment.range(moment().startOf('month'), moment().endOf('month'));\n\n  for (let mday of monthRange.by('days')) {\n    if (weekList.indexOf(mday.week()) === -1) {\n      weekList.push('Week ' + mday.week());\n    }\n  }\n\n  data.forEach(data => data['expense'] = Math.abs(data['expense']));\n  useEffect(() => {\n    const group = d3.select(ref.current);\n    const labels = select === 0 ? dayList : select === 1 ? weekList : monthList;\n    const stackGenerator = d3.stack().keys(keys).order(d3.stackOrderReverse);\n    const layers = stackGenerator(data);\n    console.log(layers);\n    const extent = [0, d3.max(layers, layer => d3.max(layer, seq => Math.abs(seq[1])))];\n    const yScale = d3.scaleLinear().domain(extent).range([height, 0]);\n    const xScale = d3.scaleBand().domain(labels).range([0, width]);\n    const xAxis = d3.axisBottom(xScale).tickFormat(d => select === 1 ? d : d.slice(0, 3)).tickSize(0);\n    group.select('.x-axis').style('transform', `translateY(${height}px)`).style('color', 'white').call(xAxis).call(g => g.select('.domain').remove()).selectAll('.x-axis .tick text').attr('dy', '1em');\n    group.selectAll('.layer').data(layers).join('g').attr('class', 'layer').attr('fill', layer => colorList[layer.key]).selectAll('rect').data(layer => layer).join('rect').attr('x', seq => xScale.bandwidth() / 2 - 3 + xScale(seq.data.text)).attr('width', 6).attr('y', height).attr('height', 0).transition().duration(1000).attr('y', seq => yScale(seq[1])).attr('height', seq => yScale(seq[0]) - yScale(seq[1])); // eslint-disable-next-line\n  }, [data]);\n  return React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    ref: ref,\n    style: {\n      margin: 'auto',\n      overflow: 'visible'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n};\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/common/BarChart.jsx"],"names":["React","useEffect","useRef","moment","d3","BarChart","data","keys","select","width","height","ref","colorList","income","expense","dayList","weekdays","monthList","months","weekList","monthRange","range","startOf","endOf","mday","by","indexOf","week","push","forEach","Math","abs","group","current","labels","stackGenerator","stack","order","stackOrderReverse","layers","console","log","extent","max","layer","seq","yScale","scaleLinear","domain","xScale","scaleBand","xAxis","axisBottom","tickFormat","d","slice","tickSize","style","call","g","remove","selectAll","attr","join","key","bandwidth","text","transition","duration","margin","overflow"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport moment from 'moment';\nimport * as d3 from 'd3';\n\nconst BarChart = ({ data, keys, select, width, height }) => {\n  const ref = useRef(null);\n  const colorList = { income: '#fff', expense: '#f8777d' };\n  const dayList = moment.weekdays();\n  const monthList = moment.months();\n  const weekList = [];\n  const monthRange = moment.range(\n    moment().startOf('month'),\n    moment().endOf('month')\n  );\n  for (let mday of monthRange.by('days')) {\n    if (weekList.indexOf(mday.week()) === -1) {\n      weekList.push('Week ' + mday.week());\n    }\n  }\n  data.forEach((data) => (data['expense'] = Math.abs(data['expense'])));\n\n  useEffect(() => {\n    const group = d3.select(ref.current);\n    const labels = select === 0 ? dayList : select === 1 ? weekList : monthList;\n    const stackGenerator = d3.stack().keys(keys).order(d3.stackOrderReverse);\n    const layers = stackGenerator(data);\n    console.log(layers);\n    const extent = [\n      0,\n      d3.max(layers, (layer) => d3.max(layer, (seq) => Math.abs(seq[1]))),\n    ];\n\n    const yScale = d3.scaleLinear().domain(extent).range([height, 0]);\n    const xScale = d3.scaleBand().domain(labels).range([0, width]);\n    const xAxis = d3\n      .axisBottom(xScale)\n      .tickFormat((d) => (select === 1 ? d : d.slice(0, 3)))\n      .tickSize(0);\n\n    group\n      .select('.x-axis')\n      .style('transform', `translateY(${height}px)`)\n      .style('color', 'white')\n      .call(xAxis)\n      .call((g) => g.select('.domain').remove())\n      .selectAll('.x-axis .tick text')\n      .attr('dy', '1em');\n\n    group\n      .selectAll('.layer')\n      .data(layers)\n      .join('g')\n      .attr('class', 'layer')\n      .attr('fill', (layer) => colorList[layer.key])\n      .selectAll('rect')\n      .data((layer) => layer)\n      .join('rect')\n      .attr('x', (seq) => xScale.bandwidth() / 2 - 3 + xScale(seq.data.text))\n      .attr('width', 6)\n      .attr('y', height)\n      .attr('height', 0)\n      .transition()\n      .duration(1000)\n      .attr('y', (seq) => yScale(seq[1]))\n      .attr('height', (seq) => yScale(seq[0]) - yScale(seq[1]));\n\n    // eslint-disable-next-line\n  }, [data]);\n\n  return (\n    <svg\n      width={width}\n      height={height}\n      ref={ref}\n      style={{ margin: 'auto', overflow: 'visible' }}\n    >\n      <g className='x-axis' />\n    </svg>\n  );\n};\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}