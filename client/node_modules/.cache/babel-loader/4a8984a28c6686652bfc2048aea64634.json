{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/common/PieChart.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst PieChart = ({\n  data: originalData,\n  width,\n  height,\n  outerRadius,\n  innerRadius,\n  timeFilters\n}) => {\n  const ref = useRef(null);\n  const cache = useRef(originalData);\n  const createPie = d3.pie().value(d => d);\n  const createArc = d3.arc().outerRadius(outerRadius).innerRadius(innerRadius);\n  const colors = ['rgba(255, 255, 255, 1)', 'rgba(255, 255, 255, 0.3)']; // const format = d3.format('.2f');\n\n  useEffect(() => {\n    const data = createPie(originalData);\n    const prevData = createPie(cache.current);\n    const group = d3.select(ref.current);\n    const groupWithData = group.selectAll('g.arc').data(data);\n    groupWithData.exit().remove();\n    const groupWithUpdate = groupWithData.enter().append('g').attr('class', 'arc');\n    const path = groupWithUpdate.append('path').merge(groupWithData.select('path.arc'));\n\n    const arcTween = (d, i) => {\n      const interpolator = d3.interpolate(prevData[i], d); // return t => createArc(interpolator(t));\n\n      return t => {\n        d = interpolator(t);\n        return createArc(d);\n      };\n    };\n\n    path.attr('class', 'arc').attr('d', createArc).attr('fill', (d, i) => colors[i]).transition().duration().attrTween('d', arcTween); // eslint-disable-next-line\n  }, [timeFilters, originalData]);\n  return React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    ref: ref,\n    transform: `translate(${outerRadius} ${outerRadius})`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};\n\nexport default PieChart;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/common/PieChart.jsx"],"names":["React","useEffect","useRef","d3","PieChart","data","originalData","width","height","outerRadius","innerRadius","timeFilters","ref","cache","createPie","pie","value","d","createArc","arc","colors","prevData","current","group","select","groupWithData","selectAll","exit","remove","groupWithUpdate","enter","append","attr","path","merge","arcTween","i","interpolator","interpolate","t","transition","duration","attrTween"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAGC,YAAT;AAAuBC,EAAAA,KAAvB;AAA8BC,EAAAA,MAA9B;AAAsCC,EAAAA,WAAtC;AAAmDC,EAAAA,WAAnD;AAAgEC,EAAAA;AAAhE,CAAD,KAAmF;AAClG,QAAMC,GAAG,GAAGV,MAAM,CAAC,IAAD,CAAlB;AACA,QAAMW,KAAK,GAAGX,MAAM,CAACI,YAAD,CAApB;AAEA,QAAMQ,SAAS,GAAGX,EAAE,CACjBY,GADe,GAEfC,KAFe,CAETC,CAAC,IAAIA,CAFI,CAAlB;AAIE,QAAMC,SAAS,GAAGf,EAAE,CACjBgB,GADe,GAEfV,WAFe,CAEHA,WAFG,EAGfC,WAHe,CAGHA,WAHG,CAAlB;AAKA,QAAMU,MAAM,GAAG,CACb,wBADa,EAEb,0BAFa,CAAf,CAbgG,CAiBhG;;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,IAAI,GAAGS,SAAS,CAACR,YAAD,CAAtB;AACA,UAAMe,QAAQ,GAAGP,SAAS,CAACD,KAAK,CAACS,OAAP,CAA1B;AACA,UAAMC,KAAK,GAAGpB,EAAE,CAACqB,MAAH,CAAUZ,GAAG,CAACU,OAAd,CAAd;AACA,UAAMG,aAAa,GAAGF,KAAK,CAACG,SAAN,CAAgB,OAAhB,EAAyBrB,IAAzB,CAA8BA,IAA9B,CAAtB;AAEAoB,IAAAA,aAAa,CAACE,IAAd,GAAqBC,MAArB;AAEA,UAAMC,eAAe,GAAGJ,aAAa,CAClCK,KADqB,GAErBC,MAFqB,CAEd,GAFc,EAGrBC,IAHqB,CAGhB,OAHgB,EAGP,KAHO,CAAxB;AAKA,UAAMC,IAAI,GAAGJ,eAAe,CACzBE,MADU,CACH,MADG,EAEVG,KAFU,CAEJT,aAAa,CAACD,MAAd,CAAqB,UAArB,CAFI,CAAb;;AAIA,UAAMW,QAAQ,GAAG,CAAClB,CAAD,EAAImB,CAAJ,KAAU;AACzB,YAAMC,YAAY,GAAGlC,EAAE,CAACmC,WAAH,CAAejB,QAAQ,CAACe,CAAD,CAAvB,EAA4BnB,CAA5B,CAArB,CADyB,CAEzB;;AACA,aAAOsB,CAAC,IAAI;AACVtB,QAAAA,CAAC,GAAGoB,YAAY,CAACE,CAAD,CAAhB;AACA,eAAOrB,SAAS,CAACD,CAAD,CAAhB;AACD,OAHD;AAID,KAPD;;AASAgB,IAAAA,IAAI,CACDD,IADH,CACQ,OADR,EACiB,KADjB,EAEGA,IAFH,CAEQ,GAFR,EAEad,SAFb,EAGGc,IAHH,CAGQ,MAHR,EAGgB,CAACf,CAAD,EAAImB,CAAJ,KAAUhB,MAAM,CAACgB,CAAD,CAHhC,EAIGI,UAJH,GAKGC,QALH,GAMGC,SANH,CAMa,GANb,EAMkBP,QANlB,EA1Bc,CAiChB;AACC,GAlCQ,EAkCN,CAACxB,WAAD,EAAcL,YAAd,CAlCM,CAAT;AAoCF,SACE;AAAK,IAAA,KAAK,EAAEC,KAAZ;AAAmB,IAAA,MAAM,EAAEC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,GAAG,EAAEI,GAAR;AAAa,IAAA,SAAS,EAAG,aAAYH,WAAY,IAAGA,WAAY,GAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA5DD;;AA8DA,eAAeL,QAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst PieChart = ({ data : originalData, width, height, outerRadius, innerRadius, timeFilters }) => {\n  const ref = useRef(null);\n  const cache = useRef(originalData);\n\n  const createPie = d3\n    .pie()\n    .value(d => d)\n  \n    const createArc = d3\n      .arc()\n      .outerRadius(outerRadius)\n      .innerRadius(innerRadius);\n\n    const colors = [\n      'rgba(255, 255, 255, 1)', \n      'rgba(255, 255, 255, 0.3)'\n    ];\n    // const format = d3.format('.2f');\n\n    useEffect(() => {\n      const data = createPie(originalData);\n      const prevData = createPie(cache.current);\n      const group = d3.select(ref.current);\n      const groupWithData = group.selectAll('g.arc').data(data);\n\n      groupWithData.exit().remove();\n\n      const groupWithUpdate = groupWithData\n        .enter()\n        .append('g')\n        .attr('class', 'arc');\n\n      const path = groupWithUpdate\n        .append('path')\n        .merge(groupWithData.select('path.arc'));\n\n      const arcTween = (d, i) => {\n        const interpolator = d3.interpolate(prevData[i], d);\n        // return t => createArc(interpolator(t));\n        return t => {\n          d = interpolator(t);\n          return createArc(d);\n        }\n      };\n\n      path\n        .attr('class', 'arc')\n        .attr('d', createArc)\n        .attr('fill', (d, i) => colors[i])\n        .transition()\n        .duration()\n        .attrTween('d', arcTween);\n    // eslint-disable-next-line\n    }, [timeFilters, originalData])\n    \n  return ( \n    <svg width={width} height={height}>\n      <g ref={ref} transform={`translate(${outerRadius} ${outerRadius})`} />\n    </svg>\n  );\n}\n\nexport default PieChart;"]},"metadata":{},"sourceType":"module"}