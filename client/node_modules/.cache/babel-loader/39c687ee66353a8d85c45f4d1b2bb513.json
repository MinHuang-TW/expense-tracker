{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkWeek, checkDay, checkMonth, checkYear, sortDateDsc, sortDateAsc, sortAmountDsc, sortAmountAsc } from '../utils/calculation';\nimport ReportOverview from './ReportOverview';\nimport Transaction from './common/Transaction';\nimport Filter from './common/Filter';\nimport { Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\nimport { whiteTheme } from '../utils/colorTheme.js';\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst Report = () => {\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all');\n  const [sortColumn, setSortColum] = useState('date');\n  const [sortLatest, setSortLatest] = useState(true);\n  const [sortDsc, setSortDsc] = useState(true);\n  const timeFilters = ['day', 'week', 'month', 'year'];\n  const transFilters = ['all', 'income', 'expense'];\n  const amounts = [];\n  let counter = 0;\n  const lists = transactions.filter(transaction => {\n    const date = transaction.date;\n    if (value === 0) return checkDay(date);\n    if (value === 1) return checkWeek(date);\n    if (value === 2) return checkMonth(date);\n    if (value === 3) return checkYear(date);\n    return transaction;\n  }).filter(transaction => {\n    amounts.push(transaction.amount);\n\n    switch (selected) {\n      case 'income':\n        return transaction.amount > 0;\n\n      case 'expense':\n        return transaction.amount < 0;\n\n      default:\n        return transaction;\n    }\n  }).sort((a, b) => {\n    if (sortColumn === 'date') {\n      return sortLatest ? sortDateDsc(a, b) : sortDateAsc(a, b);\n    }\n\n    return sortDsc ? sortAmountDsc(a, b) : sortAmountAsc(a, b);\n  });\n  useEffect(() => {\n    getTransactions(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"plus-bg time-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    \"aria-label\": \"time selectors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, timeFilters.map((timeFilter, index) => React.createElement(Tab, {\n    key: timeFilter,\n    label: timeFilter,\n    onClick: () => setValue(index),\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })))), React.createElement(ReportOverview, {\n    selected: selected,\n    timeFilters: timeFilters,\n    value: value,\n    amounts: amounts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(ThemeProvider, {\n    theme: whiteTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    fullWidth: true,\n    disableRipple: true,\n    color: \"primary\",\n    style: {\n      background: '#65BCBF',\n      borderRadius: 0\n    },\n    \"aria-label\": \"transaction amount filters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, transFilters.map(transFilter => React.createElement(Button, {\n    key: transFilter,\n    variant: selected === transFilter ? 'contained' : null,\n    color: selected === transFilter ? 'primary' : 'secondary',\n    onClick: () => setSelected(transFilter),\n    style: {\n      borderRadius: 0,\n      border: '1px solid rgba(255, 255, 255, 0.3)'\n    },\n    disableElevation: true,\n    disableFocusRipple: true,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, transFilter)))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Filter, {\n    value: value,\n    text: \"today\",\n    sortLatest: sortLatest,\n    sortDsc: sortDsc,\n    handleSortDate: () => {\n      setSortLatest(!sortLatest);\n      setSortColum('date');\n    },\n    handleSortAmount: () => {\n      setSortDsc(!sortDsc);\n      setSortColum('amount');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, lists.map(transaction => {\n    counter++;\n    return React.createElement(Transaction, {\n      key: transaction._id,\n      transaction: transaction,\n      date: true,\n      menu: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    });\n  }), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"No \", selected !== 'all' && selected, \" transaction\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), \"of the \", timeFilters[value])) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }) : 'No transaction')));\n};\n\nexport default Report;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx"],"names":["React","Fragment","useState","useEffect","useContext","GlobalContext","checkWeek","checkDay","checkMonth","checkYear","sortDateDsc","sortDateAsc","sortAmountDsc","sortAmountAsc","ReportOverview","Transaction","Filter","Tabs","Tab","Button","ButtonGroup","CircularProgress","whiteTheme","ThemeProvider","Report","loading","transactions","getTransactions","value","setValue","selected","setSelected","sortColumn","setSortColum","sortLatest","setSortLatest","sortDsc","setSortDsc","timeFilters","transFilters","amounts","counter","lists","filter","transaction","date","push","amount","sort","a","b","map","timeFilter","index","background","borderRadius","transFilter","border","length","_id"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { checkWeek, checkDay, checkMonth, checkYear, sortDateDsc, sortDateAsc, sortAmountDsc, sortAmountAsc } from '../utils/calculation';\nimport ReportOverview from './ReportOverview';\nimport Transaction from './common/Transaction';\nimport Filter from './common/Filter';\nimport { Tabs, Tab, Button, ButtonGroup, CircularProgress } from '@material-ui/core';\nimport { whiteTheme } from '../utils/colorTheme.js';\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst Report = () => {\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [value, setValue] = useState(0);\n  const [selected, setSelected] = useState('all');\n  const [sortColumn, setSortColum] = useState('date');\n  const [sortLatest, setSortLatest] = useState(true);\n  const [sortDsc, setSortDsc] = useState(true);\n\n  const timeFilters = ['day', 'week', 'month', 'year'];\n  const transFilters = ['all', 'income', 'expense'];\n  const amounts = [];\n  let counter = 0;\n\n  const lists = transactions\n    .filter(transaction => {\n      const date = transaction.date;\n      if (value === 0) return checkDay(date);\n      if (value === 1) return checkWeek(date);\n      if (value === 2) return checkMonth(date);\n      if (value === 3) return checkYear(date);\n      return transaction;\n    })\n    .filter(transaction => {\n      amounts.push(transaction.amount);\n      switch (selected) {\n        case 'income':\n          return transaction.amount > 0;\n        case 'expense':\n          return transaction.amount < 0;\n        default:\n          return transaction;\n      }\n    })\n    .sort((a, b) => {\n      if (sortColumn === 'date') {\n        return sortLatest ? sortDateDsc(a, b) : sortDateAsc(a, b);\n      }\n      return sortDsc ? sortAmountDsc(a, b) : sortAmountAsc(a, b);\n    });\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n\n  return (\n    <Fragment>\n      <div className='plus-bg time-bar'>\n        <Tabs value={value} variant=\"fullWidth\" aria-label=\"time selectors\">\n          {timeFilters.map((timeFilter, index) => \n            <Tab \n              key={timeFilter} label={timeFilter} \n              onClick={() => setValue(index)} \n              disableFocusRipple disableRipple\n            />\n          )}\n        </Tabs>\n      </div>\n\n      <ReportOverview \n        selected={selected} \n        timeFilters={timeFilters} \n        value={value} \n        amounts={amounts}\n      />\n      \n      <ThemeProvider theme={whiteTheme}>\n        <ButtonGroup\n          fullWidth disableRipple\n          color='primary'\n          style={{ background: '#65BCBF', borderRadius: 0 }}\n          aria-label='transaction amount filters'\n        >\n          {transFilters.map(transFilter => (\n            <Button\n              key={transFilter}\n              variant={selected === transFilter ? 'contained' : null}\n              color={selected === transFilter ? 'primary' : 'secondary'}\n              onClick={() => setSelected(transFilter)}\n              style={{ \n                borderRadius: 0, \n                border: '1px solid rgba(255, 255, 255, 0.3)'\n              }}\n              disableElevation disableFocusRipple disableRipple\n            >\n              {transFilter}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </ThemeProvider>\n\n      <div className='container'>\n\n        <Filter\n          value={value}\n          text=\"today\"\n          sortLatest={sortLatest}\n          sortDsc={sortDsc}\n          handleSortDate={() => {\n            setSortLatest(!sortLatest); setSortColum('date')\n          }}\n          handleSortAmount={() => {\n            setSortDsc(!sortDsc); setSortColum('amount')\n          }}\n        />\n\n        {transactions.length > 0 ? (\n          <ul className='list'>\n            {lists\n              .map(transaction => {\n                counter++;\n                return (\n                  <Transaction key={transaction._id} transaction={transaction} date menu />\n                );\n              })}\n            {counter === 0 && (\n              <div className='list-status'>\n                No {selected !== 'all' && selected} transaction<br/>\n                of the {timeFilters[value]}\n              </div>\n            )}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? <CircularProgress color='primary'/>\n              : 'No transaction'}\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Report;"]},"metadata":{},"sourceType":"module"}