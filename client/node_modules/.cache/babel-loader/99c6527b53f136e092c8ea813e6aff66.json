{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst TransactionList = () => {\n  const {\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [loading, setLoading] = useState(true);\n  const transFilters = ['all', 'income', 'expense'];\n  useEffect(() => {\n    setLoading(true);\n    getTransactions(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    fullWidth: true,\n    color: \"primary\",\n    \"aria-label\": \"outlined primary button group\",\n    style: {\n      marginBottom: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, transFilters.map(transFilter => React.createElement(Button, {\n    key: transFilter,\n    disableElevation: true,\n    variant: selected === transFilter ? 'contained' : null,\n    color: selected === transFilter ? 'primary' : null,\n    onClick: () => setSelected(transFilter),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, transFilter))), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, selected === 'all' ? transactions.map(transaction => React.createElement(Transaction, {\n    key: transaction._id,\n    transaction: transaction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })) : transactions.filter(transaction => selected === 'income' ? transaction.amount > 0 : transaction.amount < 0).map(transaction => React.createElement(Transaction, {\n    key: transaction._id,\n    transaction: transaction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      height: '56px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })) : loading ? React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: 'auto',\n      marginBottom: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"No \", selected !== 'all' ? selected : null, \" transaction\"));\n};\n\nexport default TransactionList;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/TransactionList.jsx"],"names":["React","useState","useContext","useEffect","GlobalContext","Transaction","Button","ButtonGroup","CircularProgress","TransactionList","transactions","getTransactions","selected","setSelected","loading","setLoading","transFilters","marginBottom","map","transFilter","length","transaction","_id","filter","amount","height","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst TransactionList = () => {\n  const { transactions, getTransactions } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [loading, setLoading] = useState(true);\n\n  const transFilters = ['all', 'income', 'expense'];\n\n  useEffect(() => {\n    setLoading(true);\n    getTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <ButtonGroup \n        fullWidth color=\"primary\" \n        aria-label=\"outlined primary button group\"\n        style={{ marginBottom: '10px' }}\n      >\n        {transFilters.map(transFilter =>\n          <Button \n            key={transFilter}\n            disableElevation\n            variant={selected === transFilter ? 'contained' : null} \n            color={selected === transFilter ? 'primary' : null}  \n            onClick={() => setSelected(transFilter)}\n          >\n            {transFilter}\n          </Button>\n        )}\n      </ButtonGroup>\n\n      {transactions.length > 0\n        ? (<ul className='list'>\n            {selected === 'all' \n              ? transactions\n                .map(transaction => (\n                  <Transaction key={transaction._id} transaction={transaction} />\n                ))\n              : transactions\n                .filter(transaction => selected === 'income'\n                  ? (transaction.amount > 0)\n                  : (transaction.amount < 0) \n                )\n                .map(transaction => (\n                  <Transaction key={transaction._id} transaction={transaction} />\n                ))\n            }\n            <div style={{ height: '56px' }} /> \n          </ul>)\n        : loading \n        ? (<div style={{ \n            textAlign: 'center',\n            marginTop: 'auto',\n            marginBottom: 'auto',\n          }}>\n            <CircularProgress color='secondary' />\n          </div>)\n        : (<div>No {selected !== 'all' ? selected : null} transaction</div>)\n      }\n\n\n\n    </div>\n  );\n};\n\nexport default TransactionList;\n"]},"metadata":{},"sourceType":"module"}