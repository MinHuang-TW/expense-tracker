{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { Button, ButtonGroup, CircularProgress } from '@material-ui/core';\n\nconst Report = () => {\n  const [value, setValue] = useState(3);\n  const {\n    loading,\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [progress, setProgress] = useState(0);\n  const today = new Date();\n\n  const parseDate = data => data.slice(0, 10).split('-');\n\n  const transFilters = ['all', 'income', 'expense'];\n  let counter = 0;\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    const tick = () => {\n      setProgress(oldProgress => oldProgress >= 100 ? 0 : oldProgress + 1);\n    };\n\n    const timer = setInterval(tick, 20);\n    getTransactions();\n    return () => {\n      clearInterval(timer);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    variant: \"fullWidth\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    onChange: handleChange,\n    \"aria-label\": \"disabled tabs example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    label: \"YEAR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    label: \"MONTH\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    label: \"WEEK\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    label: \"DAY\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    fullWidth: true,\n    disableRipple: true,\n    color: \"primary\",\n    \"aria-label\": \"outlined primary button group\",\n    style: {\n      marginBottom: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, transFilters.map(transFilter => React.createElement(Button, {\n    key: transFilter,\n    style: {\n      borderRadius: 0\n    },\n    disableElevation: true,\n    disableFocusRipple: true,\n    disableRipple: true,\n    variant: selected === transFilter ? 'contained' : null,\n    color: selected === transFilter ? 'primary' : null,\n    onClick: () => setSelected(transFilter),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, transFilter))), transactions.length > 0 ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, transactions.filter(transaction => {\n    const date = parseDate(transaction.date);\n    if (value === 0) return date[0] === today.getFullYear();\n    if (value === 1) return date[1] - 1 === today.getMonth();\n    if (value === 2) return date[2] === today.getMonth();\n    if (value === 3) return date[3] === today.getDate();\n  }).filter(transaction => {\n    switch (selected) {\n      case 'income':\n        return transaction.amount > 0;\n\n      case 'expense':\n        return transaction.amount < 0;\n\n      default:\n        return transaction;\n    }\n  }).sort((a, b) => {\n    let dateA = new Date(a.date);\n    let dateB = new Date(b.date);\n    if (dateA < dateB) return 1;\n    if (dateA > dateB) return -1;\n    return 0;\n  }).map(transaction => {\n    counter++;\n    return React.createElement(Transaction, {\n      key: transaction._id,\n      transaction: transaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    });\n  }), counter === 0 && React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"No \", selected, \" transaction\")) : React.createElement(\"div\", {\n    className: \"list-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    variant: \"determinate\",\n    value: progress,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }) : 'No transaction')));\n};\n\nexport default Report;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Report.jsx"],"names":["React","Fragment","useState","useEffect","useContext","GlobalContext","Transaction","Tabs","Tab","Button","ButtonGroup","CircularProgress","Report","value","setValue","loading","transactions","getTransactions","selected","setSelected","progress","setProgress","today","Date","parseDate","data","slice","split","transFilters","counter","handleChange","event","newValue","tick","oldProgress","timer","setInterval","clearInterval","marginBottom","map","transFilter","borderRadius","length","filter","transaction","date","getFullYear","getMonth","getDate","amount","sort","a","b","dateA","dateB","_id"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { Button, ButtonGroup, CircularProgress } from '@material-ui/core';\n\nconst Report = () => {\n  const [value, setValue] = useState(3);\n  const { loading, transactions, getTransactions } = useContext(GlobalContext);\n  const [selected, setSelected] = useState('all');\n  const [progress, setProgress] = useState(0);\n\n  const today = new Date();\n  const parseDate = data => data.slice(0, 10).split('-');\n\n  const transFilters = ['all', 'income', 'expense'];\n  let counter = 0;\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    const tick = () => {\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\n    };\n    const timer = setInterval(tick, 20);\n\n    getTransactions();\n\n    return () => {\n      clearInterval(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <Tabs\n        value={value} variant='fullWidth'\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n      >\n        <Tab label=\"YEAR\" />\n        <Tab label=\"MONTH\" />\n        <Tab label=\"WEEK\" />\n        <Tab label=\"DAY\" />\n      </Tabs>\n\n      <div className='container'>\n        <ButtonGroup\n          fullWidth disableRipple\n          color='primary'\n          aria-label='outlined primary button group'\n          style={{ marginBottom: '10px' }}\n        >\n          {transFilters.map(transFilter => (\n            <Button\n              key={transFilter}\n              style={{ borderRadius: 0 }}\n              disableElevation disableFocusRipple disableRipple\n              variant={selected === transFilter ? 'contained' : null}\n              color={selected === transFilter ? 'primary' : null}\n              onClick={() => setSelected(transFilter)}\n            >\n              {transFilter}\n            </Button>\n          ))}\n        </ButtonGroup>\n\n        {transactions.length > 0 ? (\n          <ul className='list'>\n            {transactions\n              .filter(transaction => {\n                const date = parseDate(transaction.date);\n                if (value === 0) return date[0] === today.getFullYear();\n                if (value === 1) return date[1] - 1 === today.getMonth();\n                if (value === 2) return date[2] === today.getMonth();\n                if (value === 3) return date[3] === today.getDate();\n              })\n              .filter(transaction => {\n                switch (selected) {\n                  case 'income':\n                    return transaction.amount > 0;\n                  case 'expense':\n                    return transaction.amount < 0;\n                  default:\n                    return transaction;\n                }\n              })\n              .sort((a, b) => {\n                let dateA = new Date(a.date);\n                let dateB = new Date(b.date);\n                \n                if (dateA < dateB) return 1;\n                if (dateA > dateB) return -1;\n                return 0;\n              })\n              .map(transaction => {\n                counter++;\n                return (\n                  <Transaction key={transaction._id} transaction={transaction} />\n                );\n              })}\n            {counter === 0 && (\n              <div className='list-status'>No {selected} transaction</div>\n            )}\n          </ul>\n        ) : (\n          <div className='list-status'>\n            {loading \n              ? <CircularProgress variant='determinate' value={progress} color='secondary'/>\n              : 'No transaction'}\n          </div>\n        )}\n      </div>\n\n\n    </Fragment>\n  );\n}\n\nexport default Report;"]},"metadata":{},"sourceType":"module"}