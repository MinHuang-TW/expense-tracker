{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/Header.jsx\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer'; // import List from '@material-ui/core/List';\n// import Divider from '@material-ui/core/Divider';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import MailIcon from '@material-ui/icons/Mail';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  list: {\n    width: 280\n  },\n  fullList: {\n    width: 'auto'\n  }\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    left: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => React.createElement(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  });\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"fixed\",\n    style: {\n      boxShadow: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: toggleDrawer('left', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Expense Tracker\"))), React.createElement(Drawer, {\n    anchor: \"left\",\n    open: state['left'],\n    onClose: toggleDrawer('left', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, list('left')));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/Header.jsx"],"names":["React","useState","clsx","AppBar","Toolbar","Typography","makeStyles","IconButton","MenuIcon","Drawer","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","list","width","fullList","Header","classes","state","setState","left","toggleDrawer","anchor","open","event","type","key","boxShadow"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\n// import List from '@material-ui/core/List';\n// import Divider from '@material-ui/core/Divider';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import MailIcon from '@material-ui/icons/Mail';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 280,\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  const [state, setState] = useState({ left: false });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = anchor => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      {/* <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List> */}\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" style={{ boxShadow: 'none' }}>\n        <Toolbar>\n          <IconButton \n            edge=\"start\" \n            className={classes.menuButton} \n            color=\"inherit\" \n            aria-label=\"menu\" \n            onClick={toggleDrawer('left', true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>Expense Tracker</Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer anchor='left' open={state['left']} onClose={toggleDrawer('left', false)}>\n        {list('left')}\n      </Drawer>\n    </div>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}