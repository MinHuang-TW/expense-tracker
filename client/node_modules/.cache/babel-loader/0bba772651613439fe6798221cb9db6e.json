{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/AddTransaction.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { makeStyles, withStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from \"@material-ui/core\";\nimport cyan from '@material-ui/core/colors/cyan';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nconst defaultMaterialTheme = createMuiTheme({\n  palette: {\n    primary: cyan\n  }\n}); // const CssTextField = withStyles({\n//   root: {\n//     '& label.Mui-focused': {\n//       color: '#00bcd4',\n//     },\n//     '& .MuiInput-underline:after': {\n//       borderBottomColor: '#00bcd4',\n//     },\n//   },\n// })(TextField);\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n    boxShadow: 'none',\n    background: '#00bcd4'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  root: {\n    '& > *': {\n      width: '80vw'\n    }\n  }\n}));\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n});\n\nconst AddTransaction = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(null);\n  const [date, setDate] = useState(new Date());\n  const {\n    addTransaction\n  } = useContext(GlobalContext);\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount\n    };\n    addTransaction(newTransaction);\n    setAmount(null);\n    setText('');\n    setDate(null);\n    setOpen(false);\n  };\n\n  return React.createElement(ThemeProvider, {\n    theme: defaultMaterialTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Add New Transaction\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: handleClose,\n    \"aria-label\": \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Add New Transaction\"))), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    style: {\n      marginTop: '10vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Description\",\n    onChange: e => setText(e.target.value),\n    className: classes.margin,\n    style: {\n      marginTop: '50px',\n      width: '350px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Amount\",\n    onChange: e => setAmount(e.target.value),\n    className: classes.margin,\n    style: {\n      marginTop: '50px',\n      width: '350px'\n    },\n    helperText: \"( positive - income, negative - expense )\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true // variant=\"inline\"\n    ,\n    format: \"MM/dd/yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    label: \"Date\",\n    value: date,\n    onChange: date => setDate(date),\n    style: {\n      marginTop: '50px',\n      width: '350px'\n    },\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn\",\n    style: {\n      opacity: !text || !amount ? 0.3 : 1,\n      cursor: !text || !amount ? 'default' : 'pointer',\n      width: '350px'\n    },\n    disabled: !text || !amount ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Confirm\")))));\n};\n\nexport default AddTransaction;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/AddTransaction.jsx"],"names":["React","useState","useContext","GlobalContext","makeStyles","withStyles","ThemeProvider","createMuiTheme","cyan","Dialog","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","TextField","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","defaultMaterialTheme","palette","primary","useStyles","theme","appBar","position","boxShadow","background","title","marginLeft","spacing","flex","root","width","Transition","forwardRef","props","ref","AddTransaction","text","setText","amount","setAmount","date","setDate","Date","addTransaction","classes","open","setOpen","handleClickOpen","handleClose","onSubmit","e","preventDefault","newTransaction","id","Math","floor","random","marginTop","display","flexDirection","alignItems","target","value","margin","opacity","cursor"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { makeStyles, withStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from \"@material-ui/core\";\nimport cyan from '@material-ui/core/colors/cyan'\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst defaultMaterialTheme = createMuiTheme({\n  palette: {\n    primary: cyan,\n  },\n});\n\n// const CssTextField = withStyles({\n//   root: {\n//     '& label.Mui-focused': {\n//       color: '#00bcd4',\n//     },\n//     '& .MuiInput-underline:after': {\n//       borderBottomColor: '#00bcd4',\n//     },\n//   },\n// })(TextField);\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n    boxShadow: 'none',\n    background: '#00bcd4'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  root: {\n    '& > *': {\n      width: '80vw',\n    },\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst AddTransaction = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(null);\n  const [date, setDate] = useState(new Date());\n  const { addTransaction } = useContext(GlobalContext);\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount\n    };\n    addTransaction(newTransaction);\n    setAmount(null);\n    setText('');\n    setDate(null);\n\n    setOpen(false);\n  };\n\n  return (\n    <ThemeProvider theme={defaultMaterialTheme}>\n      <button className='btn' onClick={handleClickOpen}>\n        Add New Transaction\n      </button>\n      \n      <div>\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                Add New Transaction\n              </Typography>\n            </Toolbar>\n          </AppBar>\n\n          <form \n            onSubmit={onSubmit}\n            className={classes.root} \n            noValidate autoComplete=\"off\"\n            style={{ \n              marginTop: '10vh',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <TextField \n              label=\"Description\" \n              onChange={e => setText(e.target.value)}\n              className={classes.margin}\n              style={{ marginTop: '50px', width: '350px' }}\n            />\n            <TextField \n              label=\"Amount\" \n              onChange={e => setAmount(e.target.value)} \n              className={classes.margin}\n              style={{ marginTop: '50px', width: '350px' }}\n              helperText=\"( positive - income, negative - expense )\"\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                disableToolbar\n                // variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-dialog\"\n                label=\"Date\"\n                value={date}\n                onChange={(date) => setDate(date)}\n                style={{ marginTop: '50px', width: '350px' }}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </MuiPickersUtilsProvider>\n\n            <button \n              className='btn' \n              style={{ \n                opacity: !text || !amount ? 0.3 : 1,\n                cursor: !text || !amount ? 'default' : 'pointer',\n                width: '350px'\n              }}\n              disabled={!text || !amount ? true : false}\n            >\n              Confirm\n            </button>\n          </form>\n        </Dialog>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default AddTransaction;\n"]},"metadata":{},"sourceType":"module"}