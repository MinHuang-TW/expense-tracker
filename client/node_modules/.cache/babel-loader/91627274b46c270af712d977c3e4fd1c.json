{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/common/BarChart.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nconst BarChart = ({\n  data: originalData,\n  select,\n  width,\n  height\n}) => {\n  const ref = useRef(null);\n  const weekList = moment.weekdays();\n  const monthList = moment.months();\n  const expenseColor = '#f8777d';\n  const colorList = ['#fff', expenseColor];\n  useEffect(() => {\n    const data = originalData;\n    const group = d3.select(ref.current); // const labels = data.map(d => d.text);\n\n    const labels = select === 0 ? weekList : select === 1 ? data.map(d => d.text) : monthList;\n    const maxAmount = d3.max(data, d => Math.abs(d.amount));\n    const yScale = d3.scaleLinear().domain([0, maxAmount]).range([0, height - 15]);\n    const xScale = d3.scaleBand().domain(labels).range([0, width]);\n    const xAxis = d3.axisBottom(xScale).tickSize(0);\n    group.select('.x-axis').style('transform', `translateY(${+height - 14}px)`).style('color', 'white').call(xAxis).call(g => g.select(\".domain\").remove()).selectAll('.x-axis .tick text').call(t => t.each(function (d) {\n      const self = d3.select(this);\n      const s = self.text().split(' - ');\n      self.text('');\n      self.append(\"tspan\").attr(\"x\", 0).attr(\"dy\", \"1em\").text(select === 1 ? s[0] : s[0].slice(0, 3));\n      select === 1 && self.append(\"tspan\").attr(\"x\", 0).attr(\"dy\", \"1em\").text('- ' + s[1]);\n    }));\n    group.selectAll('.bar').data(data).join('rect').attr('class', 'bar').style('transform', 'scale(1, -1)').attr('x', d => xScale.bandwidth() / 2 - 3 + xScale(d.text)).attr('y', -height + 15).attr('width', 6).attr('height', 0).attr('fill', d => d.amount < 0 ? colorList[0] : colorList[1]).transition().duration(1000).attr('height', d => yScale(Math.abs(d.amount))); // eslint-disable-next-line\n  }, [originalData]);\n  return React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    ref: ref,\n    style: {\n      margin: 'auto',\n      overflow: 'visible'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }));\n};\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/common/BarChart.jsx"],"names":["React","useEffect","useRef","d3","moment","BarChart","data","originalData","select","width","height","ref","weekList","weekdays","monthList","months","expenseColor","colorList","group","current","labels","map","d","text","maxAmount","max","Math","abs","amount","yScale","scaleLinear","domain","range","xScale","scaleBand","xAxis","axisBottom","tickSize","style","call","g","remove","selectAll","t","each","self","s","split","append","attr","slice","join","bandwidth","transition","duration","margin","overflow"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nconst BarChart = ({ data : originalData, select, width, height }) => {\n  const ref = useRef(null);\n  const weekList = moment.weekdays();\n  const monthList = moment.months();\n  const expenseColor = '#f8777d';\n  const colorList = [ '#fff', expenseColor ];\n\n  useEffect(() => {\n    const data = originalData;\n    const group = d3.select(ref.current);\n    // const labels = data.map(d => d.text);\n    const labels = select === 0\n      ? weekList : select === 1 \n      ? data.map(d => d.text) : monthList;\n    const maxAmount = d3.max(data, d => Math.abs(d.amount));\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, maxAmount])\n      .range([0, height - 15]);\n\n    const xScale = d3\n      .scaleBand()\n      .domain(labels)\n      .range([0, width]);\n    \n    const xAxis = d3\n      .axisBottom(xScale)\n      .tickSize(0);\n\n    group\n      .select('.x-axis')\n      .style('transform', `translateY(${+height - 14}px)`)\n      .style('color', 'white')\n      .call(xAxis)\n      .call(g => g.select(\".domain\").remove())\n      .selectAll('.x-axis .tick text')\n      .call(t => t.each(function(d) {\n        const self = d3.select(this);\n        const s = self.text().split(' - ');\n        self.text('');\n        self.append(\"tspan\")\n          .attr(\"x\", 0)\n          .attr(\"dy\",\"1em\")\n          .text(select === 1 ? s[0] : s[0].slice(0, 3));\n        select === 1 && self.append(\"tspan\")\n          .attr(\"x\", 0)\n          .attr(\"dy\",\"1em\")\n          .text('- ' + s[1]);\n      }));\n\n    group\n      .selectAll('.bar')\n      .data(data)\n      .join('rect')\n      .attr('class', 'bar')\n      .style('transform', 'scale(1, -1)')\n      .attr('x', d => xScale.bandwidth() / 2 - 3 + xScale(d.text))\n      .attr('y', -height + 15)\n      .attr('width', 6)\n      .attr('height', 0)\n      .attr('fill', d => d.amount < 0 ? colorList[0] : colorList[1])\n      .transition()\n      .duration(1000)\n      .attr('height', d => yScale(Math.abs(d.amount)));\n\n  // eslint-disable-next-line\n  }, [originalData])\n\n  return ( \n    <svg\n      width={width} \n      height={height} \n      ref={ref}\n      style={{ margin: 'auto', overflow: 'visible' }}\n    >\n      <g className='x-axis' />\n    </svg>\n  );\n}\n\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}