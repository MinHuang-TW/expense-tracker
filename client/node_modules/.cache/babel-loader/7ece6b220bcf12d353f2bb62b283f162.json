{"ast":null,"code":"var _jsxFileName = \"/Users/Min/Desktop/expense-tracker/client/src/components/common/BarChart.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nconst BarChart = ({\n  data: originalData,\n  width,\n  height\n}) => {\n  const ref = useRef(null); // const cache = useRef(originalData);\n\n  const colors = ['rgba(255, 255, 255, 1)', 'rgba(255, 255, 255, 0.3)'];\n  useEffect(() => {\n    const data = originalData; // const prevData = createPie(cache.current);\n\n    const group = d3.select(ref.current);\n    const labels = data.map(d => d.text); // const labels = moment.weekdaysMin();\n\n    console.log(moment.weekdaysShort());\n    console.log(moment.monthsShort('-MMM-'));\n    const maxAmount = d3.max(data, d => Math.abs(d.amount));\n    const yScale = d3.scaleLinear().domain([0, maxAmount]).range([0, height]);\n    const xScale = d3.scaleBand().domain(labels).range([0, width]);\n    const xAxis = d3.axisBottom(xScale).tickSize(0);\n    group.select('.x-axis').style('transform', `translateY(${+height + 2}px)`).style('color', 'white').call(xAxis).call(g => g.select(\".domain\").remove()).selectAll('.x-axis .tick text').call(t => t.each(function (d) {\n      // for each one\n      const self = d3.select(this);\n      const s = self.text().split(' - ');\n      self.text(''); // clear it out\n\n      self.append(\"tspan\") // insert two tspans\n      .attr(\"x\", 0).attr(\"dy\", \"1em\").text(s[0]);\n      self.append(\"tspan\").attr(\"x\", 0).attr(\"dy\", \"1em\").text(s[1]);\n    }));\n    group.selectAll('.bar').data(data).join('rect').attr('class', 'bar').style('transform', 'scale(1, -1)').attr('x', d => xScale.bandwidth() / 2 - 3 + xScale(d.text)) // .attr('x', d => xScale(d.text))\n    .attr('y', -height).attr('width', 6) // .attr('width', xScale.bandwidth())\n    .attr('height', d => yScale(Math.abs(d.amount))).attr('fill', d => d.amount < 0 ? colors[0] : colors[1]); //#region \n    // const groupWithData = group\n    //   .selectAll('.rect')\n    //   .data(data);\n    // console.log(groupWithData)\n    // groupWithData\n    //   .exit()\n    //   .remove();\n    // const groupWithUpdate = groupWithData\n    //   .enter()\n    //   .append('g')\n    //   .attr('class', 'rect')\n    // const rect = groupWithUpdate\n    //   .append('rect')\n    //   .merge(groupWithData.select('rect'));\n    // rect\n    //   .attr('width', 6)\n    //   .attr('height', d => yScale(Math.abs(d.amount)))\n    //   .attr('fill', d => d.amount < 0 ? colors[0] : colors[1])\n    //   .attr('x', d => xScale.bandwidth() / 2 - 3 + xScale(d.text))\n    //   .attr('y', d => height - yScale(Math.abs(d.amount)));\n    //#endregion\n    // eslint-disable-next-line\n  }, [originalData]);\n  return React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    ref: ref,\n    style: {\n      margin: 'auto',\n      overflow: 'visible'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }));\n};\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/Min/Desktop/expense-tracker/client/src/components/common/BarChart.jsx"],"names":["React","useEffect","useRef","d3","moment","BarChart","data","originalData","width","height","ref","colors","group","select","current","labels","map","d","text","console","log","weekdaysShort","monthsShort","maxAmount","max","Math","abs","amount","yScale","scaleLinear","domain","range","xScale","scaleBand","xAxis","axisBottom","tickSize","style","call","g","remove","selectAll","t","each","self","s","split","append","attr","join","bandwidth","margin","overflow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAGC,YAAT;AAAuBC,EAAAA,KAAvB;AAA8BC,EAAAA;AAA9B,CAAD,KAA4C;AAC3D,QAAMC,GAAG,GAAGR,MAAM,CAAC,IAAD,CAAlB,CAD2D,CAE3D;;AAEA,QAAMS,MAAM,GAAG,CACb,wBADa,EAEb,0BAFa,CAAf;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,IAAI,GAAGC,YAAb,CADc,CAEd;;AACA,UAAMK,KAAK,GAAGT,EAAE,CAACU,MAAH,CAAUH,GAAG,CAACI,OAAd,CAAd;AACA,UAAMC,MAAM,GAAGT,IAAI,CAACU,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,IAAhB,CAAf,CAJc,CAMd;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAM,CAACiB,aAAP,EAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAM,CAACkB,WAAP,CAAmB,OAAnB,CAAZ;AACA,UAAMC,SAAS,GAAGpB,EAAE,CAACqB,GAAH,CAAOlB,IAAP,EAAaW,CAAC,IAAIQ,IAAI,CAACC,GAAL,CAAST,CAAC,CAACU,MAAX,CAAlB,CAAlB;AAEA,UAAMC,MAAM,GAAGzB,EAAE,CACd0B,WADY,GAEZC,MAFY,CAEL,CAAC,CAAD,EAAIP,SAAJ,CAFK,EAGZQ,KAHY,CAGN,CAAC,CAAD,EAAItB,MAAJ,CAHM,CAAf;AAKA,UAAMuB,MAAM,GAAG7B,EAAE,CACd8B,SADY,GAEZH,MAFY,CAELf,MAFK,EAGZgB,KAHY,CAGN,CAAC,CAAD,EAAIvB,KAAJ,CAHM,CAAf;AAKA,UAAM0B,KAAK,GAAG/B,EAAE,CACbgC,UADW,CACAH,MADA,EAEXI,QAFW,CAEF,CAFE,CAAd;AAIAxB,IAAAA,KAAK,CACFC,MADH,CACU,SADV,EAEGwB,KAFH,CAES,WAFT,EAEuB,cAAa,CAAC5B,MAAD,GAAU,CAAE,KAFhD,EAGG4B,KAHH,CAGS,OAHT,EAGkB,OAHlB,EAIGC,IAJH,CAIQJ,KAJR,EAKGI,IALH,CAKQC,CAAC,IAAIA,CAAC,CAAC1B,MAAF,CAAS,SAAT,EAAoB2B,MAApB,EALb,EAMGC,SANH,CAMa,oBANb,EAOGH,IAPH,CAOQI,CAAC,IACLA,CAAC,CAACC,IAAF,CAAO,UAAS1B,CAAT,EAAY;AAAE;AACnB,YAAM2B,IAAI,GAAGzC,EAAE,CAACU,MAAH,CAAU,IAAV,CAAb;AACA,YAAMgC,CAAC,GAAGD,IAAI,CAAC1B,IAAL,GAAY4B,KAAZ,CAAkB,KAAlB,CAAV;AACAF,MAAAA,IAAI,CAAC1B,IAAL,CAAU,EAAV,EAHiB,CAGF;;AACf0B,MAAAA,IAAI,CAACG,MAAL,CAAY,OAAZ,EAAqB;AAArB,OACGC,IADH,CACQ,GADR,EACa,CADb,EAEGA,IAFH,CAEQ,IAFR,EAEa,KAFb,EAGG9B,IAHH,CAGQ2B,CAAC,CAAC,CAAD,CAHT;AAIAD,MAAAA,IAAI,CAACG,MAAL,CAAY,OAAZ,EACGC,IADH,CACQ,GADR,EACa,CADb,EAEGA,IAFH,CAEQ,IAFR,EAEa,KAFb,EAGG9B,IAHH,CAGQ2B,CAAC,CAAC,CAAD,CAHT;AAID,KAZD,CARJ;AAsBAjC,IAAAA,KAAK,CACF6B,SADH,CACa,MADb,EAEGnC,IAFH,CAEQA,IAFR,EAGG2C,IAHH,CAGQ,MAHR,EAIGD,IAJH,CAIQ,OAJR,EAIiB,KAJjB,EAKGX,KALH,CAKS,WALT,EAKsB,cALtB,EAMGW,IANH,CAMQ,GANR,EAMa/B,CAAC,IAAIe,MAAM,CAACkB,SAAP,KAAqB,CAArB,GAAyB,CAAzB,GAA6BlB,MAAM,CAACf,CAAC,CAACC,IAAH,CANrD,EAOE;AAPF,KAQG8B,IARH,CAQQ,GARR,EAQa,CAACvC,MARd,EASGuC,IATH,CASQ,OATR,EASiB,CATjB,EAUE;AAVF,KAWGA,IAXH,CAWQ,QAXR,EAWkB/B,CAAC,IAAIW,MAAM,CAACH,IAAI,CAACC,GAAL,CAAST,CAAC,CAACU,MAAX,CAAD,CAX7B,EAYGqB,IAZH,CAYQ,MAZR,EAYgB/B,CAAC,IAAIA,CAAC,CAACU,MAAF,GAAW,CAAX,GAAehB,MAAM,CAAC,CAAD,CAArB,GAA2BA,MAAM,CAAC,CAAD,CAZtD,EA/Cc,CA8Dd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACC,GAzFQ,EAyFN,CAACJ,YAAD,CAzFM,CAAT;AA2FA,SACE;AACE,IAAA,KAAK,EAAEC,KADT;AAEE,IAAA,MAAM,EAAEC,MAFV;AAGE,IAAA,GAAG,EAAEC,GAHP;AAIE,IAAA,KAAK,EAAE;AAAEyC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,QAAQ,EAAE;AAA5B,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CA9GD;;AAgHA,eAAe/C,QAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nconst BarChart = ({ data : originalData, width, height }) => {\n  const ref = useRef(null);\n  // const cache = useRef(originalData);\n\n  const colors = [\n    'rgba(255, 255, 255, 1)',\n    'rgba(255, 255, 255, 0.3)'\n  ];\n\n  useEffect(() => {\n    const data = originalData;\n    // const prevData = createPie(cache.current);\n    const group = d3.select(ref.current);\n    const labels = data.map(d => d.text);\n\n    // const labels = moment.weekdaysMin();\n    console.log(moment.weekdaysShort())\n    console.log(moment.monthsShort('-MMM-'))\n    const maxAmount = d3.max(data, d => Math.abs(d.amount));\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, maxAmount])\n      .range([0, height]);\n\n    const xScale = d3\n      .scaleBand()\n      .domain(labels)\n      .range([0, width]);\n    \n    const xAxis = d3\n      .axisBottom(xScale)\n      .tickSize(0);\n\n    group\n      .select('.x-axis')\n      .style('transform', `translateY(${+height + 2}px)`)\n      .style('color', 'white')\n      .call(xAxis)\n      .call(g => g.select(\".domain\").remove())\n      .selectAll('.x-axis .tick text')\n      .call(t =>               \n        t.each(function(d) { // for each one\n          const self = d3.select(this);\n          const s = self.text().split(' - ');\n          self.text(''); // clear it out\n          self.append(\"tspan\") // insert two tspans\n            .attr(\"x\", 0)\n            .attr(\"dy\",\"1em\")\n            .text(s[0]);\n          self.append(\"tspan\")\n            .attr(\"x\", 0)\n            .attr(\"dy\",\"1em\")\n            .text(s[1]);\n        }));\n\n    group\n      .selectAll('.bar')\n      .data(data)\n      .join('rect')\n      .attr('class', 'bar')\n      .style('transform', 'scale(1, -1)')\n      .attr('x', d => xScale.bandwidth() / 2 - 3 + xScale(d.text))\n      // .attr('x', d => xScale(d.text))\n      .attr('y', -height)\n      .attr('width', 6)\n      // .attr('width', xScale.bandwidth())\n      .attr('height', d => yScale(Math.abs(d.amount)))\n      .attr('fill', d => d.amount < 0 ? colors[0] : colors[1]);\n\n\n    //#region \n    // const groupWithData = group\n    //   .selectAll('.rect')\n    //   .data(data);\n    // console.log(groupWithData)\n    // groupWithData\n    //   .exit()\n    //   .remove();\n    \n    // const groupWithUpdate = groupWithData\n    //   .enter()\n    //   .append('g')\n    //   .attr('class', 'rect')\n\n    // const rect = groupWithUpdate\n    //   .append('rect')\n    //   .merge(groupWithData.select('rect'));\n\n    // rect\n    //   .attr('width', 6)\n    //   .attr('height', d => yScale(Math.abs(d.amount)))\n    //   .attr('fill', d => d.amount < 0 ? colors[0] : colors[1])\n    //   .attr('x', d => xScale.bandwidth() / 2 - 3 + xScale(d.text))\n    //   .attr('y', d => height - yScale(Math.abs(d.amount)));\n    //#endregion\n\n  // eslint-disable-next-line\n  }, [originalData])\n\n  return ( \n    <svg \n      width={width} \n      height={height} \n      ref={ref}\n      style={{ margin: 'auto', overflow: 'visible' }}\n    >\n      <g className='x-axis' />\n    </svg>\n  );\n}\n\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}